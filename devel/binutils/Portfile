# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 84744 2011-09-30 12:28:34Z jmr@macports.org $

PortSystem             1.0

name                   binutils
version                2.23.2
revision               1
description            FSF Binutils for native development.
long_description       Free Software Foundation development toolchain \
                       ("binutils") for native development. Tools are \
                       prefixed with "g" to avoid conflicts with original \
                       tools.

platforms              darwin
categories             devel
license                GPL-3+
maintainers            nomaintainer
homepage               http://www.gnu.org/software/${name}/${name}.html
master_sites           gnu:${name}

use_bzip2              yes

checksums              sha1    042c51073205ebaf88c272d6168f9deb71984b56 \
                       rmd160  9788e2a8c4a7c74360919347c3bc72040e87b898 \
                       sha256  fe914e56fed7a9ec2eb45274b1f2e14b0d8b4f41906a5194eac6883cfe5c1097

patchfiles-append      patch-configure.ac.diff

depends_build-append   port:intltool \
                       path:bin/makeinfo:texinfo \
                       port:autoconf264 \
                       port:automake17 \
                       port:flex \
                       port:byacc \
                       port:bison \
                       path:bin/nm:cctools \
                       path:bin/ld:ld64 \
                       path:bin/perl:perl5 \
                       port:expect \
                       bin:gm4:m4 \
                       port:gmake \
                       port:gsed \
                       port:gawk \
                       port:libtool

depends_skip_archcheck-append autoconf264

depends_lib-append     port:zlib \
                       port:libiconv \
                       port:gettext \
                       port:cloog \
                       port:polylib \
                       port:ppl \
                       port:gmp \
                       port:gmp-ecm \
                       path:lib/pkgconfig/bdw-gc.pc:boehmgc \
                       path:lib/libgcc/libgcc_s.1.dylib:libgcc \
                       port:libmpc \
                       port:mpfr \
                       port:isl

configure.args-append  --infodir='${prefix}/share/info' \
                       --mandir='${prefix}/share/man' \
                       --disable-werror \
                       --program-prefix=g \
                       --enable-shared \
                       --enable-gold=yes \
                       --enable-ld=yes \
                       --enable-libssp \
                       --enable-build-with-cxx \
                       --enable-build-poststage1-with-cxx \
                       --with-mpc=${prefix} \
                       --with-mpfr=${prefix} \
                       --with-gmp=${prefix} \
                       --with-ppl=${prefix} \
                       --enable-objc-gc \
                       --enable-lto \
                       --enable-dlltool=yes \
                       --enable-objdump=yes \
                       --enable-windres=yes \
                       --enable-windmc=yes \
                       --enable-bfd=yes \
                       --enable-gas=yes \
                       --enable-elfcpp=yes \
                       --enable-gprof=yes \
                       --disable-ppl-version-check \
                       --disable-cloog-version-check \
                       --enable-languages=all \
                       --enable-stage1-languages=all \
                       --enable-stage1-checking=all \
                       --with-gnu-ld \
                       --enable-plugins \
                       --enable-threads \
                       --with-zlib \
                       --enable-libquadmath \
                       --enable-libquadmath-support \
                       --enable-64-bit-bfd

configure.env-append   SED=${prefix}/bin/gsed \
                       MSGFMT=${prefix}/bin/msgfmt \
                       GMSGFMT=${prefix}/bin/msgfmt \
                       XGETTEXT=${prefix}/bin/xgettext \
                       MSGMERGE=${prefix}/bin/msgmerge \
                       MAKEINFO=${prefix}/bin/makeinfo \
                       INSTALLED_PRODUCT_ASIDES=YES \
                       RC_JASPER=YES \
                       RC_NONARCH_CFLAGS="${configure.optflags}" \
                       RC_XBS=YES \
                       SEPARATE_STRIP=YES \
                       UNAME_RELEASE="${os.version}" \
                       HOST_ARCHITECTURE="${configure.build_arch}"

platform darwin {
    configure.env-append \
                       RC_PRIVATE=/private \
                       UNAME_SYSNAME=Darwin \
                       NEXT_ROOT=""
}
platform macosx {
    configure.env-append \
                       RC_OS=macos \
                       RC_TARGET_CONFIG=MacOSX
}
if {[variant_isset universal]} {
    configure.env-append \
                       RC_ARCHS="${configure.universal_archs}"
} else {
    configure.env-append \
                       RC_ARCHS="${configure.build_arch}"
}

configure.cppflags-append \
                       -I${prefix}/include

configure.ldflags-append \
    -lgc \
    -lcloog-isl \
    -lgmp \
    -lisl \
    -lmpc \
    -lmpfr \
    -lppl \
    -L${prefix}/lib/libgcc

post-extract {
    ui_debug "This step has been moved to pre-patch instead."
}

# ...
pre-patch {
    system -W ${worksrcpath} "${prefix}/bin/autoscan264 >/dev/null"
    system -W ${worksrcpath} "${prefix}/bin/aclocal-17 -I config"
}

use_autoreconf         yes
autoreconf.cmd         ${prefix}/bin/autoreconf264
autoreconf.args        -fvi -Wall -Wno-obsolete
autoreconf.env-append  AUTOCONF=${prefix}/bin/autoconf264 \
                       AUTOHEADER=${prefix}/bin/autoheader264 \
                       AUTOM4TE=${prefix}/bin/autom4te264 \
                       AUTORECONF=${prefix}/bin/autoreconf264 \
                       AUTOSCAN=${prefix}/bin/autoscan264 \
                       AUTOUPDATE=${prefix}/bin/autoupdate264 \
                       IFNAMES=${prefix}/bin/ifnames264 \
                       ACLOCAL_AMFLAGS="-I./config --install"

pre-configure {
    system "echo \"ppl `ppl-config -V` is installed with: `${prefix}/bin/ppl-config -O`\""
}

post-configure {
    if {![catch "registry_active libc-headers"]} {
        ui_msg "Having libc-headers active can cause a lot of warnings \
               when building ${name}."
        ui_msg "You might want to deactivate the libc-headers port while \
               building ${name}, and then reactivate it later."
        ui_msg "Continuing building anyway for now though..."
    }
}

build.type             gnu
use_parallel_build     no
configure.ccache       no

# The Makefile runs configure again in subdirectories.
# It correcty passes along most configure variables (CFLAGS, LDFLAGS, ...),
#    but seems to neglect CPPFLAGS.
build.env-append       CPPFLAGS='-I${prefix}/include' \
                       CFLAGS='-I${prefix}/include' \
                       SED=${prefix}/bin/gsed \
                       MSGFMT=${prefix}/bin/msgfmt \
                       GMSGFMT=${prefix}/bin/msgfmt \
                       XGETTEXT=${prefix}/bin/xgettext \
                       MSGMERGE=${prefix}/bin/msgmerge \
                       INSTALLED_PRODUCT_ASIDES=YES \
                       RC_JASPER=YES \
                       RC_XBS=YES \
                       SEPARATE_STRIP=YES \
                       UNAME_RELEASE="${os.version}" \
                       HOST_ARCHITECTURE="${build_arch}"

platform darwin {
    build.env-append   RC_PRIVATE=/private \
                       UNAME_SYSNAME=Darwin \
                       NEXT_ROOT=""
}
platform macosx {
    build.env-append   RC_OS=macos \
                       RC_TARGET_CONFIG=MacOSX
}
if {[variant_isset universal]} {
    build.env-append \
                       RC_ARCHS="${configure.universal_archs}"
} else {
    build.env-append \
                       RC_ARCHS="${build_arch}"
}

post-build {
    configure.args-delete \
                       --enable-libssp \
                       --enable-build-with-cxx \
                       --enable-build-poststage1-with-cxx \
                       --with-mpc \
                       --with-mpfr \
                       --with-gmp \
                       --with-ppl \
                       --enable-objc-gc \
                       --enable-lto \
                       --enable-dlltool \
                       --enable-objdump \
                       --enable-windres \
                       --enable-windmc \
                       --enable-bfd \
                       --enable-gas \
                       --enable-elfcpp \
                       --enable-gprof \
                       --disable-ppl-version-check \
                       --disable-cloog-version-check \
                       --enable-languages \
                       --enable-stage1-languages \
                       --enable-stage1-checking \
                       --enable-libquadmath \
                       --enable-libquadmath-support
    configure.args-append --disable-option-checking
    system -W ${worksrcpath}/gprof "${configure.cmd} ${configure.args}"
    reinplace "s|CPPFLAGS \=|CPPFLAGS \= \-I${prefix}/include|" ${worksrcpath}/gprof/Makefile
    system -W ${worksrcpath}/gprof "${build.cmd} ${build.pre_args}"
    system -W ${worksrcpath}/gold "${configure.cmd} ${configure.args}"
    reinplace "s|CPPFLAGS \=|CPPFLAGS \= \-I${prefix}/include|" ${worksrcpath}/gold/Makefile
    reinplace "s|CPPFLAGS \=|CPPFLAGS \= \-I${prefix}/include|" ${worksrcpath}/gold/po/Makefile
    system -W ${worksrcpath}/gold/po "${build.cmd} ${build.pre_args}"
    system -W ${worksrcpath}/gas "${configure.cmd} ${configure.args}"
    reinplace "s|CPPFLAGS \=|CPPFLAGS \= \-I${prefix}/include|" ${worksrcpath}/gas/Makefile
    if {[catch "registry_active gdb"]} {
        system -W ${worksrcpath}/gas "${build.cmd} ${build.pre_args}"
    }
    system -W ${worksrcpath}/ld "${configure.cmd} ${configure.args}"
    reinplace "s|CPPFLAGS \=|CPPFLAGS \= \-I${prefix}/include|" ${worksrcpath}/ld/Makefile
    system -W ${worksrcpath}/ld "${build.cmd} ${build.pre_args}"
}

# Binutils violates the mtree layout by creating ${prefix}/<arch>/
destroot.violate_mtree yes

post-destroot {
    destroot.destdir prefix=${destroot}${prefix}
    system -W ${worksrcpath}/gprof "${destroot.cmd} ${destroot.pre_args} ${destroot.post_args}"
    if {[catch "registry_active gdb"]} {
        system -W ${worksrcpath}/gas "${destroot.cmd} ${destroot.pre_args} ${destroot.post_args}"
    }
    platform x86_64 {
        ui_msg "Trying to generate ld scripts in ${worksrcpath}/ld..."
        system -W ${worksrcpath}/ld "sh ./genscripts.sh . ${prefix}/lib ${prefix} ${prefix}/bin x86_64-apple-darwin${os.version} x86_64-apple-darwin${os.version} x86_64-apple-darwin${os.version} \"\" \"\" no \"\" ppcmacos ppcmacos 2>&1"
        system -W ${worksrcpath}/ld "sh ./genscripts.sh . ${prefix}/lib ${prefix} ${prefix}/bin x86_64-apple-darwin${os.version} x86_64-apple-darwin${os.version} x86_64-apple-darwin${os.version} \"\" \"\" no \"\" i386mach i386mach 2>&1"
        foreach ldscript [glob ${worksrcpath}/ld/ldscripts/.*] {
            if [file isfile ${ldscript}] {
                ui_debug "renaming ${ldscript} to [file dirname ${ldscript}]/apple_darwin[file tail ${ldscript}]"
                file rename ${ldscript} [file dirname ${ldscript}]/apple_darwin[file tail ${ldscript}]
            }
        }
    }
    platform powerpc {
        ui_msg "Trying to generate ld scripts in ${worksrcpath}/ld..."
        system -W ${worksrcpath}/ld "sh ./genscripts.sh . ${prefix}/lib ${prefix} ${prefix}/bin ppc-apple-darwin${os.version} ppc-apple-darwin${os.version} ppc-apple-darwin${os.version} \"\" \"\" no \"\" ppcmacos ppcmacos 2>&1"
        foreach ldscript [glob ${worksrcpath}/ld/ldscripts/.*] {
            if [file isfile ${ldscript}] {
                ui_debug "renaming ${ldscript} to [file dirname ${ldscript}]/apple_darwin[file tail ${ldscript}]"
                file rename ${ldscript} [file dirname ${ldscript}]/apple_darwin[file tail ${ldscript}]
            }
        }
    }
    platform i386 {
        ui_msg "Trying to generate ld scripts in ${worksrcpath}/ld..."
        system -W ${worksrcpath}/ld "sh ./genscripts.sh . ${prefix}/lib ${prefix} ${prefix}/bin i386-apple-darwin${os.version} i386-apple-darwin${os.version} i386-apple-darwin${os.version} \"\" \"\" no \"\" i386mach i386mach 2>&1"
        foreach ldscript [glob ${worksrcpath}/ld/ldscripts/.*] {
            if [file isfile ${ldscript}] {
                ui_debug "renaming ${ldscript} to [file dirname ${ldscript}]/apple_darwin[file tail ${ldscript}]"
                file rename ${ldscript} [file dirname ${ldscript}]/apple_darwin[file tail ${ldscript}]
            }
        }
    }
    platform x86_64 {
        system -W ${worksrcpath}/ld "${destroot.cmd} ${destroot.pre_args} ${destroot.post_args}"
        if {[file exists ${destroot}${prefix}/bin/ld]} {
            move ${destroot}${prefix}/bin/ld ${destroot}${prefix}/x86_64-apple-darwin${os.version}/bin
        } elseif {[file exists ${destroot}${prefix}/bin/ld-new]} {
            move ${destroot}${prefix}/bin/ld-new ${destroot}${prefix}/x86_64-apple-darwin${os.version}/bin
        }
    }
    platform i386 {
        system -W ${worksrcpath}/ld "${destroot.cmd} ${destroot.pre_args} ${destroot.post_args}"
        if {[file exists ${destroot}${prefix}/bin/ld]} {
            delete ${destroot}${prefix}/bin/ld
        } elseif {[file exists ${destroot}${prefix}/bin/ld-new]} {
            delete ${destroot}${prefix}/bin/ld-new
        }
    }
    platform powerpc {
        system -W ${worksrcpath}/ld "${destroot.cmd} ${destroot.pre_args} ${destroot.post_args}"
        if {[file exists ${destroot}${prefix}/bin/ld]} {
            delete ${destroot}${prefix}/bin/ld
        } elseif {[file exists ${destroot}${prefix}/bin/ld-new]} {
            delete ${destroot}${prefix}/bin/ld-new
        }
    }
    file rename ${destroot}${prefix}/share/info/standards.info ${destroot}${prefix}/share/info/${name}-standards.info
    file rename ${destroot}${prefix}/share/info/configure.info ${destroot}${prefix}/share/info/${name}-configure.info
    file rename ${destroot}${prefix}/share/info/bfd.info ${destroot}${prefix}/share/info/${name}-bfd.info
    xinstall -d ${destroot}${prefix}/include/binutils
    foreach header [glob ${destroot}${prefix}/include/*] {
        if [file isfile ${header}] {
            move ${header} ${destroot}${prefix}/include/${name}
        }
    }
    xinstall -d ${destroot}${prefix}/lib/binutils-staticlibs
    foreach library [glob ${destroot}${prefix}/lib/*.*a] {
        if [file isfile ${library}] {
            move ${library} ${destroot}${prefix}/lib/${name}-staticlibs
        }
    }
    eval reinplace "s|${prefix}/lib|${prefix}/lib/${name}-staticlibs|g" [glob ${destroot}${prefix}/lib/${name}-staticlibs/*.la]
    platform x86_64 {
        xinstall -d ${destroot}${prefix}/lib/x86_64/binutils
        move ${destroot}${prefix}/lib/x86_64/libiberty.a ${destroot}${prefix}/lib/x86_64/binutils
    }
    platform i386 {
        xinstall -d ${destroot}${prefix}/lib/i386/binutils
        if [file exists ${destroot}${prefix}/lib/x86_64/libiberty.a] {
            move ${destroot}${prefix}/lib/x86_64/libiberty.a ${destroot}${prefix}/lib/i386/binutils
        } elseif [file exists ${destroot}${prefix}/lib/i386/libiberty.a] {
            move ${destroot}${prefix}/lib/i386/libiberty.a ${destroot}${prefix}/lib/i386/binutils
        }
    }
    platform powerpc {
        xinstall -d ${destroot}${prefix}/lib/ppc/binutils
    }
    foreach msgs [glob ${destroot}${prefix}/share/locale/*/LC_MESSAGES/*.mo] {
        if [file isfile ${msgs}] {
            move ${msgs} [file dirname ${msgs}]/${name}-[file tail ${msgs}]
        }
    }
    platform x86_64 {
        xinstall -d ${destroot}${prefix}/x86_64-apple-darwin${os.version}/lib
    }
}

platform x86_64 {
    destroot.keepdirs ${destroot}${prefix}/x86_64-apple-darwin${os.version}/lib
}
platform i386 {
    if {![file exists ${destroot}${prefix}/lib/i386/binutils/libiberty.a]} {
        destroot.keepdirs ${destroot}${prefix}/lib/i386/binutils
    } elseif {![file exists ${destroot}${prefix}/lib/x86_64/binutils/libiberty.a]} {
        destroot.keepdirs ${destroot}${prefix}/lib/x86_64/binutils
    }
}
platform powerpc {
    destroot.keepdirs ${destroot}${prefix}/lib/ppc/binutils
}

