# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 84744 2011-09-30 12:28:34Z jmr@macports.org $

PortSystem             1.0

name                   binutils
version                2.21
revision               1

description            FSF Binutils for native development.
long_description       Free Software Foundation development toolchain ("binutils") \
                       for native development. Tools are prefixed with g to avoid \
                       conflicts with original tools.
platforms              darwin
categories             devel
license                GPL-3+
maintainers            nomaintainer
homepage               http://www.gnu.org/software/binutils/binutils.html
master_sites           gnu:binutils
use_bzip2              yes

checksums              sha1    ef93235588eb443e4c4a77f229a8d131bccaecc6 \
                       rmd160  8d2ebab3287a6283267879074b808d20fe9112b0

depends_build-append   port:intltool port:texinfo
depends_lib-append     port:zlib port:libiconv port:gettext port:autoconf264 \
                       port:flex port:byacc port:bison port:gmake port:cloog \
                       path:bin/nm:cctools port:gawk port:polylib port:gmp-ecm \
                       port:boehmgc path:lib/.libstdcxx:libstdcxx port:gsed port:automake17

configure.args         --infodir='${prefix}/share/info' \
                       --mandir='${prefix}/share/man' \
                       --disable-werror \
                       --program-prefix=g \
                       --enable-shared \
                       --enable-gold=yes \
                       --enable-ld=yes \
                       --enable-libssp \
                       --enable-build-with-cxx \
                       --with-mpc=${prefix} \
                       --with-mpfr=${prefix} \
                       --with-gmp=${prefix} \
                       --with-ppl=${prefix} \
                       --with-cloog=${prefix} \
                       --enable-objc-gc \
                       --enable-lto \
                       --enable-dlltool=yes \
                       --enable-objdump=yes \
                       --enable-windres=yes \
                       --enable-windmc=yes \
                       --enable-bfd=yes \
                       --enable-gas=yes \
                       --enable-elfcpp=yes \
                       --enable-gprof=yes \
                       --disable-ppl-version-check \
                       --disable-cloog-version-check \
                       --enable-stage1-languages=all \
                       --enable-stage1-checking=all \
                       --with-gnu-ld \
                       --enable-plugins \
                       --enable-threads \
                       --with-zlib \
                       --enable-64-bit-bfd

configure.env-append   SED=${prefix}/bin/gsed \
                       MSGFMT=${prefix}/bin/msgfmt \
                       GMSGFMT=${prefix}/bin/msgfmt \
                       XGETTEXT=${prefix}/bin/xgettext \
                       MSGMERGE=${prefix}/bin/msgmerge \
                       MKDIR=/bin/mkdir

configure.cppflags-append -I${prefix}/include

post-extract {
    system -W ${worksrcpath} "${prefix}/bin/autoscan264"
    system -W ${worksrcpath} "${prefix}/bin/aclocal-17 -I config"
}

pre-configure {
    system "echo \"ppl `ppl-config -V` is installed with: `${prefix}/bin/ppl-config -O`\""
}

post-configure {
    if {![catch "registry_active libc-headers"]} {
        ui_msg "Having libc-headers active can cause a lot of warnings when building ${name}."
        ui_msg "You might want to deactivate the libc-headers port while building ${name}, and then \
               reactivate it later."
        ui_msg "Continuing building anyway for now though..."
    }
}

build.type             gnu
use_parallel_build     no
configure.ccache       no

# The Makefile runs configure again in subdirectories.
# It correcty passes along most configure variables (CFLAGS, LDFLAGS, ...),
#    but seems to neglect CPPFLAGS.
build.env-append       CPPFLAGS='-I${prefix}/include' \
                       CFLAGS='-I${prefix}/include' \
                       SED=${prefix}/bin/gsed \
                       MSGFMT=${prefix}/bin/msgfmt \
                       GMSGFMT=${prefix}/bin/msgfmt \
                       XGETTEXT=${prefix}/bin/xgettext \
                       MSGMERGE=${prefix}/bin/msgmerge

post-build {
    system -W ${worksrcpath}/gprof "${configure.cmd} ${configure.args}"
    reinplace "s|CPPFLAGS \=|CPPFLAGS \= \-I${prefix}/include|" ${worksrcpath}/gprof/Makefile
    system -W ${worksrcpath}/gprof "make"
    system -W ${worksrcpath}/gold "${configure.cmd} ${configure.args}"
    system -W ${worksrcpath}/gold/po "make"
    system -W ${worksrcpath}/gas "${configure.cmd} ${configure.args}"
    reinplace "s|CPPFLAGS \=|CPPFLAGS \= \-I${prefix}/include|" ${worksrcpath}/gas/Makefile
    system -W ${worksrcpath}/gas "make"
    system -W ${worksrcpath}/ld "${configure.cmd} ${configure.args}"
    reinplace "s|CPPFLAGS \=|CPPFLAGS \= \-I${prefix}/include|" ${worksrcpath}/ld/Makefile
    system -W ${worksrcpath}/ld "make"
}

# Binutils violates the mtree layout by creating ${prefix}/<arch>/
destroot.violate_mtree yes

post-destroot {
    destroot.destdir prefix=${destroot}${prefix}
    system -W ${worksrcpath}/gprof "make install"
    system -W ${worksrcpath}/gas "make install"
    system -W ${worksrcpath}/ld "sh ./genscripts.sh . ${destroot}${prefix}/lib ${destroot}${prefix} ${destroot}${prefix} x86_64-apple-darwin11.4.2 x86_64-apple-darwin11.4.2 x86_64-apple-darwin11.4.2 \"\" \"\" no \"\" x86_64-apple-darwin11.4.2 ppcmacos"
#    system -W ${worksrcpath}/ld "make install"
    file rename ${destroot}${prefix}/share/info/standards.info ${destroot}${prefix}/share/info/${name}-standards.info
    file rename ${destroot}${prefix}/share/info/configure.info ${destroot}${prefix}/share/info/${name}-configure.info
    xinstall -d ${destroot}${prefix}/include/binutils
    foreach header [glob ${destroot}${prefix}/include/*] {
        if [file isfile ${header}] {
            move ${header} ${destroot}${prefix}/include/binutils
        }
    }
    xinstall -d ${destroot}${prefix}/lib/binutils-staticlibs
    foreach library [glob ${destroot}${prefix}/lib/*.a] {
        if [file isfile ${library}] {
            move ${library} ${destroot}${prefix}/lib/binutils-staticlibs
        }
    }
}

universal_variant      no
