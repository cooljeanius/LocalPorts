# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0

name                bison2
set myname          bison
version             2.7.1
revision            1
categories          devel lang
maintainers         mww openmaintainer
license             GPL-3+
platforms           darwin
installs_libs       no
description         General-purpose parser generator
long_description \
    Bison is a general-purpose parser generator that converts a grammar \
    description for an LALR context-free grammar into a C program to    \
    parse that grammar. Once you are proficient with Bison, you can use \
    it to develop a wide range of language parsers, from those used in  \
    simple desk calculators to complex programming languages.

homepage            http://www.gnu.org/software/${myname}/
master_sites        gnu:${myname}
distname            ${myname}-${version}
checksums           rmd160  933257e61c1098160d4fd71063f340b2ee304671 \
                    sha256  b409adcbf245baadb68d2f66accf6fdca5e282cafec1b865f4b5e963ba8ea7fb
use_xz              yes

depends_build-append \
                    port:m4 \
                    bin:perl:perl5 \
                    bin:flex:flex

depends_lib-append  port:gettext \
                    port:libiconv

depends_run-append  port:m4

configure.args-append \
                    --infodir=${prefix}/share/info \
                    --mandir=${prefix}/share/man \
                    --program-suffix=2 \
                    --datadir=${prefix}/share/${name} \
                    --libdir=${prefix}/lib/${name} \
                    --with-libiconv-prefix=${prefix} \
                    --with-libintl-prefix=${prefix} \
                    --disable-yacc \
                    --without-dmalloc \
                    --disable-nls

configure.env-append \
                    M4=${prefix}/bin/gm4

# Making this a variant until https://trac.macports.org/ticket/38208 is resolved
variant test description {Enables testing and debugging} {
    configure.args-delete \
                    --without-dmalloc
    configure.args-append \
                    --enable-gcc-warnings \
                    --disable-silent-rules

    depends_build-append \
                    bin:valgrind:valgrind \
                    bin:git:git-core \
                    bin:gawk:gawk \
                    bin:grep:grep \
                    bin:gsed:gsed \
                    bin:gmake:gmake

    depends_lib-append \
                    lib:dmalloc:dmalloc

    build.type      gnu
    build.cmd       ${prefix}/bin/gmake
    test.run        yes
    test.target     check
}

variant docs description {Build documentation} {
    depends_build-append \
                    bin:xsltproc:libxslt \
                    bin:help2man:help2man
    post-build {
        foreach subdir {data doc etc examples po runtime-po} {
            system -W ${worksrcpath}/${subdir} "${build.cmd}"
        }
    }
    post-destroot {
        foreach subdir {data doc etc examples po runtime-po} {
            system -W ${worksrcpath}/${subdir} "${destroot.cmd} ${destroot.target} DESTDIR=${destroot.destdir}"
        }
    }
}

post-destroot {
    set docdir ${prefix}/share/doc/${name}
    xinstall -d ${destroot}${docdir}/examples/calc++
    xinstall -m 0444 -W ${worksrcpath} AUTHORS COPYING ChangeLog NEWS \
        THANKS TODO ${destroot}${docdir}
    xinstall -m 444 -W ${worksrcpath}/examples/calc++  \
        calc++-driver.cc calc++-driver.hh calc++-parser.cc \
        calc++-parser.hh calc++-parser.stamp calc++-parser.yy \
        calc++-scanner.cc calc++-scanner.ll calc++.cc location.hh \
        position.hh stack.hh test \
        ${destroot}${docdir}/examples/calc++
    # yacc manpage gets installed even with '--disable-yacc'
    if {![variant_isset yacc]} {
        delete ${destroot}${prefix}/share/man/man1/yacc2.1
    }
    delete ${destroot}${prefix}/share/info
}

variant yacc description "Enable yacc compatibility" {
    configure.args-delete   --disable-yacc
    configure.args-append   --enable-yacc
    # ${prefix}/lib/${name}/liby.a exists when enabling yacc
    installs_libs           yes
}

variant java description "Enable Java support" {
    depends_build-append    bin:java:kaffe \
                            bin:gcj:gcc_select
    depends_run-append      bin:java:kaffe
}

# Removing this variant removes files that were previously
# installed (see below), so make it a default
default_variants-append +java

if {![variant_isset java]} {
    post-destroot {
        delete ${worksrcpath}/data/lalr1.java
        delete ${destroot}${prefix}/share/${name}/${myname}/lalr1.java
        eval delete [glob ${destroot}${prefix}/share/${name}/${myname}/java*m4]
    }
    if {[variant_isset test]} {
        post-test {
            delete ${worksrcpath}/tests/java.at
        }
    } else {
        post-configure {
            delete ${worksrcpath}/javacomp.sh
            delete ${worksrcpath}/javaexec.sh
        }
    }
}

livecheck.type      regex
livecheck.url       http://ftp.gnu.org/gnu/bison/?C=M&O=D
livecheck.regex     ${name}-(\\d+(?:\\.\\d+)*)

