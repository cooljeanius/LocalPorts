--- configure.ac.orig	2013-03-25 04:32:11.000000000 -0400
+++ configure.ac	2013-03-25 05:40:35.000000000 -0400
@@ -21,31 +21,46 @@
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301
 # USA
 
-AC_PREREQ(2.61)
-AC_INIT([GnuTLS], [2.12.19], [bug-gnutls@gnu.org])
+AC_PREREQ([2.69])
+AC_INIT([GnuTLS],[2.12.19],[bug-gnutls@gnu.org])
+AC_CONFIG_SRCDIR([config.h.in])
 AC_CONFIG_AUX_DIR([build-aux])
 AC_CONFIG_MACRO_DIR([m4])
 
-AM_INIT_AUTOMAKE([1.10 no-dist-gzip dist-bzip2 -Wall -Werror -Wno-override])
+AM_INIT_AUTOMAKE([1.10 no-dist-gzip dist-bzip2 -Wall -Wno-override])
 m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])
-AM_CONFIG_HEADER(config.h)
+AM_MAINTAINER_MODE
+AC_CONFIG_HEADERS([config.h])
 
-AC_MSG_RESULT([***
+AC_CANONICAL_HOST
+AC_USE_SYSTEM_EXTENSIONS
+
+AC_MSG_RESULT([
+***
 *** Checking for compilation programs...
 ])
 
 dnl Checks for programs.
+AM_PROG_AR
+AC_PROG_AWK
 AC_PROG_CC
+AC_PROG_CPP
+AC_PROG_INSTALL
 AC_PROG_LN_S
-GTK_DOC_CHECK(1.1)
+AC_PROG_MAKE_SET
+AC_PROG_RANLIB
+PKG_PROG_PKG_CONFIG
+GTK_DOC_CHECK([1.1])
 AC_PATH_PROG([GAA], [gaa])
 if test "x$GAA" = "x"; then
-   AC_MSG_WARN([[***
+   AC_MSG_WARN([[
+***
 *** GAA was not found.  It is only needed if you wish to modify
 *** the source code or command-line description files.  In this case,
 *** you may want to get it from http://gaa.sourceforge.net/ and
 *** read doc/README.gaa.
-***]])
+***
+]])
 fi
 
 gl_EARLY
@@ -58,48 +73,94 @@
     use_cxx=$enableval, use_cxx=yes)
 if test "$use_cxx" != "no"; then
   AC_LANG_PUSH(C++)
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[])], use_cxx=yes, use_cxx=no)
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[])], [use_cxx=yes], [use_cxx=no])
   AC_LANG_POP(C++)
 fi
-AM_CONDITIONAL(ENABLE_CXX, test "$use_cxx" != "no")
-AM_CONDITIONAL(WANT_TEST_SUITE, [test -f tests/suite/mini-eagain2.c])
+AM_CONDITIONAL([ENABLE_CXX], [test "$use_cxx" != "no"])
+AM_CONDITIONAL([WANT_TEST_SUITE], [test -f tests/suite/mini-eagain2.c])
 
 LIBGNUTLS_HOOKS
 LIBGNUTLS_EXTRA_HOOKS
 
+dnl Checks for libraries.
+dnl FIXME: Replace `main' with a function in `-ldl':
+AC_CHECK_LIB([dl], [main])
+dnl FIXME: Replace `main' with a function in `-lm':
+AC_CHECK_LIB([m], [main])
+dnl FIXME: Replace `main' with a function in `-lpthread':
+AC_CHECK_LIB([pthread], [main])
+dnl FIXME: Replace `main' with a function in `-lrt':
+AC_CHECK_LIB([rt], [main])
+
 AC_HEADER_STDC
-AC_DEFINE([HAVE_STRINGS_H], 1, [Hard-code for src/cfg/.])
-AC_DEFINE([HAVE_FLOAT_H], 1, [Hard-code for src/cfg/.])
-AC_DEFINE([HAVE_LIMITS_H], 1, [Hard-code for src/cfg/.])
-AC_DEFINE([HAVE_MATH_H], 1, [Hard-code for src/cfg/.])
-AC_DEFINE([HAVE_CTYPE_H], 1, [Hard-code for src/cfg/.])
-AC_DEFINE([HAVE_ERRNO_H], 1, [Hard-code for src/cfg/.])
+AC_FUNC_ALLOCA
+AC_CHECK_HEADERS([OS.h arpa/inet.h fcntl.h float.h inttypes.h langinfo.h libintl.h limits.h locale.h malloc.h memory.h netdb.h netinet/in.h nl_types.h stddef.h stdint.h stdio_ext.h stdlib.h string.h strings.h sys/ioctl.h sys/param.h sys/socket.h sys/time.h sys/timeb.h termios.h unistd.h wchar.h])
+AC_DEFINE([HAVE_STRINGS_H], [1], [Hard-code for src/cfg/.])
+AC_DEFINE([HAVE_FLOAT_H], [1], [Hard-code for src/cfg/.])
+AC_DEFINE([HAVE_LIMITS_H], [1], [Hard-code for src/cfg/.])
+AC_DEFINE([HAVE_MATH_H], [1], [Hard-code for src/cfg/.])
+AC_DEFINE([HAVE_CTYPE_H], [1], [Hard-code for src/cfg/.])
+AC_DEFINE([HAVE_ERRNO_H], [1], [Hard-code for src/cfg/.])
 
 # No fork on MinGW, disable some self-tests until we fix them.
-AC_CHECK_FUNCS(fork,,)
-AM_CONDITIONAL(HAVE_FORK, test "$ac_cv_func_fork" != "no")
+AC_CHECK_FUNCS([fork],[],[])
+AM_CONDITIONAL([HAVE_FORK], [test "$ac_cv_func_fork" != "no"])
 
 dnl Check for p11-kit
-AC_ARG_WITH(p11-kit,
+AC_ARG_WITH([p11-kit],
 	AS_HELP_STRING([--without-p11-kit],
 		[Build without p11-kit and PKCS#11 support]))
 AM_CONDITIONAL(ENABLE_PKCS11, test "$with_p11_kit" != "no")
 if test "$with_p11_kit" != "no"; then
-	PKG_CHECK_MODULES(P11_KIT, [p11-kit-1 >= 0.11])
-	AC_DEFINE(ENABLE_PKCS11, 1, [Build PKCS#11 support])
+	PKG_CHECK_MODULES([P11_KIT], [p11-kit-1 >= 0.11])
+	AC_DEFINE([ENABLE_PKCS11], [1], [Build PKCS#11 support])
 	CFLAGS="$CFLAGS $P11_KIT_CFLAGS"
 	LIBS="$LIBS $P11_KIT_LIBS"
 	with_p11_kit=yes
 fi
 
-AC_CHECK_TYPES(uint,,, [
+dnl Checks for typedefs, structures, and compiler characteristics.
+AC_CHECK_HEADER_STDBOOL
+AC_TYPE_UID_T
+AC_TYPE_INT16_T
+AC_TYPE_INT32_T
+AC_TYPE_INT64_T
+AC_TYPE_INT8_T
+AC_TYPE_MODE_T
+AC_FUNC_OBSTACK
+AC_TYPE_OFF_T
+AC_TYPE_PID_T
+AC_C_RESTRICT
+AC_TYPE_SIZE_T
+AC_TYPE_SSIZE_T
+AC_TYPE_UINT16_T
+AC_TYPE_UINT32_T
+AC_TYPE_UINT64_T
+AC_TYPE_UINT8_T
+AC_CHECK_TYPES([ptrdiff_t])
+AC_CHECK_TYPES([uint],[],[], [
 # include <sys/types.h>
 ])
 
+dnl Checks for library functions.
+AM_GNU_GETTEXT([external])
+AM_GNU_GETTEXT_VERSION([0.17])
+AC_FUNC_ERROR_AT_LINE
+AC_FUNC_FORK
+AC_FUNC_FSEEKO
+AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
+AC_FUNC_MALLOC
+AC_FUNC_MBRTOWC
+AC_FUNC_MMAP
+AC_FUNC_REALLOC
+AC_FUNC_STRERROR_R
+AC_FUNC_STRTOD
+AC_CHECK_FUNCS([alarm clock_gettime dup2 ftruncate getcwd getdelim gethostbyname getpagesize getpass gettimeofday localeconv mblen mbrlen memchr memmove memset mkdir nl_langinfo rmdir select setlocale socket strcasecmp strchr strdup strerror strrchr strspn strstr strtol strtoul tzset])
+
 # For Guile bindings.
 opt_guile_bindings=yes
 AC_MSG_CHECKING([whether building Guile bindings])
-AC_ARG_ENABLE(guile,
+AC_ARG_ENABLE([guile],
 	AS_HELP_STRING([--enable-guile], [build GNU Guile bindings]),
 opt_guile_bindings=$enableval)
 AC_MSG_RESULT($opt_guile_bindings)
@@ -109,7 +170,8 @@
      [use the given directory as the Guile site (use with care)])])
 
 if test "$opt_guile_bindings" = "yes"; then
-   AC_MSG_RESULT([***
+   AC_MSG_RESULT([
+***
 *** Detecting GNU Guile...
 ])
 
@@ -126,7 +188,7 @@
       CFLAGS="$CFLAGS $GUILE_CFLAGS"
       LIBS="$LIBS $GUILE_LDFLAGS"
       AC_MSG_CHECKING([whether GNU Guile is recent enough])
-      AC_LINK_IFELSE(AC_LANG_CALL([], [scm_from_locale_string]),
+      AC_LINK_IFELSE([AC_LANG_CALL([], [scm_from_locale_string])],
         [], [opt_guile_bindings=no])
       CFLAGS="$save_CFLAGS"
       LIBS="$save_LIBS"
@@ -174,14 +236,14 @@
       fi
    fi
 fi
-AM_CONDITIONAL(HAVE_GUILE, test "$opt_guile_bindings" = "yes")
-AM_CONDITIONAL(HAVE_GCC_GNU89_INLINE_OPTION, test "$gnu89_inline" = "yes"])
-AM_CONDITIONAL(HAVE_GCC, test "$GCC" = "yes")
+AM_CONDITIONAL([HAVE_GUILE], [test "$opt_guile_bindings" = "yes"])
+AM_CONDITIONAL([HAVE_GCC_GNU89_INLINE_OPTION], [test "$gnu89_inline" = "yes"])
+AM_CONDITIONAL([HAVE_GCC], [test "$GCC" = "yes"])
 
 dnl Check for libcfg+
 
 SAVED_LIBS=$LIBS
-AC_ARG_WITH(included-libcfg,
+AC_ARG_WITH([included-libcfg],
 	AS_HELP_STRING([--with-included-libcfg],
 		[use the included libcfg+ (certtool only)]),
 	libcfg_enabled=$withval, 
@@ -192,13 +254,14 @@
                      libcfg_enabled=yes
                      AC_MSG_WARN([[
 *** 
-*** Libcfg+ was not found. Will use the included one.]])))
+*** Libcfg+ was not found. Will use the included one.
+]])))
 
-AM_CONDITIONAL(HAVE_LIBCFG, test "$libcfg_enabled" = "no")
+AM_CONDITIONAL([HAVE_LIBCFG], [test "$libcfg_enabled" = "no"])
 LIBS=$SAVED_LIBS
 
 AC_MSG_CHECKING([whether to use the included libcfg])
-AC_MSG_RESULT($libcfg_enabled)
+AC_MSG_RESULT([$libcfg_enabled])
 
 AC_LIBTOOL_WIN32_DLL
 AC_PROG_LIBTOOL
@@ -265,7 +328,7 @@
 export WARN_CFLAGS
 export use_cxx
 
-AC_DEFINE([GNUTLS_COMPAT_H], 1, [Make sure we don't use old features in code.])
+AC_DEFINE([GNUTLS_COMPAT_H], [1], [Make sure we don't use old features in code.])
 
 AC_CONFIG_SUBDIRS([lib])
 AC_CONFIG_SUBDIRS([libextra])
