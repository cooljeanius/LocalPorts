# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           ocaml 1.0

name                libCUDF
version             0.6.3
epoch               2
revision            0
categories          devel ml
platforms           darwin
maintainers         gwmail.gwu.edu:egall cal openmaintainer
license             LGPL-3+

description         ${name} is a library to manipulate so-called \
                    CUDF documents.

long_description    ${description} A CUDF \
                    (Common Upgradeability Description Format) document \
                    describes an \"upgrade scenario\", as faced by \
                    package managers in popular package-based FOSS \
                    (Free and Open Source Software) distributions.

homepage            http://www.mancoosi.org/cudf/

master_sites        https://gforge.inria.fr/frs/download.php/31910/
checksums           rmd160  be614de4b8a0de525619251fd61d241160fde1e9 \
                    sha256  6e9f1bafe859df85c854679e2904a8172945d2bf2d676c8ae3ecb72fe6de0665

fetch.type          git
git.url             git://scm.gforge.inria.fr/cudf/cudf.git

worksrcdir          cudf-${version}

depends_lib-append  port:camlp5 \
                    port:ocaml-findlib \
                    port:ocaml-extlib

use_configure       no

# parallel building fails
use_parallel_build  no

build.target-append opt

build.env-append    CC=${configure.cc} \
                    CFLAGS=\"${configure.cflags} [get_canonical_archflags cc]\" \
                    LDFLAGS=\"${configure.ldflags} [get_canonical_archflags ld]\" \

post-patch {
    reinplace "s#/usr/#${prefix}/#g" ${worksrcpath}/Makefile.config
}

post-destroot {
    if {[file isdirectory ${destroot}/usr/bin]} {
        eval xinstall [glob ${destroot}/usr/bin/*] ${destroot}${prefix}/bin
        eval file delete [glob ${destroot}/usr/bin/*]
    }
}

# Making a variant for this until ticket #38208 is resolved.
variant tests description {Run the test suite} {
    depends_build-append port:ocaml-ounit
    test.run        yes
    test.cmd        make
    test.target-append test
    post-build {
        system -W ${worksrcpath} "${test.cmd} ${test.target}"
    }
}

variant native description {Stub variant; just pulls in some extra dependencies for now} {
    depends_lib-append path:lib/pkgconfig/glib-2.0.pc:glib2 \
                       port:swig-ocaml \
                       port:pkgconfig \
                       port:ncurses
}

livecheck.type      regex
livecheck.url       https://gforge.inria.fr/export/rss20_newreleases.php?group_id=4385
livecheck.regex     "cudf (\\d+(?:\\.\\d+)*)"
