# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           github 1.0

github.setup        OpenKinect libfreenect 0.2.0 v
categories          devel graphics games
platforms           darwin
maintainers         gwmail.gwu.edu:egall openmaintainer
license             {apache GPL-2+}

description         ${name}, aka OpenKinect, is the core library for \
                    accessing the Microsoft Kinect USB camera

long_description    ${description}. It is the main part of the \
                    OpenKinect project.

homepage            http://www.openkinect.org/

checksums           rmd160  2e145a48062be4558d6a6e5adc93abd94e036178 \
                    sha256  f561fd5a2350d4c7c65a392348f72879e7f2005a7a8dd86086fff19ff6d1ee7b
#TODO: use stealth update recipe
#dist_subdir         <something?>

depends_build-append \
                    port:pkgconfig
depends_lib-append  port:libtool \
                    port:libusb

configure.args-append \
                    -DBUILD_EXAMPLES=OFF \
                    -DBUILD_AS3_SERVER=OFF \
                    -DBUILD_CV=OFF \
                    -DBUILD_PYTHON=OFF

#TODO: re-add python variants that were commented out in previous revisions

# Not sure how exactly I am going to get this variant to work, so right
# now it does NOT really do anything...
variant java conflicts universal description {Enable java bindings} {
    PortGroup       java 1.0
    depends_build-append \
                    bin:mvn:maven2
}

# This variant needs a port for rb-jeweler before it can actually work and
# do anything
variant ruby description {Enable ruby bindings} {
    depends_build-append \
                    bin:rake:rb-rake
    depends_lib-append \
                    port:libffi
    depends_skip_archcheck-append rb-rake
}

#TODO: add csharp variant

variant opencv description {Enable opencv bindings} {
    depends_lib-append \
                    port:opencv
    configure.args-delete \
                    -DBUILD_CV=OFF
    configure.args-append \
                    -DBUILD_CV=ON \
                    -DCMAKE_MODULE_PATH=${prefix}/lib/cmake \
                    -DCMAKE_PREFIX_PATH=${prefix} \
                    -DOpenCV_DIR=${prefix}/lib/cmake
    configure.env-append \
                    CMAKE_MODULE_PATH=${prefix}/lib/cmake \
                    CMAKE_PREFIX_PATH=${prefix} \
                    OpenCV_DIR=${prefix}/lib/cmake
}

variant actionscript description {Enable actionscript bindings} {
    depends_lib-append \
                    port:jpeg
    configure.args-delete \
                    -DBUILD_AS3_SERVER=OFF
    configure.args-append \
                    -DBUILD_AS3_SERVER=ON
}

variant docs description {Build documentation} {
    depends_build-append \
                    port:doxygen \
                    path:bin/astyle:astyle
    post-build {
        system -W ${worksrcpath}/doc "doxygen"
        system -W ${worksrcpath}/doc "astyle"
    }
    post-destroot {
        xinstall -d ${destroot}${prefix}/share/doc/${name}
        file copy ${worksrcpath}/doc/html ${destroot}${prefix}/share/doc/${name}
    }
}

variant examples description {Build examples} {
    configure.args-delete \
                    -DBUILD_EXAMPLES=OFF
    configure.args-append \
                    -DBUILD_EXAMPLES=ON
}

# The default debug variant that the cmake portgroup provides does NOT
# build properly:
# Undefined symbols for architecture x86_64:
#   "_unpack_8_pixels", referenced from:
#      _freenect_apply_registration in registration.c.o
#      _freenect_apply_depth_to_mm in registration.c.o
variant debug description {Dummy variant} {
    use_parallel_build no
    configure.args-append \
                    --debug-output
    configure.optflags -g
}

default_variants    +examples
