--- configure.ac.orig	2014-05-12 17:30:32.000000000 -0400
+++ configure.ac	2014-05-19 21:29:46.000000000 -0400
@@ -1,185 +1,229 @@
-dnl
-dnl This file was autogenerated from "configure.ac.in".
-dnl Edit that file instead!
-dnl
-
-dnl
-dnl Copyright (c) 2003-2009
-dnl         os-cillation e.K. All rights reserved.
-dnl
-dnl Written by Benedikt Meurer <benny@xfce.org>.
-dnl
-
-dnl ***************************
-dnl *** Version information ***
-dnl ***************************
-m4_define([terminal_version_major], [0])
-m4_define([terminal_version_minor], [4])
-m4_define([terminal_version_micro], [5])
-m4_define([terminal_version_nano], [])
-m4_define([terminal_version_build], [9da0bf3])
-m4_define([terminal_version_tag], [])
-m4_define([terminal_version_dbus], [4])
-m4_define([terminal_version], [terminal_version_major().terminal_version_minor().terminal_version_micro()ifelse(terminal_version_nano(), [], [], [.terminal_version_nano()])ifelse(terminal_version_tag(), [git], [terminal_version_tag()-terminal_version_build()], [terminal_version_tag()])])
-
-dnl *******************************************
-dnl *** Debugging support for GIT snapshots ***
-dnl *******************************************
-m4_define([terminal_debug_default], [ifelse(terminal_version_tag(), [git], [yes], [minimum])])
-
-dnl ***************************
-dnl *** Initialize autoconf ***
-dnl ***************************
+dnl#                                               -*- Autoconf -*-
+dnl# Process this file with autoconf to produce a configure script.
+
+dnl#
+dnl# This file was autogenerated from "configure.ac.in".
+dnl# Edit that file instead! (it is not present though)
+dnl#
+
+dnl#
+dnl# Copyright (c) 2003-2009
+dnl#         os-cillation e.K. All rights reserved.
+dnl#
+dnl# Written by Benedikt Meurer <benny@xfce.org>.
+dnl#
+
+dnl#***************************
+dnl#*** Version information ***
+dnl#***************************
+m4_define([terminal_version_major],[0])
+m4_define([terminal_version_minor],[4])
+m4_define([terminal_version_micro],[5])
+m4_define([terminal_version_nano],[])
+m4_define([terminal_version_build],[9da0bf3])
+m4_define([terminal_version_tag],[])
+m4_define([terminal_version_dbus],[4])
+m4_define([terminal_version],[terminal_version_major().terminal_version_minor().terminal_version_micro()ifelse(terminal_version_nano(),[],[],[.terminal_version_nano()])ifelse(terminal_version_tag(),[git],[terminal_version_tag()-terminal_version_build()],[terminal_version_tag()])])
+
+dnl#*******************************************
+dnl#*** Debugging support for GIT snapshots ***
+dnl#*******************************************
+m4_define([terminal_debug_default],[ifelse(terminal_version_tag(),[git],[yes],[minimum])])
+
+dnl#***************************
+dnl#*** Initialize autoconf ***
+dnl#***************************
 AC_COPYRIGHT([Copyright (c) 2003-2009
         os-cillation e.K. All rights reserved.
 
 Written by Benedikt Meurer <benny@xfce.org>.])
-AC_INIT([Terminal], [terminal_version], [http://bugzilla.xfce.org/], [Terminal])
+AC_INIT([Terminal],[terminal_version],[http://bugzilla.xfce.org/],
+        [Terminal])
 AC_REVISION([9da0bf3])
-AC_PREREQ([2.50])
-AC_ARG_PROGRAM()
-
-dnl ***************************
-dnl *** Initialize automake ***
-dnl ***************************
+AC_PREREQ([2.69])
+AC_ARG_PROGRAM([])
+AC_CONFIG_SRCDIR([terminal/main.c])
+AC_CONFIG_MACRO_DIR([m4])
+
+dnl#***************************
+dnl#*** Initialize automake ***
+dnl#***************************
 AM_INIT_AUTOMAKE([1.8 dist-bzip2 tar-ustar])
-AM_CONFIG_HEADER([config.h])
-AM_MAINTAINER_MODE()
-m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])
-
-dnl ***********************************
-dnl *** Subst D-BUS service version ***
-dnl ***********************************
+AC_CONFIG_HEADERS([config.h])
+AM_MAINTAINER_MODE([])
+m4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])])
+
+dnl#***********************************
+dnl#*** Subst D-BUS service version ***
+dnl#***********************************
 TERMINAL_VERSION_DBUS=terminal_version_dbus()
 AC_SUBST([TERMINAL_VERSION_DBUS])
 
-dnl *******************************
-dnl *** Check for UNIX variants ***
-dnl *******************************
-AC_AIX()
-AC_ISC_POSIX()
-
-dnl ********************************
-dnl *** Check for basic programs ***
-dnl ********************************
-AC_PROG_CC()
-AM_PROG_CC_C_O()
-AC_PROG_INSTALL()
-AC_PROG_INTLTOOL([0.31], [no-xml])
-AC_PROG_LIBTOOL()
-
-dnl **********************************
-dnl *** Check for standard headers ***
-dnl **********************************
+dnl#*******************************
+dnl#*** Check for UNIX variants ***
+dnl#*******************************
+AC_USE_SYSTEM_EXTENSIONS
+AC_SEARCH_LIBS([strerror],[cposix]) dnl# used to be AC\_ISC\_POSIX
+
+dnl#********************************
+dnl#*** Check for basic programs ***
+dnl#********************************
+if test "x${CC}" = "x"; then
+  test -z "${CC}"
+  AC_PROG_CC
+else
+  test ! -z "${CC}" && export CC
+  AC_SUBST([CC])
+  AC_PROG_GCC_TRADITIONAL
+fi
+AC_PROG_CPP
+AC_LANG([C])
+AC_PROG_CXX
+AM_PROG_CC_C_O([])
+AC_PROG_INSTALL([])
+IT_PROG_INTLTOOL([0.31],[no-xml])
+LT_INIT([])
+LT_LANG([C])
+
+dnl#**********************************
+dnl#*** Check for standard headers ***
+dnl#**********************************
 AC_CHECK_HEADERS([ctype.h errno.h limits.h pwd.h signal.h time.h])
 
-dnl ******************************
-dnl *** Check for i18n support ***
-dnl ******************************
+dnl# Checks for typedefs, structures, and compiler characteristics.
+AC_C_BIGENDIAN
+AC_C_PROTOTYPES
+
+dnl# Checks for library functions.
+AC_FUNC_STRTOD
+AC_CHECK_FUNCS([setlocale strchr strrchr strtoul])
+
+dnl#******************************
+dnl#*** Check for i18n support ***
+dnl#******************************
 XDT_I18N([ar ast be ca cs da de dz el en_GB eo es et eu fi fr gl he hr hu id it ja kk ko ku lt lv nb nl pa pl pt_BR pt ro ru si sk sq sv tr ug uk ur_PK ur vi zh_CN zh_TW ])
-
-dnl ********************************
-dnl *** Check for X11 (optional) ***
-dnl ********************************
-XDT_CHECK_LIBX11()
-
-dnl ***********************************
-dnl *** Check for required packages ***
-dnl ***********************************
-XDT_CHECK_PACKAGE([EXO], [exo-0.3], [0.3.4], [],
-  [XDT_CHECK_PACKAGE([EXO], [exo-1], [0.5.0])])
-XDT_CHECK_PACKAGE([GTK], [gtk+-2.0], [2.14.0])
-XDT_CHECK_PACKAGE([VTE], [vte], [0.17.1])
-XDT_CHECK_PACKAGE([GIO], [gio-2.0], [2.16.0])
-
-dnl **********************************
-dnl *** Optional support for D-BUS ***
-dnl **********************************
-XDT_CHECK_OPTIONAL_PACKAGE([DBUS], [dbus-glib-1], [0.22],
-                           [dbus], [D-BUS GLib bindings])
-if test x"$DBUS_FOUND" = x"yes"; then
+dnl#hack to allow autoreconfing to continue to work:
+undefine([AC_REQUIRE_AUX_FILE])
+AM_ICONV
+
+dnl#********************************
+dnl#*** Check for X11 (optional) ***
+dnl#********************************
+AC_PATH_XTRA
+XDT_CHECK_LIBX11([])
+
+dnl#***********************************
+dnl#*** Check for required packages ***
+dnl#***********************************
+XDT_CHECK_PACKAGE([EXO],[exo-0.3],[0.3.4],[],
+  [XDT_CHECK_PACKAGE([EXO],[exo-1],[0.5.0])])
+XDT_CHECK_PACKAGE([GTK],[gtk+-2.0],[2.14.0])
+XDT_CHECK_PACKAGE([VTE],[vte],[0.17.1],[],
+  [XDT_CHECK_PACKAGE([VTE],[vte-2.90],[0.29.0])])
+XDT_CHECK_PACKAGE([GIO],[gio-2.0],[2.16.0])
+
+dnl#**********************************
+dnl#*** Optional support for D-BUS ***
+dnl#**********************************
+XDT_CHECK_OPTIONAL_PACKAGE([DBUS],[dbus-glib-1],[0.22],
+                           [dbus],[D-BUS GLib bindings])
+if test x"${DBUS_FOUND}" = x"yes"; then
   AC_MSG_CHECKING([whether to use new D-BUS API])
-  if $PKG_CONFIG --atleast-version 0.31 dbus-1 >/dev/null 2>&1; then
-    AC_DEFINE([DBUS_USE_NEW_API], [1], [Define to use new D-BUS API])
+  if ${PKG_CONFIG} --atleast-version 0.31 dbus-1 >/dev/null 2>&1; then
+    AC_DEFINE([DBUS_USE_NEW_API],[1],[Define to use new D-BUS API])
     AC_MSG_RESULT([yes])
   else
     AC_MSG_RESULT([no])
   fi
 fi
 
-dnl ***************************************************
-dnl *** Check if we need to build the documentation ***
-dnl ***************************************************
-AC_ARG_ENABLE([gen-doc], [AC_HELP_STRING([--enable-gen-doc], 
-              [Generate HTML documentation (requires xsltproc, xml2po and xmllint) [default=no]])],, [enable_gen_doc=no])
-if test x"$enable_gen_doc" = x"yes"; then
-    AC_PATH_PROG([XSLTPROC], [xsltproc], [no])
-    if test x"$XSLTPROC" = x"no"; then
+dnl#***************************************************
+dnl#*** Check if we need to build the documentation ***
+dnl#***************************************************
+AC_ARG_ENABLE([gen-doc],
+              [AS_HELP_STRING([--enable-gen-doc],
+                              [Generate HTML documentation (requires xsltproc, xml2po and xmllint) [default=no]])],
+              [],[enable_gen_doc=no])
+if test x"${enable_gen_doc}" = x"yes"; then
+    AC_PATH_PROG([XSLTPROC],[xsltproc],[no])
+    if test x"${XSLTPROC}" = x"no"; then
         enable_gen_doc=no
     fi
 
-    AC_PATH_PROG([XML2PO], [xml2po], [no])
-    if test x"$XML2PO" = x"no"; then
+    AC_PATH_PROG([XML2PO],[xml2po],[no])
+    if test x"${XML2PO}" = x"no"; then
         enable_gen_doc=no
     fi
 
-    AC_PATH_PROG([XMLLINT], [xmllint], [no])
-    if test x"$XML2PO" = x"no"; then
+    AC_PATH_PROG([XMLLINT],[xmllint],[no])
+    if test x"${XML2PO}" = x"no"; then
         enable_gen_doc=no
     fi
 
-    if test x"$enable_gen_doc" = x"no"; then
+    if test x"${enable_gen_doc}" = x"no"; then
         AC_MSG_ERROR([Compiling with --enable-gen-doc but one of xml2po, xsltproc or xmllint not found.])
     fi
 fi
-AM_CONDITIONAL([GENERATE_DOCUMENTATION], [test x"$enable_gen_doc" = x"yes"])
+AM_CONDITIONAL([GENERATE_DOCUMENTATION],
+               [test x"${enable_gen_doc}" = x"yes"])
 
-dnl ****************************************
-dnl *** Register in Gnome Control Center ***
-dnl ****************************************
+dnl#****************************************
+dnl#*** Register in Gnome Control Center ***
+dnl#****************************************
 AC_ARG_WITH([gnome-default-appsdir],
-            [AC_HELP_STRING([--with-gnome-default-appsdir=PATH],
+            [AS_HELP_STRING([--with-gnome-default-appsdir=PATH],
                             [Specify where to install the Gnome default applications file (default=autodetect)])],
-            [gnome_default_appsdir="$withval"])
+            [gnome_default_appsdir="${withval}"])
 AC_MSG_CHECKING([for Gnome default applications dir])
-if test x"$gnome_default_appsdir" = x""; then
-  GNOME_DEFAULT_APPSDIR="`$PKG_CONFIG --variable=defappsdir gnome-default-applications`"
-  if test -n "$GNOME_DEFAULT_APPSDIR"; then
-    AC_MSG_RESULT([Using path supplied by gnome-control-center])
+if test x"${gnome_default_appsdir}" = x""; then
+  GNOME_DEFAULT_APPSDIR="`${PKG_CONFIG} --variable=defappsdir gnome-default-applications`"
+  if test -n "${GNOME_DEFAULT_APPSDIR}"; then
+    AC_MSG_RESULT([Using path supplied by gnome-control-center (i.e. '${GNOME_DEFAULT_APPSDIR}')])
   else
     AC_MSG_RESULT([Using prefix of terminal])
   fi
 else
-  GNOME_DEFAULT_APPSDIR="$gnome_default_appsdir"
+  GNOME_DEFAULT_APPSDIR="${gnome_default_appsdir}"
   AC_MSG_RESULT([Using path supplied by user])
 fi
-AM_CONDITIONAL([HAVE_GNOME_DEFAULT_APPSDIR], [test -n "$GNOME_DEFAULT_APPSDIR"])
+AM_CONDITIONAL([HAVE_GNOME_DEFAULT_APPSDIR],
+               [test -n "${GNOME_DEFAULT_APPSDIR}"])
 AC_SUBST([GNOME_DEFAULT_APPSDIR])
 
-dnl ***********************************
-dnl *** Check for debugging support ***
-dnl ***********************************
+dnl#***********************************
+dnl#*** Check for debugging support ***
+dnl#***********************************
 XDT_FEATURE_DEBUG([terminal_debug_default])
 
-dnl **************************************
-dnl *** Check for linker optimizations ***
-dnl **************************************
-XDT_FEATURE_LINKER_OPTS()
-
-dnl *********************************
-dnl *** Substitute platform flags ***
-dnl *********************************
+dnl#**************************************
+dnl#*** Check for linker optimizations ***
+dnl#**************************************
+m4_ifdef([XDT_FEATURE_LINKER_OPTS],[
+  XDT_FEATURE_LINKER_OPTS([])
+],[
+dnl# this will also check it:
+  m4_ifdef([BM_DEBUG_SUPPORT],[
+    BM_DEBUG_SUPPORT([])
+  ],[
+    export LTO_FLAGS="-flto"
+    AC_SUBST([LTO_FLAGS])
+  ])
+])
+
+dnl#*********************************
+dnl#*** Substitute platform flags ***
+dnl#*********************************
 AC_MSG_CHECKING([PLATFORM_CPPFLAGS])
-AC_MSG_RESULT([$PLATFORM_CPPFLAGS])
+AC_MSG_RESULT([${PLATFORM_CPPFLAGS}])
 AC_SUBST([PLATFORM_CPPFLAGS])
 AC_MSG_CHECKING([PLATFORM_CFLAGS])
-AC_MSG_RESULT([$PLATFORM_CFLAGS])
+AC_MSG_RESULT([${PLATFORM_CFLAGS}])
 AC_SUBST([PLATFORM_CFLAGS])
 AC_MSG_CHECKING([PLATFORM_LDFLAGS])
-AC_MSG_RESULT([$PLATFORM_LDFLAGS])
+AC_MSG_RESULT([${PLATFORM_LDFLAGS}])
 AC_SUBST([PLATFORM_LDFLAGS])
 
-AC_OUTPUT([
+AC_CONFIG_FILES([
 Makefile
 Terminal.spec
 doc/Makefile
@@ -195,24 +239,25 @@
 terminal/Makefile
 terminal/terminal-config.h
 ])
+AC_OUTPUT
 
-dnl ***************************
-dnl *** Print configuration ***
-dnl ***************************
-echo
+dnl#***************************
+dnl#*** Print configuration ***
+dnl#***************************
+echo ""
 echo "Build Configuration:"
-echo
-if test x"$DBUS_FOUND" = x"yes"; then
+echo ""
+if test x"${DBUS_FOUND}" = x"yes"; then
 echo "* D-Bus support:           yes"
 else
 echo "* D-Bus support:           no"
 fi
-echo "* Debug support:           $enable_debug"
-if test x"$enable_gen_doc" = x"yes"; then
+echo "* Debug support:           ${enable_debug}"
+if test x"${enable_gen_doc}" = x"yes"; then
 echo "* Documentation:           yes (generate)"
 elif test -d "${srcdir}/doc/html"; then
 echo "* Documentation:           yes (in tarball)"
 else
 echo "* Documentation:           no"
 fi
-echo
+echo ""
