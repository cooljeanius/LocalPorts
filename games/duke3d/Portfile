# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 71533 2010-09-15 20:26:12Z ryandesign@macports.org $

PortSystem      1.0
PortGroup       archcheck 1.0

name            duke3d
version         0.1
revision        2
categories      games
platforms       darwin
maintainers     phw openmaintainer
license         GPL-2+
description     Runtime for FPS Duke Nukem 3D
long_description \
                Duke Nukem 3D is a first-person shooter computer game \
                developed by 3D Realms and published by Apogee Software. \
                Level and gamefiles are not included (use Shareware Version)
fetch.type      svn
svn.url         svn://svn.icculus.org/${name}/trunk/
homepage        http://icculus.org/${name}/

depends_build-append \
                port:pkgconfig \
                port:arc \
                port:arj \
                port:dos2unix \
                port:unarj \
                port:nasm \
                path:include/endian.h:endian \
                port:gawk
depends_lib-append \
                path:lib/pkgconfig/sdl.pc:libsdl \
                port:libsdl_image \
                port:libsdl_mixer \
                port:physfs \
                port:socket \
                port:bochs

switch ${build_arch} {
    ppc {
        # dosmacux: see MP bug 62916 on Trac
        # libsockets actually installs ok, it just keeps getting rebuilt
        # every time I make a change to this Portfile...
        depends_build-append \
                port:ppc-linux-binutils \
                port:dosmacux \
                port:libsockets
    }
    i386 {
        depends_run-append \
                port:dosbox
        depends_skip_archcheck-append dosbox
    }
}

worksrcdir      trunk/source/
use_configure   no
configure.cflags-append -Wno-implicit -Wno-error
configure.cppflags-append -DPLATFORM_UNIX -DPLATFORM_SUPPORTS_SDL
platform macosx {
    configure.cppflags-prepend -DPLATFORM_MACOSX
    configure.cflags-append -DPLATFORM_MACOSX -DPLATFORM_UNIX
}

build.args-append \
                macosx=true \
                CC=${configure.cc} \
                CXX=${configure.cxx} \
                CPP=${configure.cpp} \
                ASM=${prefix}/bin/nasm \
                CFLAGS=\"${configure.cflags}\" \
                CPPFLAGS=\"${configure.cppflags}\"

build.env-append \
                macosx=true \
                CC=${configure.cc} \
                CXX=${configure.cxx} \
                CPP=${configure.cpp} \
                ASM=${prefix}/bin/nasm \
                SDL_CONFIG=${prefix}/bin/sdl-config \
                CFLAGS=\"${configure.cflags}\" \
                CPPFLAGS=\"${configure.cppflags}\"

if {[lsearch [get_canonical_archs] ppc] == -1} {
    pre-build {
        reinplace "s|\-faltivec|\"${configure.cflags}\"|" ${worksrcpath}/Makefile
        # eval messes with quotation marks, so I am removing the eval part
        # until I figure that out...
    }
}

use_parallel_build no

variant utils description {Build extra utilities (not all work)} {
    post-build {
        ui_msg "This might not work..."
        system -W ${worksrcpath}/buildengine/utils "${build.cmd} ${build.target} ${build.args}"
    }
    post-destroot {
        ui_msg "TODO"
    }
}

# tests currently fail
test.run        yes
test.cmd        cd ${worksrcpath}/buildengine/tests && ${build.cmd}
test.target     ${build.target}
test.env        ${build.env}

variant docs description {Build documentation} {
    depends_build-append port:doxygen
    post-build {
        system -W ${worksrcpath}/buildengine "${prefix}/bin/doxygen -u"
        system -W ${worksrcpath}/buildengine "${prefix}/bin/doxygen"
    }
    post-destroot {
        set docdir ${destroot}${prefix}/share/doc/${name}
        xinstall -m 755 -d ${docdir}
        copy ${worksrcpath}/buildengine/html ${docdir}/
        copy ${worksrcpath}/buildengine/latex ${docdir}/
    }
}

destroot {
    set bindir ${destroot}${prefix}/bin
    xinstall -m 755 -d ${bindir}
    copy ${worksrcpath}/${name} ${bindir}/
    copy ${worksrcpath}/build ${bindir}/${name}-build
    copy ${worksrcpath}/buildengine/game ${bindir}/${name}-game
    set libdir ${destroot}${prefix}/lib
    xinstall -m 755 -d ${libdir}
    file copy ${worksrcpath}/audiolib/audiolib.a ${libdir}/${name}-audiolib.a
    #TODO: figure out what to do with the various headers and data files
}

livecheck.type none
