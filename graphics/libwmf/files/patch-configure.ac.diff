--- configure.ac.orig	2005-07-27 16:48:39.000000000 -0400
+++ configure.ac	2013-07-01 12:21:45.000000000 -0400
@@ -1,11 +1,16 @@
+#                                               -*- Autoconf -*-
+# Process this file with autoconf to produce a configure script.
+
+AC_PREREQ([2.69])
 AC_INIT([libwmf],[0.2.8],[wvware-devel@sourceforge.net])
 AC_CONFIG_SRCDIR([src/player.c])
+AC_CONFIG_MACRO_DIR([ac-helpers])
 
 LIBWMF_PACKAGE=libwmf
-AC_SUBST(LIBWMF_PACKAGE)
+AC_SUBST([LIBWMF_PACKAGE])
 
-dnl This next section is courtesy gtk+
-dnl 
+dnl# This next section is courtesy gtk+
+dnl# 
 # Making releases:
 #   WMF_MICRO_VERSION += 1;
 #   WMF_INTERFACE_AGE += 1;
@@ -24,39 +29,40 @@
 WMFLITE_INTERFACE_AGE=1
 WMFLITE_BINARY_AGE=1
 
-dnl spec file substitutions
+dnl# spec file substitutions
 LIBWMF_VERSION=$WMF_MAJOR_VERSION.$WMF_MINOR_VERSION.$WMF_MICRO_VERSION
 LIBWMF_RELEASE=1
-AC_SUBST(LIBWMF_VERSION)
-AC_SUBST(LIBWMF_RELEASE)
+AC_SUBST([LIBWMF_VERSION])
+AC_SUBST([LIBWMF_RELEASE])
 
 # libtool versioning
 LT_RELEASE=$WMF_MAJOR_VERSION.$WMF_MINOR_VERSION
-AC_SUBST(LT_RELEASE)
+AC_SUBST([LT_RELEASE])
 
 LT_CURRENT=`expr $WMF_MICRO_VERSION - $WMF_INTERFACE_AGE`
 LT_REVISION=$WMF_INTERFACE_AGE
 LT_AGE=`expr $WMF_BINARY_AGE - $WMF_INTERFACE_AGE`
-AC_SUBST(LT_CURRENT)
-AC_SUBST(LT_REVISION)
-AC_SUBST(LT_AGE)
+AC_SUBST([LT_CURRENT])
+AC_SUBST([LT_REVISION])
+AC_SUBST([LT_AGE])
 
 LT_LITE_CURRENT=`expr $WMF_MICRO_VERSION - $WMFLITE_INTERFACE_AGE`
 LT_LITE_REVISION=$WMFLITE_INTERFACE_AGE
 LT_LITE_AGE=`expr $WMFLITE_BINARY_AGE - $WMFLITE_INTERFACE_AGE`
-AC_SUBST(LT_LITE_CURRENT)
-AC_SUBST(LT_LITE_REVISION)
-AC_SUBST(LT_LITE_AGE)
+AC_SUBST([LT_LITE_CURRENT])
+AC_SUBST([LT_LITE_REVISION])
+AC_SUBST([LT_LITE_AGE])
 
-# For automake.
+# For automake (no longer needed actually).
 PACKAGE=$LIBWMF_PACKAGE
 VERSION=$LIBWMF_VERSION
 
-dnl Initialize automake stuff
-AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)
+dnl# Initialize automake stuff
+AM_INIT_AUTOMAKE([foreign no-define])
+AM_MAINTAINER_MODE
 
 # Specify a configuration file
-AM_CONFIG_HEADER(wmfconfig.h)
+AC_CONFIG_HEADERS([wmfconfig.h])
 
 AH_TOP([
 #ifndef LIBWMF_CONFIG_H
@@ -75,7 +81,7 @@
 # WMF_DEFS is for flags such as -DDEBUG which are to applied only to
 # libwmf source not extra packages such as gd - more global defs should be
 # added to WMF_CFLAGS
-AC_ARG_ENABLE(debug,[  --enable-debug          set DEBUG option to libwmf [default=no]],[
+AC_ARG_ENABLE([debug],[  --enable-debug          set DEBUG option to libwmf [default=no]],[
 	if [ test "x$enableval" != "xno" ]; then
 		WMF_DEFS="-DDEBUG=1"
 	else
@@ -84,13 +90,13 @@
 ],[	WMF_DEFS=
 ])
 
-AC_ARG_ENABLE(ansi,[  --enable-ansi           set -ansi option to libwmf [default=no]],[
+AC_ARG_ENABLE([ansi],[  --enable-ansi           set -ansi option to libwmf [default=no]],[
 	if [ test "x$enableval" != "xno" ]; then
 		WMF_DEFS="$WMF_DEFS -ansi"
 	fi
 ])
 
-AC_ARG_ENABLE(pedantic,[  --enable-pedantic       set -pedantic option to libwmf [default=no]],[
+AC_ARG_ENABLE([pedantic],[  --enable-pedantic       set -pedantic option to libwmf [default=no]],[
 	if [ test "x$enableval" != "xno" ]; then
 		WMF_DEFS="$WMF_DEFS -pedantic"
 	fi
@@ -98,14 +104,14 @@
 
 LIBWMF_BUILDSTYLE=heavy
 libwmf_build_all=yes
-AC_ARG_ENABLE(heavy,[  --disable-heavy         only build libwmflite [default=build all]],[
+AC_ARG_ENABLE([heavy],[  --disable-heavy         only build libwmflite [default=build all]],[
 	if [ test "x$enableval" = "xno" ]; then
 		LIBWMF_BUILDSTYLE=lite
 		libwmf_build_all=no
 	fi
 ])
-AC_SUBST(LIBWMF_BUILDSTYLE)
-AM_CONDITIONAL(LIBWMF_BUILD_ALL,[ test "x$libwmf_build_all" = "xyes" ])
+AC_SUBST([LIBWMF_BUILDSTYLE])
+AM_CONDITIONAL([LIBWMF_BUILD_ALL],[ test "x$libwmf_build_all" = "xyes" ])
 
 # gd does not read config.h so need to pass it options on the command line:
 GD_DEFS=
@@ -131,9 +137,9 @@
 esac
 AC_MSG_RESULT([$os_win32])
 
-AC_SUBST(SYS_LIBM)
+AC_SUBST([SYS_LIBM])
 
-dnl Checks for programs.
+dnl# Checks for programs.
 
 AC_PROG_AWK
 AC_PROG_CC
@@ -144,47 +150,59 @@
 
 # Configure libtool
 AC_LIBTOOL_WIN32_DLL
+
+define([AC_LIBTOOL_LANG_CXX_CONFIG], [:])dnl
+define([AC_LIBTOOL_LANG_F77_CONFIG], [:])dnl
+
 AM_PROG_LIBTOOL
-#end libtool stuff
+LT_LANG([C])
+
+# end libtool stuff
 
-dnl Checks for header files.
+dnl# Checks for header files.
 AC_HEADER_STDC
-AC_CHECK_HEADERS(time.h)
-AC_CHECK_HEADER(unistd.h,[
-	AC_DEFINE(HAVE_UNISTD_H,1,[define if you have unistd.h])
+AC_CHECK_HEADERS([float.h limits.h locale.h stddef.h time.h])
+AC_CHECK_HEADER([unistd.h],[
+	AC_DEFINE([HAVE_UNISTD_H],[1],[define if you have unistd.h])
 	GD_DEFS="$GD_DEFS -DHAVE_UNISTD_H"
 ])
 
-dnl Checks for typedefs, structures, and compiler characteristics.
+dnl# Checks for typedefs, structures, and compiler characteristics.
 AC_C_CONST
+AC_C_INLINE
 
 AC_TYPE_OFF_T
 AC_TYPE_SIZE_T
+AC_CHECK_TYPES([ptrdiff_t])
 
-dnl Checks for library functions.
-AC_CHECK_FUNCS(strstr)
+dnl# Checks for library functions.
+AC_FUNC_ERROR_AT_LINE
+AC_FUNC_MALLOC
+AC_FUNC_REALLOC
+AC_FUNC_STRTOD
+AC_CHECK_FUNCS([floor isascii localeconv mblen memset modf pow sqrt strcasecmp strchr strdup strerror strncasecmp strrchr strstr strtol strtoul])
 
-dnl Check for trio functions.
+dnl# Check for trio functions.
 require_trio=no
 
 if test $LIBWMF_BUILDSTYLE = heavy; then
 
-AC_CHECK_FUNCS(printf fprintf vfprintf sprintf,,require_trio=yes)
-AC_CHECK_FUNCS(vprintf vsprintf)
-AC_CHECK_FUNCS(sscanf,,require_trio=yes)
+AC_CHECK_FUNCS([printf fprintf vfprintf sprintf],[],[require_trio=yes])
+AC_CHECK_FUNCS([vprintf vsprintf])
+AC_CHECK_FUNCS([sscanf],[],[require_trio=yes])
 AC_CHECK_FUNCS(scanf vscanf fscanf vsscanf)
 
-dnl Special case (1): vsnprintf
-AC_CHECK_FUNCS(vsnprintf,,check_for_vsnprintf=yes)
+dnl# Special case (1): vsnprintf
+AC_CHECK_FUNCS([vsnprintf],[],[check_for_vsnprintf=yes])
 
 if [ test "x$check_for_vsnprintf" = "xyes" ]; then
-	AC_CHECK_FUNC(_vsnprintf,[
-		AC_DEFINE(HAVE_VSNPRINTF,1,[define if you have vsnprintf])
-		AC_DEFINE(vsnprintf,_vsnprintf,[define to your implementation of vsnprintf])
-	],[	dnl Hmm. On the off-chance, check for vsnprintf in libdb.
-		dnl This should, hopefully, solve the problem with Tru64 4.x
-		dnl which is incompatible with trio (the latter's fault).
-		AC_CHECK_LIB(db,vsnprintf,[
+	AC_CHECK_FUNC([_vsnprintf],[
+		AC_DEFINE([HAVE_VSNPRINTF],[1],[define if you have vsnprintf])
+		AC_DEFINE([vsnprintf],[_vsnprintf],[define to your implementation of vsnprintf])
+	],[	dnl# Hmm. On the off-chance, check for vsnprintf in libdb.
+		dnl# This should, hopefully, solve the problem with Tru64 4.x
+		dnl# which is incompatible with trio (the latter's fault).
+		AC_CHECK_LIB([db],[vsnprintf],[
 			AC_DEFINE(HAVE_VSNPRINTF,1,[define if you have vsnprintf])
 			WMF_LIBFLAGS="$WMF_LIBFLAGS -ldb"
 		],[	require_trio=yes
@@ -193,37 +211,37 @@
 fi
 
 dnl Special case (2): snprintf
-AC_CHECK_FUNCS(snprintf,,check_for_snprintf=yes)
+AC_CHECK_FUNCS([snprintf],[],[check_for_snprintf=yes])
 
 if [ test "x$check_for_snprintf" = "xyes" ]; then
-	AC_CHECK_FUNC(_snprintf,[
-		AC_DEFINE(HAVE_SNPRINTF,1,[define if you have snprintf])
-		AC_DEFINE(snprintf,_snprintf,[define to your implementation of snprintf])
+	AC_CHECK_FUNC([_snprintf],[
+		AC_DEFINE([HAVE_SNPRINTF],[1],[define if you have snprintf])
+		AC_DEFINE([snprintf],[_snprintf],[define to your implementation of snprintf])
 	])
 fi
 
-dnl Special case (3): vfscanf is defined as a macro for Darwin / Mac OS X
-AC_CHECK_FUNCS(vfscanf,,check_for_vfscanf=yes)
+dnl# Special case (3): vfscanf is defined as a macro for Darwin / Mac OS X
+AC_CHECK_FUNCS([vfscanf],[],[check_for_vfscanf=yes])
 
 if [ test "x$check_for_vfscanf" = "xyes" ]; then
-	AC_MSG_CHECKING(for vfscanf in stdio.h)
-	AC_EGREP_HEADER(vfscanf,stdio.h,[
-		AC_MSG_RESULT(yes)
-		AC_DEFINE(HAVE_VFSCANF,1,[define if you have vfscanf])
-	],[	AC_MSG_RESULT(no)
+	AC_MSG_CHECKING([for vfscanf in stdio.h])
+	AC_EGREP_HEADER([vfscanf],[stdio.h],[
+		AC_MSG_RESULT([yes])
+		AC_DEFINE([HAVE_VFSCANF],[1],[define if you have vfscanf])
+	],[	AC_MSG_RESULT([no])
 	])
 fi
 
 fi # $LIBWMF_BUILDSTYLE = heavy
 
-AM_CONDITIONAL(LIBWMF_OPT_TRIO,[ test "x$require_trio" = "xyes" ])
+AM_CONDITIONAL([LIBWMF_OPT_TRIO],[ test "x$require_trio" = "xyes" ])
 
-dnl - but always define this; the re-definitions are selective anyway...
-AC_DEFINE(TRIO_REPLACE_STDIO,1,[If any *printf or *scanf functions are missing, cover them with trio functions])
+dnl# - but always define this; the re-definitions are selective anyway...
+AC_DEFINE([TRIO_REPLACE_STDIO],[1],[If any *printf or *scanf functions are missing, cover them with trio functions])
 
-dnl Checks for libraries, etc.
+dnl# Checks for libraries, etc.
 
-AC_ARG_WITH(layers,[  --with-layers           whether to build layers [default is yes]],[
+AC_ARG_WITH([layers],[  --with-layers           whether to build layers [default is yes]],[
 	if [ test "x$withval" = "xyes" ]; then
 		libwmf_layers=yes
 	elif [ test "x$withval" = "xno" ]; then
@@ -243,11 +261,11 @@
 fi # $LIBWMF_BUILDSTYLE = lite
 
 if [ test $libwmf_layers = no ]; then
-	AC_DEFINE(WITHOUT_LAYERS,1,[defining this will disable egs, fig, svg & foreign layers])
+	AC_DEFINE([WITHOUT_LAYERS],[1],[defining this will disable egs, fig, svg & foreign layers])
 fi
 
-AM_CONDITIONAL(LIBWMF_OPT_MODULES,[ test $libwmf_layers = modules ])
-AM_CONDITIONAL(LIBWMF_OPT_LAYERS,[ test $libwmf_layers != no ])
+AM_CONDITIONAL([LIBWMF_OPT_MODULES],[ test $libwmf_layers = modules ])
+AM_CONDITIONAL([LIBWMF_OPT_LAYERS],[ test $libwmf_layers != no ])
 
 libwmf_x=no
 libwmf_xml=no
@@ -262,7 +280,7 @@
 	no_x=yes
 fi
 
-dnl (1) X        {-lX11}      [(!)-DX_DISPLAY_MISSING]
+dnl# (1) X        {-lX11}      [(!)-DX_DISPLAY_MISSING]
 
 WMF_X_CONFIG_CFLAGS=""
 WMF_X_CFLAGS=""
@@ -275,9 +293,9 @@
 	libwmf_x=yes
 fi
 
-AM_CONDITIONAL(LIBWMF_OPT_X,[ test "x$no_x" != "xyes" ])
+AM_CONDITIONAL([LIBWMF_OPT_X],[ test "x$no_x" != "xyes" ])
 
-dnl (2) expat/libxml2 {-lexpat/-lxml2}
+dnl# (2) expat/libxml2 {-lexpat/-lxml2}
 
 WMF_XML_DIR=""
 WMF_XML_CFLAGS=""
@@ -285,7 +303,7 @@
 
 libwmf_xml=unknown
 
-AC_ARG_WITH(expat,[  --with-expat=DIR        use expat in DIR],[
+AC_ARG_WITH([expat],[  --with-expat=DIR        use expat in DIR],[
 	if test "x$withval" = "xno"; then
 		libwmf_xml=libxml2
 	elif test "x$withval" = "xyes"; then
@@ -296,7 +314,7 @@
 	fi
 ])
 
-AC_ARG_WITH(libxml2,[  --with-libxml2=DIR      use libxml2 in DIR],[
+AC_ARG_WITH([libxml2],[  --with-libxml2=DIR      use libxml2 in DIR],[
 	if test "x$withval" = "xno"; then
 		if test $libwmf_xml = libxml2; then
 			libwmf_xml=none
@@ -335,8 +353,8 @@
 		WMF_XML_CFLAGS=""
 		WMF_XML_LDFLAGS="-lexpat"
 	fi
-	AC_CHECK_HEADER(expat.h,[
-		AC_CHECK_LIB(expat,XML_ParserFree,[
+	AC_CHECK_HEADER([expat.h],[
+		AC_CHECK_LIB([expat],[XML_ParserFree],[
 			libwmf_xml=expat
 		],[	if test $libwmf_xml = expat; then
 				AC_MSG_ERROR([* * * unable to find expat * * *])
@@ -354,9 +372,9 @@
 
 if test $libwmf_xml = libxml2 -o $libwmf_xml = unknown; then
 	if [ test -n "$WMF_XML_DIR" ]; then
-		AC_PATH_PROG(XML2_CONFIG,xml2-config,,$WMF_XML_DIR/bin $PATH)
+		AC_PATH_PROG([XML2_CONFIG],[xml2-config],[],[$WMF_XML_DIR/bin $PATH])
 	else
-		AC_PATH_PROG(XML2_CONFIG,xml2-config)
+		AC_PATH_PROG([XML2_CONFIG],[xml2-config])
 	fi
 
 	if test "x$XML2_CONFIG" != "x"; then
@@ -369,16 +387,16 @@
 fi
 
 if test $libwmf_xml = expat; then
-	AC_DEFINE(HAVE_EXPAT,1,[define if you have expat])
+	AC_DEFINE([HAVE_EXPAT],[1],[define if you have expat])
 elif test $libwmf_xml = libxml2; then
-	AC_DEFINE(HAVE_LIBXML2,1,[define if you have libxml2])
+	AC_DEFINE([HAVE_LIBXML2],[1],[define if you have libxml2])
 else
 	libwmf_xml=none
 	WMF_XML_CFLAGS=""
 	WMF_XML_LDFLAGS=""
 fi
 
-dnl (3) freetype {-lfreetype} [-DHAVE_LIBFREETYPE]
+dnl# (3) freetype {-lfreetype} [-DHAVE_LIBFREETYPE]
 
 WMF_FT_CONFIG_CFLAGS=""
 WMF_FT_CFLAGS=""
@@ -389,20 +407,20 @@
 
 have_freetype=no
 
-AC_ARG_WITH(freetype,[  --with-freetype=DIR     use freetype2 in DIR],[
+AC_ARG_WITH([freetype],[  --with-freetype=DIR     use freetype2 in DIR],[
 	if [ test "x$withval" != "xno" ]; then
 		if [ test "x$withval" != "xyes" ]; then
 			FREETYPE_DIR=$withval
 		fi
 	else
-		AC_MSG_ERROR(* * * libwmf requires freetype2 * * *)
+		AC_MSG_ERROR([* * * libwmf requires freetype2 * * *])
 	fi
 ])
 
 if [ test -n "$FREETYPE_DIR" ]; then
-	AC_PATH_PROG(FREETYPE_CONFIG,freetype-config, ,[$FREETYPE_DIR/bin:$PATH])
+	AC_PATH_PROG([FREETYPE_CONFIG],[freetype-config], [],[$FREETYPE_DIR/bin:$PATH])
 else
-	AC_PATH_PROG(FREETYPE_CONFIG,freetype-config)
+	AC_PATH_PROG([FREETYPE_CONFIG],[freetype-config])
 fi
 
 if [ test -n "$FREETYPE_CONFIG" ]; then
@@ -426,11 +444,11 @@
 CPPFLAGS="$freetype_cflags $CPPFLAGS"
 LDFLAGS="$LDFLAGS $freetype_libs"
 
-AC_CHECK_LIB(freetype,FT_Init_FreeType,[
+AC_CHECK_LIB([freetype],[FT_Init_FreeType],[
 	WMF_FT_LDFLAGS="$freetype_libs"
 ],[	AC_MSG_ERROR([* * * freetype(2) is required * * *])
 ])
-AC_CHECK_HEADER(ft2build.h,[
+AC_CHECK_HEADER([ft2build.h],[
 	WMF_FT_CFLAGS="$freetype_cflags"
 	WMF_FT_CONFIG_CFLAGS="$freetype_cflags"
 ],[	AC_MSG_ERROR([* * * freetype(2) is required * * *])
@@ -441,7 +459,7 @@
 CPPFLAGS=$_cppflags
 LDFLAGS=$_ldflags
 
-dnl (4) zlib     {-lz}
+dnl# (4) zlib     {-lz}
 
 WMF_Z_CONFIG_CFLAGS=""
 WMF_Z_CFLAGS=""
@@ -450,7 +468,7 @@
 _cppflags=$CPPFLAGS
 _ldflags=$LDFLAGS
 
-AC_ARG_WITH(zlib,[  --with-zlib=DIR         use libz in DIR],[
+AC_ARG_WITH([zlib],[  --with-zlib=DIR         use libz in DIR],[
 	if [ test "x$withval" != "xno" ]; then
 		if [ test "x$withval" != "xyes" ]; then
 			ZLIB_DIR=$withval
@@ -458,16 +476,16 @@
 			LDFLAGS="$LDFLAGS -L$withval/lib"
 		fi
 	else
-		AC_MSG_ERROR(* * * libwmf requires zlib * * *)
+		AC_MSG_ERROR([* * * libwmf requires zlib * * *])
 	fi
 ])
 
 if test $LIBWMF_BUILDSTYLE = heavy; then
 
-dnl WMF_Z_CFLAGS are required later on when testing for png, etc.
+dnl# WMF_Z_CFLAGS are required later on when testing for png, etc.
 
-AC_CHECK_HEADER(zlib.h,[
-	AC_CHECK_LIB(z,gzputs,[
+AC_CHECK_HEADER([zlib.h],[
+	AC_CHECK_LIB([z],[gzputs],[
 		if [ test "x$ZLIB_DIR" != "x" ]; then
 			WMF_Z_CONFIG_CFLAGS="-I$ZLIB_DIR/include"
 			WMF_Z_CFLAGS="-I$ZLIB_DIR/include"
@@ -475,7 +493,7 @@
 		else
 			WMF_Z_LDFLAGS="-lz"
 		fi
-	],[	AC_CHECK_LIB(gz,gzputs,[
+	],[	AC_CHECK_LIB([gz],[gzputs],[
 			if [ test "x$ZLIB_DIR" != "x" ]; then
 				WMF_Z_CONFIG_CFLAGS="-I$ZLIB_DIR/include"
 				WMF_Z_CFLAGS="-I$ZLIB_DIR/include"
@@ -483,10 +501,10 @@
 			else
 				WMF_Z_LDFLAGS="-lgz"
 			fi
-		],[	AC_MSG_ERROR(* * * unable to find libz which is required by libwmf * * *)
+		],[	AC_MSG_ERROR([* * * unable to find libz which is required by libwmf * * *])
 		])
 	])
-],[	AC_MSG_ERROR(* * * unable to find "zlib.h" which is required by libwmf * * *)
+],[	AC_MSG_ERROR([* * * unable to find "zlib.h" which is required by libwmf * * *])
 ])
 
 fi # $LIBWMF_BUILDSTYLE = heavy
@@ -494,7 +512,7 @@
 CPPFLAGS=$_cppflags
 LDFLAGS=$_ldflags
 
-dnl (5) png      {-lpng}      [-DHAVE_LIBPNG]
+dnl# (5) png      {-lpng}      [-DHAVE_LIBPNG]
 
 WMF_PNG_CFLAGS=""
 WMF_PNG_LDFLAGS=""
@@ -502,7 +520,7 @@
 _cppflags=$CPPFLAGS
 _ldflags=$LDFLAGS
 
-AC_ARG_WITH(png,[  --with-png=DIR          use libpng in DIR],[
+AC_ARG_WITH([png],[  --with-png=DIR          use libpng in DIR],[
 	if [ test "x$withval" != "xno" ]; then
 		if [ test "x$withval" != "xyes" ]; then
 			PNG_DIR=$withval
@@ -510,29 +528,29 @@
 			LDFLAGS="$LDFLAGS -L$withval/lib"
 		fi
 	else
-		AC_MSG_ERROR(* * * libwmf requires libpng * * *)
+		AC_MSG_ERROR([* * * libwmf requires libpng * * *])
 	fi
 ])
 
 if test $LIBWMF_BUILDSTYLE = heavy; then
 
-dnl "png.h" includes "zlib.h"
+dnl# "png.h" includes "zlib.h"
 CPPFLAGS="$CPPFLAGS $WMF_Z_CFLAGS"
 
-AC_CHECK_HEADER(png.h,[
-	AC_CHECK_LIB(png,png_write_image,[
+AC_CHECK_HEADER([png.h],[
+	AC_CHECK_LIB([png],[png_write_image],[
 		if [ test "x$PNG_DIR" != "x" ]; then
 			WMF_PNG_CFLAGS="-I$PNG_DIR/include"
 			WMF_PNG_LDFLAGS="-L$PNG_DIR/lib -lpng"
 		else
 			WMF_PNG_LDFLAGS="-lpng"
 		fi
-	],[	AC_MSG_ERROR(* * * unable to find libpng which is required by libwmf * * *)
-	],-lz -lm)
-],[	AC_MSG_ERROR(* * * unable to find "png.h" which is required by libwmf * * *)
+	],[	AC_MSG_ERROR([* * * unable to find libpng which is required by libwmf * * *])
+	],[-lz -lm])
+],[	AC_MSG_ERROR([* * * unable to find "png.h" which is required by libwmf * * *])
 ])
 
-AC_DEFINE(HAVE_LIBPNG,1,[define if you have libpng])
+AC_DEFINE([HAVE_LIBPNG],[1],[define if you have libpng])
 GD_DEFS="$GD_DEFS -DHAVE_LIBPNG"
 
 fi # $LIBWMF_BUILDSTYLE = heavy
@@ -540,7 +558,7 @@
 CPPFLAGS=$_cppflags
 LDFLAGS=$_ldflags
 
-dnl (6) jpeg     {-ljpeg}     [-DHAVE_LIBJPEG] (optional)
+dnl# (6) jpeg     {-ljpeg}     [-DHAVE_LIBJPEG] (optional)
 
 WMF_JPEG_CFLAGS=""
 WMF_JPEG_LDFLAGS=""
@@ -548,7 +566,7 @@
 _cppflags=$CPPFLAGS
 _ldflags=$LDFLAGS
 
-AC_ARG_WITH(jpeg,[  --with-jpeg=DIR         use libjpeg in DIR],[
+AC_ARG_WITH([jpeg],[  --with-jpeg=DIR         use libjpeg in DIR],[
 	if [ test "x$withval" != "xno" ]; then
 		if [ test "x$withval" != "xyes" ]; then
 			JPEG_DIR=$withval
@@ -567,15 +585,15 @@
 fi # $LIBWMF_BUILDSTYLE = lite
 
 if [ test "$search_for_jpeg" != "no" ]; then
-	AC_CHECK_HEADER(jpeglib.h,[
-		AC_CHECK_LIB(jpeg,jpeg_CreateCompress,[
+	AC_CHECK_HEADER([jpeglib.h],[
+		AC_CHECK_LIB([jpeg],[jpeg_CreateCompress],[
 			if [ test "x$JPEG_DIR" != "x" ]; then
 				WMF_JPEG_CFLAGS="-I$JPEG_DIR/include"
 				WMF_JPEG_LDFLAGS="-L$JPEG_DIR/lib -ljpeg"
 			else
 				WMF_JPEG_LDFLAGS="-ljpeg"
 			fi
-			AC_DEFINE(HAVE_LIBJPEG,1,[define if you have libjpeg])
+			AC_DEFINE([HAVE_LIBJPEG],[1],[define if you have libjpeg])
 			GD_DEFS="$GD_DEFS -DHAVE_LIBJPEG"
 			libwmf_gd_jpeg=yes
 		])
@@ -585,10 +603,10 @@
 CPPFLAGS=$_cppflags
 LDFLAGS=$_ldflags
 
-dnl (7) gd       {-lgd}
+dnl# (7) gd       {-lgd}
 
-dnl Chances are that even if gd is present, it won't have been patched for compatibility
-dnl with libwmf, but worth checking anyway...
+dnl# Chances are that even if gd is present, it won't have been patched for compatibility
+dnl# with libwmf, but worth checking anyway...
 
 WMF_GD_CFLAGS=""
 WMF_GD_LDFLAGS=""
@@ -598,7 +616,7 @@
 _cppflags=$CPPFLAGS
 _ldflags=$LDFLAGS
 
-AC_ARG_WITH(sys-gd,[  --with-sys-gd=DIR       use system GD in DIR (if compatible)],[
+AC_ARG_WITH([sys-gd],[  --with-sys-gd=DIR       use system GD in DIR (if compatible)],[
 	if [ test "x$withval" != "xno" ]; then
 		if [ test "x$withval" != "xyes" ]; then
 			GD_DIR=$withval
@@ -612,7 +630,7 @@
 ],[	search_for_gd=yes
 ])
 
-AC_ARG_ENABLE(gd,[  --disable-gd            don't build GD, don't look for it, don't require it],[
+AC_ARG_ENABLE([gd],[  --disable-gd            don't build GD, don't look for it, don't require it],[
 	if [ test "x$enableval" = "xno" ]; then
 		search_for_gd=no
 		libwmf_gd="none"
@@ -626,12 +644,12 @@
 if [ test "$search_for_gd" != "no" ]; then
 	other_libs=""
 
-	dnl Do I need extra libs with Xpm?
-	dnl 
+	dnl# Do I need extra libs with Xpm?
+	dnl# 
 	if [ test "x$libwmf_x" = "xyes" ]; then
 		CPPFLAGS="$CPPFLAGS $WMF_X_CFLAGS"
 		LDFLAGS="$LDFLAGS $WMF_X_LDFLAGS"
-		AC_CHECK_LIB(Xpm,main,[
+		AC_CHECK_LIB([Xpm],[main],[
 			other_libs="$other_libs -lXpm"
 			WMF_GD_LDFLAGS="-lXpm"
 		])
@@ -647,17 +665,17 @@
 	LDFLAGS="$LDFLAGS $WMF_FT_LDFLAGS $WMF_PNG_LDFLAGS $WMF_Z_LDFLAGS"
 	other_libs="$other_libs -lfreetype -lpng -lz -lm"
 
-	AC_CHECK_HEADER(gd.h,[
-		AC_CHECK_LIB(gd,gdClipSetAdd,[
-			AC_CHECK_LIB(gd,gdft_draw_bitmap,[
+	AC_CHECK_HEADER([gd.h],[
+		AC_CHECK_LIB([gd],[gdClipSetAdd],[
+			AC_CHECK_LIB([gd],[gdft_draw_bitmap],[
 				libwmf_gd="sys"
-			],,$other_libs)
-		],,$other_libs)
+			],[],[$other_libs])
+		],[],[$other_libs])
 	])
 fi
 
 if [ test "x$libwmf_gd" != "xnone" ]; then
-	AC_DEFINE(HAVE_GD,1,[define if you have libgd])
+	AC_DEFINE([HAVE_GD],[1],[define if you have libgd])
 	build_gd_layer=yes
 else
 	build_gd_layer=no
@@ -677,13 +695,13 @@
 	WMF_GD_LDFLAGS=""
 fi
 
-AM_CONDITIONAL(LIBWMF_OPT_GD,[ test "x$build_gd_layer" = "xyes" ])
-AM_CONDITIONAL(LIBWMF_OPT_SYS_GD,[ test "x$libwmf_gd" = "xsys" ])
+AM_CONDITIONAL([LIBWMF_OPT_GD],[ test "x$build_gd_layer" = "xyes" ])
+AM_CONDITIONAL([LIBWMF_OPT_SYS_GD],[ test "x$libwmf_gd" = "xsys" ])
 
 CPPFLAGS=$_cppflags
 LDFLAGS=$_ldflags
 
-dnl (8) plot     {-lplot}
+dnl# (8) plot     {-lplot}
 
 WMF_PLOT_CFLAGS=""
 WMF_PLOT_LDFLAGS=""
@@ -691,26 +709,26 @@
 _cppflags=$CPPFLAGS
 _ldflags=$LDFLAGS
 
-# AC_ARG_WITH(plot,[  --with-plot=DIR         use GNU plotutils (>= 2.4.0) in DIR (default no)],[
-#	if [ test "x$withval" != "xno" ]; then
-#		AC_MSG_ERROR([* * * plotutils is not supported, sorry * * *])
-#		if [ test "x$withval" != "xyes" ]; then
-#			PLOT_DIR=$withval
-#			CPPFLAGS="$CPPFLAGS -I$withval/include"
-#			LDFLAGS="$LDFLAGS -L$withval/lib"
-#		fi
-#		search_for_plot=yes
-#	else
-#		search_for_plot=no
-#	fi
-#],[	search_for_plot=no
-#])
+AC_ARG_WITH([plot],[  --with-plot=DIR         use GNU plotutils (>= 2.4.0) in DIR (default no)],[
+	if [ test "x$withval" != "xno" ]; then
+		AC_MSG_ERROR([* * * plotutils is not supported (yet), sorry * * *])
+		if [ test "x$withval" != "xyes" ]; then
+			PLOT_DIR=$withval
+			CPPFLAGS="$CPPFLAGS -I$withval/include"
+			LDFLAGS="$LDFLAGS -L$withval/lib"
+		fi
+		search_for_plot=yes
+	else
+		search_for_plot=no
+	fi
+],[	search_for_plot=no
+])
 
 search_for_plot=no
 
 if [ test "$search_for_plot" != "no" ]; then
-	AC_CHECK_HEADER(plot.h,[
-		AC_CHECK_LIB(plot,pl_libplot_ver,[
+	AC_CHECK_HEADER([plot.h],[
+		AC_CHECK_LIB([plot],[pl_libplot_ver],[
 			AC_LIBPLOT_LIBS
 			if [ test $ac_can_link_libplot != no ]; then
 				if [ test "x$PLOT_DIR" != "x" ]; then
@@ -719,22 +737,22 @@
 				else
 					WMF_PLOT_LDFLAGS="$LIBPLOT_LIBS"
 				fi
-				AC_DEFINE(HAVE_LIBPLOT,1,[define if you have libplot])
+				AC_DEFINE([HAVE_LIBPLOT],[1],[define if you have libplot])
 				libwmf_plot=maybe
 			else
-				AC_MSG_ERROR(* * * sorry - unable to link against libplot * * *)
+				AC_MSG_ERROR([* * * sorry - unable to link against libplot * * *])
 			fi
-		],[	AC_MSG_ERROR(GNU plotutils >= 2.4.0 required)
+		],[	AC_MSG_ERROR([GNU plotutils >= 2.4.0 required])
 		])
 	])
 fi
 
-AM_CONDITIONAL(LIBWMF_OPT_PLOT,[ test "x$libwmf_plot" != "xno" ])
+AM_CONDITIONAL([LIBWMF_OPT_PLOT],[ test "x$libwmf_plot" != "xno" ])
 
 CPPFLAGS=$_cppflags
 LDFLAGS=$_ldflags
 
-dnl Dom's gdk-pixbuf plugin
+dnl# Dom's gdk-pixbuf plugin
 
 wmf_gdk_pixbuf=no
 
@@ -742,21 +760,13 @@
 GDK_PIXBUF_LIBS=""
 GDK_PIXBUF_DIR=""
 
-if test $LIBWMF_BUILDSTYLE != lite; then
-	PKG_CHECK_MODULES(GDK_PIXBUF,gdk-pixbuf-2.0 >= 2.1.2,[
-		GTK_VERSION=`$PKG_CONFIG --variable=gtk_binary_version gtk+-2.0`
-		GDK_PIXBUF_DIR="gtk-2.0/$GTK_VERSION/loaders"
-		wmf_gdk_pixbuf=yes
-	],[	wmf_gdk_pixbuf=no
-	])
-fi
-AM_CONDITIONAL(LIBWMF_GDK_PIXBUF,[test $wmf_gdk_pixbuf = yes])
+AM_CONDITIONAL([LIBWMF_GDK_PIXBUF],[test $wmf_gdk_pixbuf = yes])
 
-AC_SUBST(GDK_PIXBUF_CFLAGS)
-AC_SUBST(GDK_PIXBUF_LIBS)
-AC_SUBST(GDK_PIXBUF_DIR)
+AC_SUBST([GDK_PIXBUF_CFLAGS])
+AC_SUBST([GDK_PIXBUF_LIBS])
+AC_SUBST([GDK_PIXBUF_DIR])
 
-dnl Other options...
+dnl# Other options...
 
 AC_ARG_WITH(docdir,[  --with-docdir=DIR       install documentation in DIR],[
 	WMF_DOCDIR=$withval
@@ -767,7 +777,7 @@
 	fi
 ])
 
-AC_ARG_WITH(fontdir,[  --with-fontdir=DIR      install Type1 fonts in DIR],[
+AC_ARG_WITH([fontdir],[  --with-fontdir=DIR      install Type1 fonts in DIR],[
 	WMF_FONTDIR=$withval
 ],[	if test "x$prefix" = "xNONE"; then
 		WMF_FONTDIR=$ac_default_prefix/share/$PACKAGE/fonts
@@ -776,24 +786,24 @@
 	fi
 ])
 
-AC_ARG_WITH(sysfontmap,[  --with-sysfontmap=FILE  [default is /usr/share/fonts/fontmap]],[
+AC_ARG_WITH([sysfontmap],[  --with-sysfontmap=FILE  [default is /usr/share/fonts/fontmap]],[
 	WMF_SYS_FONTMAP=$withval
 ],[	WMF_SYS_FONTMAP=/usr/share/fonts/fontmap
 ])
 
-AC_ARG_WITH(xtrafontmap,[  --with-xtrafontmap=FILE non-system XML fontmap],[
+AC_ARG_WITH([xtrafontmap],[  --with-xtrafontmap=FILE non-system XML fontmap],[
 	WMF_XTRA_FONTMAP=$withval
 ],[	WMF_XTRA_FONTMAP=$WMF_FONTDIR/fontmap
 ])
 
-AC_ARG_WITH(gsfontmap,[  --with-gsfontmap=FILE   ghostscript fontmap],[
+AC_ARG_WITH([gsfontmap],[  --with-gsfontmap=FILE   ghostscript fontmap],[
 	WMF_GS_FONTMAP=$withval
-],[	dnl 
-	dnl Test first for Debian Font Manager's ghostscript Fontmap.
-	dnl Next test for GnuWin32 ghostscript Fontmap.
-	dnl Next test for standard ghostscript Fontmap.
-	dnl If not found, default to RedHat location.
-	dnl 
+],[	dnl# 
+	dnl# Test first for Debian Font Manager's ghostscript Fontmap.
+	dnl# Next test for GnuWin32 ghostscript Fontmap.
+	dnl# Next test for standard ghostscript Fontmap.
+	dnl# If not found, default to RedHat location.
+	dnl# 
 	if [ test -r /var/lib/defoma/gs.d/dirs/fonts/Fontmap.GS ]; then
 		WMF_GS_FONTMAP=/var/lib/defoma/gs.d/dirs/fonts/Fontmap.GS
 	elif [ test -r /var/lib/defoma/gs.d/dirs/fonts/Fontmap ]; then
@@ -824,14 +834,14 @@
 	fi
 ])
 
-AC_ARG_WITH(gsfontdir,[  --with-gsfontdir=DIR    directory for ghostscript fonts],[
+AC_ARG_WITH([gsfontdir],[  --with-gsfontdir=DIR    directory for ghostscript fonts],[
 	WMF_GS_FONTDIR=$withval
-],[	dnl 
-	dnl Test first for Debian Font Manager's ghostscript font directory.
-	dnl Next test for GnuWin32 ghostscript font directory.
-	dnl Next test for standard ghostscript font directory.
-	dnl If not found, default to RedHat location.
-	dnl 
+],[	dnl# 
+	dnl# Test first for Debian Font Manager's ghostscript font directory.
+	dnl# Next test for GnuWin32 ghostscript font directory.
+	dnl# Next test for standard ghostscript font directory.
+	dnl# If not found, default to RedHat location.
+	dnl# 
 	if [ test -d /var/lib/defoma/gs.d/dirs/fonts ]; then
 		WMF_GS_FONTDIR=/var/lib/defoma/gs.d/dirs/fonts
 	elif [ test -d 'c:/progra~1/gs/gs/lib/fonts' ]; then
@@ -843,31 +853,31 @@
 	fi
 ])
 
-dnl Output...
+dnl# Output...
 
 WMF_CFLAGS="$WMF_FT_CFLAGS $WMF_X_CFLAGS $WMF_PLOT_CFLAGS $WMF_XML_CFLAGS"
 WMF_CFLAGS="$WMF_CFLAGS $WMF_GD_CFLAGS $WMF_JPEG_CFLAGS $WMF_PNG_CFLAGS $WMF_Z_CFLAGS"
 
-AC_SUBST(WMF_CFLAGS)
+AC_SUBST([WMF_CFLAGS])
 
 WMF_CONFIG_CFLAGS="$WMF_FT_CONFIG_CFLAGS $WMF_Z_CONFIG_CFLAGS $WMF_X_CONFIG_CFLAGS"
 
-AC_SUBST(WMF_CONFIG_CFLAGS)
+AC_SUBST([WMF_CONFIG_CFLAGS])
 
 WMF_LIBFLAGS="$WMF_PLOT_LDFLAGS $WMF_GD_LDFLAGS $WMF_FT_LDFLAGS $WMF_X_LDFLAGS $WMF_XML_LDFLAGS"
 WMF_LIBFLAGS="$WMF_LIBFLAGS $WMF_JPEG_LDFLAGS $WMF_PNG_LDFLAGS $WMF_Z_LDFLAGS $SYS_LIBM"
 
-AC_SUBST(WMF_LIBFLAGS)
+AC_SUBST([WMF_LIBFLAGS])
 
-AC_SUBST(WMF_DOCDIR)
-AC_SUBST(WMF_FONTDIR)
-AC_SUBST(WMF_SYS_FONTMAP)
-AC_SUBST(WMF_XTRA_FONTMAP)
-AC_SUBST(WMF_GS_FONTMAP)
-AC_SUBST(WMF_GS_FONTDIR)
+AC_SUBST([WMF_DOCDIR])
+AC_SUBST([WMF_FONTDIR])
+AC_SUBST([WMF_SYS_FONTMAP])
+AC_SUBST([WMF_XTRA_FONTMAP])
+AC_SUBST([WMF_GS_FONTMAP])
+AC_SUBST([WMF_GS_FONTDIR])
 
-AC_SUBST(WMF_DEFS)
-AC_SUBST(GD_DEFS)
+AC_SUBST([WMF_DEFS])
+AC_SUBST([GD_DEFS])
 
 AH_BOTTOM([
 
