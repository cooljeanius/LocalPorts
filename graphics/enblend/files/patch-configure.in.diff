--- configure.in.orig	2012-08-01 18:12:30.000000000 +0200
+++ configure.in	2012-08-01 18:13:35.000000000 +0200
@@ -140,6 +140,8 @@
     no_gpu_reason=", because it was disabled"
 fi
 
+AX_PTHREAD
+
 # Memory allocation debug support
 AC_MSG_CHECKING([if malloc debugging is wanted])
 AC_ARG_WITH(dmalloc,
@@ -149,7 +151,7 @@
                 AC_MSG_RESULT(yes)
                 AC_DEFINE(WITH_DMALLOC, 1,
                     [Define if using the dmalloc debugging malloc package])
-                if test x$acx_pthread_ok = xyes; then
+                if test x$ax_pthread_ok = xyes; then
                     LIBS="$LIBS -ldmallocthcxx"
                     enable_dmalloc="yes (thread aware)"
                 else
@@ -214,14 +216,14 @@
              [AC_MSG_NOTICE([forcing use of Boost "filesystem" library])
               AC_DEFINE(HAVE_BOOST_FILESYSTEM, 1,
                         [Define if you have boost/filesystem.hpp])
-              EXTRA_LIBS="-lboost_filesystem ${EXTRA_LIBS}"],
+              EXTRA_LIBS="-lboost_filesystem -lboost_system ${EXTRA_LIBS}"],
              [AC_CHECK_HEADER(boost/filesystem.hpp,
                               [],
                               AC_MSG_NOTICE([Boost "filesystem" header is missing.]))
               if test x$ac_cv_header_boost_filesystem_hpp = xyes; then
                   found_boost_filesystem_lib=no
                   candidates="-lboost_filesystem"
-                  if test x$acx_pthread_ok = xyes; then
+                  if test x$ax_pthread_ok = xyes; then
                       candidates="-lboost_filesystem-mt $candidates"
                   fi
                   if test "x$with_boost_filesystem" != xCHECK \
@@ -231,20 +233,21 @@
                   fi
                   LIBS_ORIG=$LIBS
                   for x in $candidates; do
-                      LIBS="$LIBS_ORIG $x"
+                      y=`echo $x | sed s/boost_filesystem/boost_system/g`
+                      LIBS="$LIBS_ORIG $x $y"
                       AC_LINK_IFELSE([AC_LANG_PROGRAM([[
 #include <string>
 #include "boost/filesystem.hpp"
 ]],
 [[
-boost::filesystem::basic_path<std::string, boost::filesystem::path_traits> p("foo/bar/baz.oo");
+boost::filesystem::path p("foo/bar/baz.oo");
 p.branch_path().string();
 p.leaf();
 basename(p);
 extension(p);
 ]]
 )],
-                                     [EXTRA_LIBS="$x ${EXTRA_LIBS}"
+                                     [EXTRA_LIBS="$x $y ${EXTRA_LIBS}"
                                       found_boost_filesystem_lib=yes
                                       AC_MSG_NOTICE([compiling with Boost's generic filename parsing support.])
                                       break])
