***************
*** 1,53 ****
- # get rid of that stupid cache mechanism
- rm -f config.cache
  
- AC_INIT(imlib2, 1.4.5, enlightenment-devel@lists.sourceforge.net)
- AC_PREREQ(2.52)
- AC_CONFIG_SRCDIR(configure.ac)
- dnl#AC_CONFIG_MACRO_DIR([m4])
  AC_CANONICAL_BUILD
  AC_CANONICAL_HOST
  AC_ISC_POSIX
  
- AM_INIT_AUTOMAKE(1.6 dist-bzip2)
- AM_CONFIG_HEADER(config.h)
  m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])
  
  AC_C_BIGENDIAN
  AC_PROG_CC
  AM_PROG_AS
  
- dnl Set default visibility to hidden?
  AC_ARG_ENABLE([visibility-hiding],
    [AC_HELP_STRING([--enable-visibility-hiding], [enable visibility hiding @<:@default=no@:>@])],
    [enable_visibility_hiding=yes],
-   [enable_visibility_hiding=no]
- )
  
- AM_PROG_CC_STDC
  AC_HEADER_STDC
  AC_C_CONST
  
- dnl Next two lines is a hack to prevent libtool checking for CXX/F77
  define([AC_LIBTOOL_LANG_CXX_CONFIG], [:])dnl
  define([AC_LIBTOOL_LANG_F77_CONFIG], [:])dnl
  AC_PROG_LIBTOOL
  
  VERSION_CUR=5
  VERSION_REV=5
  VERSION_AGE=4
  lt_version=${VERSION_CUR}:${VERSION_REV}:${VERSION_AGE}
- AC_SUBST(lt_version)
  
- dnl See if the compiler supports -std=gnu99 since some math
- dnl functions need it (aka round())
- AC_MSG_CHECKING(whether $CC accepts -std=gnu99)
  cc_supports_gnu99="yes"
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -std=gnu99"
- AC_TRY_COMPILE(,,,[cc_supports_gnu99="no";CPPFLAGS="$save_CPPFLAGS"])
- AC_MSG_RESULT($cc_supports_gnu99)
  
  
  mmx=no
  amd64=no
--- 1,62 ----
+ #                                               -*- Autoconf -*-
+ # Process this file with autoconf to produce a configure script.
  
+ AC_INIT([imlib2], [1.4.5], [enlightenment-devel@lists.sourceforge.net])
+ AC_PREREQ([2.52])
+ AC_CONFIG_SRCDIR([configure.ac])
+ AC_CONFIG_MACRO_DIR([m4])
  AC_CANONICAL_BUILD
  AC_CANONICAL_HOST
  AC_ISC_POSIX
+ AC_EXEEXT
  
+ AM_INIT_AUTOMAKE([1.6 dist-bzip2 foreign])
+ AM_MAINTAINER_MODE
+ AC_CONFIG_HEADERS([config.h])
  m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])
  
  AC_C_BIGENDIAN
  AC_PROG_CC
+ AM_PROG_CC_C_O
  AM_PROG_AS
+ AM_PROG_AR
+ AC_PROG_CPP
+ AC_PATH_PROG([GMV],[gmv])
  
+ dnl# Set default visibility to hidden?
  AC_ARG_ENABLE([visibility-hiding],
    [AC_HELP_STRING([--enable-visibility-hiding], [enable visibility hiding @<:@default=no@:>@])],
    [enable_visibility_hiding=yes],
+   [enable_visibility_hiding=no])
  
  AC_HEADER_STDC
  AC_C_CONST
+ AX_C___ATTRIBUTE__
+ AC_LANG([C])
  
+ dnl# Next two lines is a hack to prevent libtool checking for CXX/F77
  define([AC_LIBTOOL_LANG_CXX_CONFIG], [:])dnl
  define([AC_LIBTOOL_LANG_F77_CONFIG], [:])dnl
  AC_PROG_LIBTOOL
+ LT_LANG([C])
  
  VERSION_CUR=5
  VERSION_REV=5
  VERSION_AGE=4
  lt_version=${VERSION_CUR}:${VERSION_REV}:${VERSION_AGE}
+ AC_SUBST([lt_version])
  
+ dnl# See if the compiler supports -std=gnu99 since some math
+ dnl# functions need it (aka round())
+ AC_MSG_CHECKING([whether $CC accepts -std=gnu99])
  cc_supports_gnu99="yes"
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -std=gnu99"
+ AC_TRY_COMPILE([],[],[],[cc_supports_gnu99="no";CPPFLAGS="$save_CPPFLAGS"])
+ AC_MSG_RESULT([$cc_supports_gnu99])
  
+ dnl# FIXME: Replace `main' with a function in `-lm':
+ AC_CHECK_LIB([m], [main])
  
  mmx=no
  amd64=no
***************
*** 73,115 ****
     else
       amd64=no
     fi
-   ]
- )
  
- AC_MSG_CHECKING(whether to enable x86 mmx support)
  if test x$mmx = xyes; then
-   AC_DEFINE(DO_MMX_ASM, 1, [enabling MMX Assembly])
  fi
- AC_MSG_RESULT($mmx)
- AM_CONDITIONAL(BUILD_MMX, test x$mmx = xyes)
  
- AC_MSG_CHECKING(whether to enable amd64 asm support)
  if test x$amd64 = xyes; then
-   AC_DEFINE(DO_AMD64_ASM, 1, [enabling AMD64 Assembly])
  fi
- AC_MSG_RESULT($amd64)
- AM_CONDITIONAL(BUILD_AMD64, test x$amd64 = xyes)
  
- # check for freetype
- AC_ARG_WITH(freetype-config,
    [AC_HELP_STRING([--with-freetype-config], [use freetype-config specified])],
    [ FREETYPE_CONFIG=$withval;
      echo "using "$FREETYPE_CONFIG" for freetype-config"; ],
    [ if test -z "$FREETYPE_CONFIG"; then
-       AC_PATH_PROG(FREETYPE_CONFIG, "freetype-config", "", $PATH)
      fi
-   ]
- )
  freetype_cflags=`$FREETYPE_CONFIG --cflags`
  freetype_libs=`$FREETYPE_CONFIG --libs`
  
  AC_PATH_X
  
  if test "x$have_x" = "xno"; then
     # If --without-x was passed, this will be "disabled" instead of "no" --
     # so always treat "no" as an error
-    AC_MSG_ERROR(
- [no X support found.  Use --x-includes and --x-libraries to specify the X
  path on your system, or --without-x to disable X support.])
  fi
  
--- 81,123 ----
     else
       amd64=no
     fi
+   ])
  
+ AC_MSG_CHECKING([whether to enable x86 mmx support])
  if test x$mmx = xyes; then
+   AC_DEFINE([DO_MMX_ASM], [1], [enabling MMX Assembly])
  fi
+ AC_MSG_RESULT([$mmx])
+ AM_CONDITIONAL([BUILD_MMX], [test x$mmx = xyes])
  
+ AC_MSG_CHECKING([whether to enable amd64 asm support])
  if test x$amd64 = xyes; then
+   AC_DEFINE([DO_AMD64_ASM], [1], [enabling AMD64 Assembly])
  fi
+ AC_MSG_RESULT([$amd64])
+ AM_CONDITIONAL([BUILD_AMD64], [test x$amd64 = xyes])
  
+ dnl# check for freetype
+ AC_ARG_WITH([freetype-config],
    [AC_HELP_STRING([--with-freetype-config], [use freetype-config specified])],
    [ FREETYPE_CONFIG=$withval;
      echo "using "$FREETYPE_CONFIG" for freetype-config"; ],
    [ if test -z "$FREETYPE_CONFIG"; then
+       AC_PATH_PROG([FREETYPE_CONFIG], ["freetype-config"], [""], [$PATH])
      fi
+   ])
+ 
  freetype_cflags=`$FREETYPE_CONFIG --cflags`
  freetype_libs=`$FREETYPE_CONFIG --libs`
  
  AC_PATH_X
+ dnl# FIXME: Replace `main' with a function in `-lX11':
+ AC_CHECK_LIB([X11], [main])
  
  if test "x$have_x" = "xno"; then
     # If --without-x was passed, this will be "disabled" instead of "no" --
     # so always treat "no" as an error
+    AC_MSG_ERROR([no X support found.  Use --x-includes and --x-libraries to specify the X
  path on your system, or --without-x to disable X support.])
  fi
  
***************
*** 117,141 ****
    AC_PATH_XTRA
    x_cflags=$X_CFLAGS
    x_libs=$X_LIBS" -lX11 -lXext"
-   AC_DEFINE(BUILD_X11, 1, [enabling X11 support])
  else
    x_cflags=""
    x_libs=""
    have_x="no"
  fi
- AM_CONDITIONAL(BUILD_X11, test "x$have_x" = "xyes")
  
  dlopen_libs=""
- AC_CHECK_LIB(dl, dlopen, dlopen_libs=-ldl)
  
  my_includes=$freetype_cflags" "$x_cflags" "
  my_libs=$freetype_libs" "$x_libs" "$dlopen_libs" -lm"
- AC_SUBST(my_includes)
- AC_SUBST(my_libs)
  
  
- 
- AC_MSG_CHECKING(whether to enable jpeg support)
  AC_ARG_WITH([jpeg],
    [AC_HELP_STRING([--without-jpeg], [Disable JPEG image loader])],
    [
--- 125,148 ----
    AC_PATH_XTRA
    x_cflags=$X_CFLAGS
    x_libs=$X_LIBS" -lX11 -lXext"
+   AC_DEFINE([BUILD_X11], [1], [enabling X11 support])
  else
    x_cflags=""
    x_libs=""
    have_x="no"
  fi
+ AM_CONDITIONAL([BUILD_X11], [test "x$have_x" = "xyes"])
  
  dlopen_libs=""
+ AC_CHECK_LIB([dl], [dlopen], [dlopen_libs=-ldl])
  
  my_includes=$freetype_cflags" "$x_cflags" "
  my_libs=$freetype_libs" "$x_libs" "$dlopen_libs" -lm"
+ AC_SUBST([my_includes])
+ AC_SUBST([my_libs])
  
  
+ AC_MSG_CHECKING([whether to enable jpeg support])
  AC_ARG_WITH([jpeg],
    [AC_HELP_STRING([--without-jpeg], [Disable JPEG image loader])],
    [
***************
*** 145,159 ****
       jpeg_loader=yes
     fi
    ],
-   [ jpeg_loader=auto ]
- )
- AC_MSG_RESULT($jpeg_loader)
  
  if test "$jpeg_loader" != no ; then
-   AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,
-     jpeg_ok=yes,
-     jpeg_ok=no,
-     )
    if test "$jpeg_ok" = yes; then
      AC_MSG_CHECKING([for jpeglib.h])
      AC_TRY_CPP(
--- 152,166 ----
       jpeg_loader=yes
     fi
    ],
+   [ jpeg_loader=auto ])
+ 
+ AC_MSG_RESULT([$jpeg_loader])
  
  if test "$jpeg_loader" != no ; then
+   AC_CHECK_LIB([jpeg], [jpeg_destroy_decompress],
+     [jpeg_ok=yes],
+     [jpeg_ok=no],
+     [])
    if test "$jpeg_ok" = yes; then
      AC_MSG_CHECKING([for jpeglib.h])
      AC_TRY_CPP(
***************
*** 161,189 ****
       #undef PACKAGE
       #undef VERSION
       #include <jpeglib.h>],
-     jpeg_ok=yes,
-     jpeg_ok=no)
-     AC_MSG_RESULT($jpeg_ok)
      if test "$jpeg_ok" = yes; then
        JPEGLIBS="-ljpeg"
      fi
    fi
    if test "$jpeg_ok" = no ; then
      if test "$jpeg_loader" = yes ; then
-       AC_MSG_ERROR(JPEG support was requested but system does not support it)
      else
-       AC_MSG_WARN(*** Native JPEG support will not be built (JPEG not found) ***)
      fi
    fi
  else
    jpeg_ok=no
  fi
- AM_CONDITIONAL(BUILD_JPEG_LOADER, test "$jpeg_ok" = yes)
- AC_SUBST(JPEGLIBS)
- 
  
  
- AC_MSG_CHECKING(whether to enable png support)
  AC_ARG_WITH([png],
    [AC_HELP_STRING([--without-png], [Disable PNG image loader])],
    [
--- 168,196 ----
       #undef PACKAGE
       #undef VERSION
       #include <jpeglib.h>],
+     [jpeg_ok=yes],
+     [jpeg_ok=no])
+     AC_MSG_RESULT([$jpeg_ok])
      if test "$jpeg_ok" = yes; then
        JPEGLIBS="-ljpeg"
      fi
    fi
    if test "$jpeg_ok" = no ; then
      if test "$jpeg_loader" = yes ; then
+       AC_MSG_ERROR([JPEG support was requested but system does not support it])
      else
+       AC_MSG_WARN([*** Native JPEG support will not be built (JPEG not found) ***])
      fi
    fi
  else
    jpeg_ok=no
  fi
+ AM_CONDITIONAL([BUILD_JPEG_LOADER], [test "$jpeg_ok" = yes])
+ AC_SUBST([JPEGLIBS])
  
+ PKG_PROG_PKG_CONFIG
  
+ AC_MSG_CHECKING([whether to enable png support])
  AC_ARG_WITH([png],
    [AC_HELP_STRING([--without-png], [Disable PNG image loader])],
    [
***************
*** 195,216 ****
    ],
    [ png_loader=auto ]
  )
- AC_MSG_RESULT($png_loader)
  
  if test "$png_loader" != no ; then
-   PKG_CHECK_MODULES(PNG, libpng, [ png_ok="yes" ], [
-     PKG_CHECK_MODULES(PNG, libpng12, [ png_ok="yes" ], [
-       PKG_CHECK_MODULES(PNG, libpng10, [ png_ok="yes" ], [ png_ok="no"])
      ])
    ])
  else
    png_ok="no"
  fi
- AM_CONDITIONAL(BUILD_PNG_LOADER, test "$png_ok" = yes)
  
  
- 
- AC_MSG_CHECKING(whether to enable tiff support)
  AC_ARG_WITH([tiff],
    [AC_HELP_STRING([--without-tiff], [Disable TIFF image loader])],
    [
--- 202,222 ----
    ],
    [ png_loader=auto ]
  )
+ AC_MSG_RESULT([$png_loader])
  
  if test "$png_loader" != no ; then
+   PKG_CHECK_MODULES([PNG], [libpng], [ png_ok="yes" ], [
+     PKG_CHECK_MODULES([PNG], [libpng12], [ png_ok="yes" ], [
+       PKG_CHECK_MODULES([PNG], [libpng10], [ png_ok="yes" ], [ png_ok="no"])
      ])
    ])
  else
    png_ok="no"
  fi
+ AM_CONDITIONAL([BUILD_PNG_LOADER], [test "$png_ok" = yes])
  
  
+ AC_MSG_CHECKING([whether to enable tiff support])
  AC_ARG_WITH([tiff],
    [AC_HELP_STRING([--without-tiff], [Disable TIFF image loader])],
    [
***************
*** 212,240 ****
       #undef PACKAGE
       #undef VERSION
       #include <tiffio.h>],
-     tiff_ok=yes,
-     tiff_ok=no)
-     AC_MSG_RESULT($tiff_ok)
      if test "$tiff_ok" = yes; then
        TIFFLIBS=$tiff_libs
      fi
    fi
    if test "$tiff_ok" = no ; then
      if test "$tiff_loader" = yes ; then
-       AC_MSG_ERROR(TIFF support was requested but system does not support it)
      else
-       AC_MSG_WARN(*** Native TIFF support will not be built (TIFF not found) ***)
      fi
    fi
  else
    tiff_ok=no
  fi
- AM_CONDITIONAL(BUILD_TIFF_LOADER, test "$tiff_ok" = yes)
- AC_SUBST(TIFFLIBS)
  
  
- 
- AC_MSG_CHECKING(whether to enable gif support)
  gif_lib=any
  AC_ARG_WITH([gif],
    [AC_HELP_STRING([--without-gif], [Disable GIF image loader])],
--- 218,245 ----
       #undef PACKAGE
       #undef VERSION
       #include <tiffio.h>],
+     [tiff_ok=yes],
+     [tiff_ok=no])
+     AC_MSG_RESULT([$tiff_ok])
      if test "$tiff_ok" = yes; then
        TIFFLIBS=$tiff_libs
      fi
    fi
    if test "$tiff_ok" = no ; then
      if test "$tiff_loader" = yes ; then
+       AC_MSG_ERROR([TIFF support was requested but system does not support it])
      else
+       AC_MSG_WARN([*** Native TIFF support will not be built (TIFF not found) ***])
      fi
    fi
  else
    tiff_ok=no
  fi
+ AM_CONDITIONAL([BUILD_TIFF_LOADER], [test "$tiff_ok" = yes])
+ AC_SUBST([TIFFLIBS])
  
  
+ AC_MSG_CHECKING([whether to enable gif support])
  gif_lib=any
  AC_ARG_WITH([gif],
    [AC_HELP_STRING([--without-gif], [Disable GIF image loader])],
***************
*** 249,268 ****
       esac
     fi
    ],
-   [ gif_loader=auto ]
- )
- AC_MSG_RESULT($gif_loader)
  
  if test "$gif_loader" != no ; then
-   AC_MSG_CHECKING(for preferred gif provider)
-   AC_MSG_RESULT($gif_lib)
  
    if test "$gif_lib" != libungif ; then
-     AC_CHECK_LIB(gif, DGifOpenFileName,
-       gif_libs="-lgif"
-       gif_ok=yes,
-       gif_ok=no,
-       )
      if test "$gif_ok" = yes; then
        AC_MSG_CHECKING([for gif_lib.h])
        AC_TRY_CPP(
--- 254,273 ----
       esac
     fi
    ],
+   [ gif_loader=auto ])
+ 
+ AC_MSG_RESULT([$gif_loader])
  
  if test "$gif_loader" != no ; then
+   AC_MSG_CHECKING([for preferred gif provider])
+   AC_MSG_RESULT([$gif_lib])
  
    if test "$gif_lib" != libungif ; then
+     AC_CHECK_LIB([gif], [DGifOpenFileName],
+       [gif_libs="-lgif"
+       gif_ok=yes],
+       [gif_ok=no],
+       [])
      if test "$gif_ok" = yes; then
        AC_MSG_CHECKING([for gif_lib.h])
        AC_TRY_CPP(
***************
*** 270,278 ****
         #undef PACKAGE
         #undef VERSION
         #include <gif_lib.h>],
-       gif_ok=yes,
-       gif_ok=no)
-       AC_MSG_RESULT($gif_ok)
        if test "$gif_ok" = yes; then
          GIFLIBS=$gif_libs
          gif_lib=giflib
--- 275,283 ----
         #undef PACKAGE
         #undef VERSION
         #include <gif_lib.h>],
+       [gif_ok=yes],
+       [gif_ok=no])
+       AC_MSG_RESULT([$gif_ok])
        if test "$gif_ok" = yes; then
          GIFLIBS=$gif_libs
          gif_lib=giflib
***************
*** 281,291 ****
    fi
  
    if test "$gif_lib" != giflib ; then
-     AC_CHECK_LIB(ungif, DGifOpenFileName,
-       gif_libs="-lungif"
-       gif_ok=yes,
-       gif_ok=no,
-       )
      if test "$gif_ok" = yes; then
        AC_MSG_CHECKING([for gif_lib.h])
        AC_TRY_CPP(
--- 286,296 ----
    fi
  
    if test "$gif_lib" != giflib ; then
+     AC_CHECK_LIB([ungif], [DGifOpenFileName],
+       [gif_libs="-lungif"
+       gif_ok=yes],
+       [gif_ok=no],
+       [])
      if test "$gif_ok" = yes; then
        AC_MSG_CHECKING([for gif_lib.h])
        AC_TRY_CPP(
***************
*** 293,301 ****
         #undef PACKAGE
         #undef VERSION
         #include <gif_lib.h>],
-       gif_ok=yes,
-       gif_ok=no)
-       AC_MSG_RESULT($gif_ok)
        if test "$gif_ok" = yes; then
          GIFLIBS=$gif_libs
          gif_lib=libungif
--- 298,306 ----
         #undef PACKAGE
         #undef VERSION
         #include <gif_lib.h>],
+       [gif_ok=yes],
+       [gif_ok=no])
+       AC_MSG_RESULT([$gif_ok])
        if test "$gif_ok" = yes; then
          GIFLIBS=$gif_libs
          gif_lib=libungif
***************
*** 305,324 ****
  
    if test "$gif_ok" = no ; then
      if test "$gif_loader" = yes ; then
-       AC_MSG_ERROR(GIF support was requested but system does not support it)
      else
-       AC_MSG_WARN(*** Native GIF support will not be built (GIF not found) ***)
      fi
    fi
  else
    gif_ok=no
  fi
- AM_CONDITIONAL(BUILD_GIF_LOADER, test "$gif_ok" = yes)
- AC_SUBST(GIFLIBS)
- 
  
- 
- AC_MSG_CHECKING(whether to enable zlib support)
  AC_ARG_WITH([zlib],
    [AC_HELP_STRING([--without-zlib], [Disable ZLIB loader])],
    [
--- 310,327 ----
  
    if test "$gif_ok" = no ; then
      if test "$gif_loader" = yes ; then
+       AC_MSG_ERROR([GIF support was requested but system does not support it])
      else
+       AC_MSG_WARN([*** Native GIF support will not be built (GIF not found) ***])
      fi
    fi
  else
    gif_ok=no
  fi
+ AM_CONDITIONAL([BUILD_GIF_LOADER], [test "$gif_ok" = yes])
+ AC_SUBST([GIFLIBS])
  
+ AC_MSG_CHECKING([whether to enable zlib support])
  AC_ARG_WITH([zlib],
    [AC_HELP_STRING([--without-zlib], [Disable ZLIB loader])],
    [
***************
*** 328,342 ****
       zlib_loader=yes
     fi
    ],
-   [ zlib_loader=auto ]
- )
- AC_MSG_RESULT($zlib_loader)
  
  if test "$zlib_loader" != no ; then
-   AC_CHECK_LIB(z, uncompress,
-     zlib_ok=yes,
-     zlib_ok=no,
-     )
    if test "$zlib_ok" = yes; then
      AC_MSG_CHECKING([for zlib.h])
      AC_TRY_CPP(
--- 331,345 ----
       zlib_loader=yes
     fi
    ],
+   [ zlib_loader=auto ])
+ 
+ AC_MSG_RESULT([$zlib_loader])
  
  if test "$zlib_loader" != no ; then
+   AC_CHECK_LIB([z], [uncompress],
+     [zlib_ok=yes],
+     [zlib_ok=no],
+     [])
    if test "$zlib_ok" = yes; then
      AC_MSG_CHECKING([for zlib.h])
      AC_TRY_CPP(
***************
*** 344,372 ****
       #undef PACKAGE
       #undef VERSION
       #include <zlib.h>],
-     zlib_ok=yes,
-     zlib_ok=no)
-     AC_MSG_RESULT($zlib_ok)
      if test "$zlib_ok" = yes; then
        ZLIBLIBS="-lz"
      fi
    fi
    if test "$zlib_ok" = no ; then
      if test "$zlib_loader" = yes ; then
-       AC_MSG_ERROR(ZLIB support was requested but system does not support it)
      else
-       AC_MSG_WARN(*** Native zlib support will not be built (zlib not found) ***)
      fi
    fi
  else
    zlib_ok=no
  fi
- AM_CONDITIONAL(BUILD_ZLIB_LOADER, test "$zlib_ok" = yes)
- AC_SUBST(ZLIBLIBS)
- 
  
  
- AC_MSG_CHECKING(whether to enable bzip2 support)
  AC_ARG_WITH([bzip2],
    [AC_HELP_STRING([--without-bzip2], [Disable BZIP2 loader])],
    [
--- 347,374 ----
       #undef PACKAGE
       #undef VERSION
       #include <zlib.h>],
+     [zlib_ok=yes],
+     [zlib_ok=no])
+     AC_MSG_RESULT([$zlib_ok])
      if test "$zlib_ok" = yes; then
        ZLIBLIBS="-lz"
      fi
    fi
    if test "$zlib_ok" = no ; then
      if test "$zlib_loader" = yes ; then
+       AC_MSG_ERROR([ZLIB support was requested but system does not support it])
      else
+       AC_MSG_WARN([*** Native zlib support will not be built (zlib not found) ***])
      fi
    fi
  else
    zlib_ok=no
  fi
+ AM_CONDITIONAL([BUILD_ZLIB_LOADER], [test "$zlib_ok" = yes])
+ AC_SUBST([ZLIBLIBS])
  
  
+ AC_MSG_CHECKING([whether to enable bzip2 support])
  AC_ARG_WITH([bzip2],
    [AC_HELP_STRING([--without-bzip2], [Disable BZIP2 loader])],
    [
***************
*** 376,390 ****
       bz2_loader=yes
     fi
    ],
-   [ bz2_loader=auto ]
- )
- AC_MSG_RESULT($bz2_loader)
  
  if test "$bz2_loader" != no ; then
-   AC_CHECK_LIB(bz2, BZ2_bzRead,
-     bz2_ok=yes,
-     bz2_ok=no,
-     )
    if test "$bz2_ok" = yes; then
      AC_MSG_CHECKING([for bzlib.h])
      AC_TRY_CPP(
--- 378,392 ----
       bz2_loader=yes
     fi
    ],
+   [ bz2_loader=auto ])
+ 
+ AC_MSG_RESULT([$bz2_loader])
  
  if test "$bz2_loader" != no ; then
+   AC_CHECK_LIB([bz2], [BZ2_bzRead],
+     [bz2_ok=yes],
+     [bz2_ok=no],
+     [])
    if test "$bz2_ok" = yes; then
      AC_MSG_CHECKING([for bzlib.h])
      AC_TRY_CPP(
***************
*** 392,420 ****
       #undef PACKAGE
       #undef VERSION
       #include <bzlib.h>],
-     bz2_ok=yes,
-     bz2_ok=no)
-     AC_MSG_RESULT($bz2_ok)
      if test "$bz2_ok" = yes; then
        BZ2LIBS="-lbz2"
      fi
    fi
    if test "$bz2_ok" = no ; then
      if test "$bz2_loader" = yes ; then
-       AC_MSG_ERROR(BZIP2 support was requested but system does not support it)
      else
-       AC_MSG_WARN(*** Native bz2 support will not be built (bzip2 not found) ***)
      fi
    fi
  else
    bz2_ok=no
  fi
- AM_CONDITIONAL(BUILD_BZ2_LOADER, test "$bz2_ok" = yes)
- AC_SUBST(BZ2LIBS)
  
  
- 
- AC_MSG_CHECKING(whether to enable id3 support)
  AC_ARG_WITH([id3],
    [AC_HELP_STRING([--without-id3], [Disable ID3 loader])],
    [
--- 394,421 ----
       #undef PACKAGE
       #undef VERSION
       #include <bzlib.h>],
+     [bz2_ok=yes],
+     [bz2_ok=no])
+     AC_MSG_RESULT([$bz2_ok])
      if test "$bz2_ok" = yes; then
        BZ2LIBS="-lbz2"
      fi
    fi
    if test "$bz2_ok" = no ; then
      if test "$bz2_loader" = yes ; then
+       AC_MSG_ERROR([BZIP2 support was requested but system does not support it])
      else
+       AC_MSG_WARN([*** Native bz2 support will not be built (bzip2 not found) ***])
      fi
    fi
  else
    bz2_ok=no
  fi
+ AM_CONDITIONAL([BUILD_BZ2_LOADER], [test "$bz2_ok" = yes])
+ AC_SUBST([BZ2LIBS])
  
  
+ AC_MSG_CHECKING([whether to enable id3 support])
  AC_ARG_WITH([id3],
    [AC_HELP_STRING([--without-id3], [Disable ID3 loader])],
    [
***************
*** 383,413 ****
       #undef PACKAGE
       #undef VERSION
       #include <id3tag.h>],
-     id3_ok=yes,
-     id3_ok=no)
-     AC_MSG_RESULT($id3_ok)
      if test "$id3_ok" = yes; then
        ID3LIBS=$id3_libs
      fi
    fi
    if test "$id3_ok" = no ; then
      if test "$id3_loader" = yes ; then
-       AC_MSG_ERROR(ID3 support was requested but system does not support it)
      else
-       AC_MSG_WARN(*** Native mp3 support will not be built (id3tag not found) ***)
      fi
    fi
  else
    id3_ok=no
  fi
- AM_CONDITIONAL(BUILD_ID3_LOADER, test "$id3_ok" = yes)
- AC_SUBST(ID3LIBS)
  
  if test "x$enable_visibility_hiding" = xyes ; then
    CPPFLAGS="$CPPFLAGS -fvisibility=hidden"
  fi
  
- AC_OUTPUT([
  Makefile
  imlib2.pc
  src/Makefile
--- 384,429 ----
       #undef PACKAGE
       #undef VERSION
       #include <id3tag.h>],
+     [id3_ok=yes],
+     [id3_ok=no])
+     AC_MSG_RESULT([$id3_ok])
      if test "$id3_ok" = yes; then
        ID3LIBS=$id3_libs
      fi
    fi
    if test "$id3_ok" = no ; then
      if test "$id3_loader" = yes ; then
+       AC_MSG_ERROR([ID3 support was requested but system does not support it])
      else
+       AC_MSG_WARN([*** Native mp3 support will not be built (id3tag not found) ***])
      fi
    fi
  else
    id3_ok=no
  fi
+ AM_CONDITIONAL([BUILD_ID3_LOADER], [test "$id3_ok" = yes])
+ AC_SUBST([ID3LIBS])
  
  if test "x$enable_visibility_hiding" = xyes ; then
    CPPFLAGS="$CPPFLAGS -fvisibility=hidden"
  fi
  
+ dnl# Checks for header files.
+ AC_CHECK_HEADERS([fcntl.h image.h limits.h locale.h stdio.h sys/time.h])
+ 
+ dnl# Checks for typedefs, structures, and compiler characteristics.
+ AC_C_INLINE
+ AC_TYPE_SIZE_T
+ AC_TYPE_SSIZE_T
+ 
+ dnl# Checks for library functions.
+ AC_FUNC_MALLOC
+ AC_FUNC_MMAP
+ AC_FUNC_REALLOC
+ AC_FUNC_STRTOD
+ AC_CHECK_FUNCS([floor gettimeofday mblen memmove memset munmap pow select setlocale sqrt strcasecmp strchr strdup strerror strncasecmp strrchr strstr strtol strtoul])
+ 
+ AC_CONFIG_FILES([
  Makefile
  imlib2.pc
  src/Makefile
***************
*** 423,445 ****
  imlib2-config
  README
  imlib2.spec
- ],[
- chmod +x imlib2-config
  ])
  
  #####################################################################
  ## Info
  
- echo
- echo
- echo
  echo "------------------------------------------------------------------------"
  echo "$PACKAGE $VERSION"
  echo "------------------------------------------------------------------------"
- echo
  echo "Configuration Options Summary:"
- echo
- echo
  echo "Image Loaders:"
  echo "  JPEG....................: $jpeg_ok"
  echo "  PNG.....................: $png_ok"
--- 439,460 ----
  imlib2-config
  README
  imlib2.spec
  ])
+ AC_OUTPUT
  
  #####################################################################
  ## Info
  
+ echo ""
+ echo ""
+ echo ""
  echo "------------------------------------------------------------------------"
  echo "$PACKAGE $VERSION"
  echo "------------------------------------------------------------------------"
+ echo ""
  echo "Configuration Options Summary:"
+ echo ""
+ echo ""
  echo "Image Loaders:"
  echo "  JPEG....................: $jpeg_ok"
  echo "  PNG.....................: $png_ok"
