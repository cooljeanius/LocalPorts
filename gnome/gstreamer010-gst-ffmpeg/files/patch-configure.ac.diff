--- configure.ac.orig	2013-09-28 10:09:50.000000000 -0400
+++ configure.ac	2013-09-28 11:00:40.000000000 -0400
@@ -1,192 +1,221 @@
-AC_PREREQ(2.60)
+dnl#                                               -*- Autoconf -*-
+dnl# Process this file with autoconf to produce a configure script.
 
-dnl initialize autoconf
-dnl when going to/from release please set the nano (fourth number) right !
-dnl releases only do Wall, cvs and prerelease does Werror too
-AC_INIT(GStreamer Libav, 0.10.13,
-    http://bugzilla.gnome.org/enter_bug.cgi?product=GStreamer,
-    gst-ffmpeg)
+AC_PREREQ([2.60])
+
+dnl# initialize autoconf
+dnl# when going to/from release please set the nano (fourth number) right !
+dnl# releases only do Wall, cvs and prerelease does Werror too
+AC_INIT([GStreamer Libav],[0.10.13],[http://bugzilla.gnome.org/enter_bug.cgi?product=GStreamer],[gst-ffmpeg])
+
+dnl# sets host_* variables
+AC_CANONICAL_TARGET dnl# calls AC_CANONICAL_HOST
 
 AG_GST_INIT
 
-dnl initialize automake
-AM_INIT_AUTOMAKE([-Wno-portability 1.10])
+dnl# initialize automake
+AM_INIT_AUTOMAKE([subdir-objects -Wno-portability 1.10])
 
-dnl define PACKAGE_VERSION_* variables
+dnl# define PACKAGE_VERSION_* variables
 AS_VERSION
 
-dnl check if this is a release version
-AS_NANO(GST_GIT="no", GST_GIT="yes")
+dnl# check if this is a release version
+AS_NANO([GST_GIT="no"],[GST_GIT="yes"])
 
-dnl can autoconf find the source ?
+dnl# can autoconf find the source ?
 AC_CONFIG_SRCDIR([ext/ffmpeg/gstffmpeg.c])
 
-dnl define the output header for config
-AM_CONFIG_HEADER([config.h])
+dnl# define where macros go
+AC_CONFIG_MACRO_DIR([m4])
 
-dnl AM_MAINTAINER_MODE only provides the option to configure to enable it
-AM_MAINTAINER_MODE
+dnl# define the output header for config
+AC_CONFIG_HEADERS([config.h])
 
-dnl sets host_* variables
-AC_CANONICAL_HOST
+dnl# AM_MAINTAINER_MODE only provides the option to configure to enable it
+AM_MAINTAINER_MODE
 
-dnl use pretty build output with automake >= 1.11
+dnl# use pretty build output with automake >= 1.11
 m4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])],
   [AM_DEFAULT_VERBOSITY=1
    AC_SUBST(AM_DEFAULT_VERBOSITY)])
 
-dnl our libraries and install dirs use major.minor as a version
+dnl# our libraries and install dirs use major.minor as a version
 GST_MAJORMINOR=$PACKAGE_VERSION_MAJOR.$PACKAGE_VERSION_MINOR
-dnl we override it here if we need to for the release candidate of new series
+dnl# we override it here if we need to for the release candidate of new series
 GST_MAJORMINOR=0.10
-AC_SUBST(GST_MAJORMINOR)
+AC_SUBST([GST_MAJORMINOR])
 
 AG_GST_LIBTOOL_PREPARE
 
-AC_LIBTOOL_WIN32_DLL
-AM_PROG_LIBTOOL
+LT_INIT([dlopen win32-dll])
+LT_LANG([C])
 
-dnl *** required versions of GStreamer stuff ***
+dnl# *** required versions of GStreamer stuff ***
 GST_REQ=0.10.31
 ORC_REQ=0.4.6
 
-dnl *** autotools stuff ****
+dnl# *** autotools stuff ****
 
-dnl allow for different autotools
+dnl# allow for different autotools
 AS_AUTOTOOLS_ALTERNATE
 
-dnl Add parameters for aclocal
-AC_SUBST(ACLOCAL_AMFLAGS, "-I m4 -I common/m4")
+dnl# Add parameters for aclocal
+AC_SUBST([ACLOCAL_AMFLAGS],["-I m4 -I common/m4 --install"])
 
-dnl *** check for arguments to configure ***
+dnl# *** check for arguments to configure ***
 
 AG_GST_ARG_WITH_PKG_CONFIG_PATH
 AG_GST_ARG_WITH_PACKAGE_NAME
 AG_GST_ARG_WITH_PACKAGE_ORIGIN
 AG_GST_ARG_VALGRIND
 
-dnl *** checks for platform ***
+dnl# *** checks for platform ***
 
-dnl * hardware/architecture *
+dnl# * hardware/architecture *
 
-dnl common/m4/gst-arch.m4
-dnl check CPU type
+dnl# common/m4/gst-arch.m4
+dnl# check CPU type
 AG_GST_ARCH
 
-dnl *** checks for programs ***
+dnl# *** checks for programs ***
 
-dnl find a compiler
-AC_PROG_CC
-AC_PROG_CC_STDC
+dnl# find a C compiler
+if test "x$CC" = "x"; then
+    test -z "$CC"
+    AC_PROG_CC
+else
+    test ! -z "$CC"
+    AC_PROG_GCC_TRADITIONAL
+fi
+if test "x$CC_STDC" = "x"; then
+    test -z "$CC_STDC"
+    AC_PROG_CC_STDC
+else
+    test ! -z "$CC_STDC" && export CC_STDC
+fi
 
-dnl check if the compiler supports '-c' and '-o' options
+dnl# check if the compiler supports '-c' and '-o' options
 AM_PROG_CC_C_O
 
-AC_PATH_PROG(VALGRIND_PATH, valgrind, no)
-AM_CONDITIONAL(HAVE_VALGRIND, test ! "x$VALGRIND_PATH" = "xno")
+AC_PATH_PROG([VALGRIND_PATH],[valgrind],[no])
+AM_CONDITIONAL([HAVE_VALGRIND],[test ! "x$VALGRIND_PATH" = "xno"])
 
-dnl check for documentation tools
+dnl# check for documentation tools
 AG_GST_DOCBOOK_CHECK
 GTK_DOC_CHECK([1.3])
 AS_PATH_PYTHON([2.1])
 AG_GST_PLUGIN_DOCS([1.3],[2.1])
 
-dnl *** checks for libraries ***
-
-dnl check for libm, for sin()
-AC_CHECK_LIBM
-AC_SUBST(LIBM)
-
-dnl *** checks for header files ***
-
-dnl check if we have ANSI C header files
-AC_HEADER_STDC
-
-dnl *** checks for types/defines ***
-
-dnl *** checks for structures ***
-
-dnl *** checks for compiler characteristics ***
-
-dnl *** checks for library functions ***
-
-dnl *** checks for dependancy libraries ***
+dnl# *** checks for libraries ***
 
-dnl checks for gstreamer
-dnl uninstalled is selected preferentially -- see pkg-config(1)
-AG_GST_CHECK_GST($GST_MAJORMINOR, [$GST_REQ])
-AG_GST_CHECK_GST_BASE($GST_MAJORMINOR, [$GST_REQ])
-AG_GST_CHECK_GST_PLUGINS_BASE($GST_MAJORMINOR, [$GST_REQ])
-AG_GST_CHECK_GST_CHECK($GST_MAJORMINOR, [$GST_REQ], no)
-AM_CONDITIONAL(HAVE_GST_CHECK, test "x$HAVE_GST_CHECK" = "xyes")
+dnl# check for libm, for sin()
+AC_CHECK_LIB([m],[sin])
+LT_LIB_M
+AC_SUBST([LIBM])
+
+dnl# *** checks for header files ***
+
+dnl# check if we have ANSI C header files
+dnl# AC_HEADER_STDC should have been called previously; check specific
+dnl# headers instead
+AC_CHECK_HEADERS([stdio.h])
+
+dnl# *** checks for types/defines ***
+AC_TYPE_INT8_T
+AC_TYPE_INT16_T
+AC_TYPE_INT64_T
+AC_TYPE_UINT8_T
+AC_TYPE_SIZE_T
+
+dnl# *** checks for structures ***
+
+dnl# *** checks for compiler characteristics ***
+AC_C_INLINE
+AC_C_PROTOTYPES
+
+dnl# *** checks for library functions ***
+AC_CHECK_FUNCS([memset])
+
+dnl# *** checks for other dependency libraries ***
+AC_CHECK_LIB([bz2],[BZ2_bzRead])
+AC_CHECK_LIB([z],[gzopen])
+
+dnl# checks for gstreamer
+dnl# uninstalled is selected preferentially -- see pkg-config(1)
+AG_GST_CHECK_GST([$GST_MAJORMINOR],[$GST_REQ])
+AG_GST_CHECK_GST_BASE([$GST_MAJORMINOR],[$GST_REQ])
+AG_GST_CHECK_GST_PLUGINS_BASE([$GST_MAJORMINOR],[$GST_REQ])
+AG_GST_CHECK_GST_CHECK([$GST_MAJORMINOR],[$GST_REQ],[no])
+AM_CONDITIONAL([HAVE_GST_CHECK],[test "x$HAVE_GST_CHECK" = "xyes"])
 
-AC_MSG_NOTICE(Using GStreamer Core Plugins in $GST_PLUGINS_DIR)
-AC_MSG_NOTICE(Using GStreamer Base Plugins in $GSTPB_PLUGINS_DIR)
+AC_MSG_NOTICE([Using GStreamer Core Plugins in $GST_PLUGINS_DIR])
+AC_MSG_NOTICE([Using GStreamer Base Plugins in $GSTPB_PLUGINS_DIR])
 
-dnl orc is required for cpu detection for libpostproc
+dnl# orc is required for cpu detection for libpostproc
 ORC_CHECK([$ORC_REQ])
 
-dnl *** set variables based on configure arguments ***
+dnl# *** set variables based on configure arguments ***
 
-dnl set location of plugin directory
+dnl# set location of plugin directory
 AG_GST_SET_PLUGINDIR
 
-dnl define an ERROR_CFLAGS Makefile variable
-AG_GST_SET_ERROR_CFLAGS($GST_GIT, [
+dnl# define an ERROR_CFLAGS Makefile variable
+AG_GST_SET_ERROR_CFLAGS([$GST_GIT],[
     -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls -Wundef
     -Wwrite-strings -Wformat-nonliteral -Wformat-security -Wold-style-definition
     -Winit-self -Wmissing-include-dirs -Waddress
     -Waggregate-return -Wno-multichar -Wnested-externs ])
 
-dnl define correct level for debugging messages
+dnl# define correct level for debugging messages
 AG_GST_SET_LEVEL_DEFAULT($GST_GIT)
 
-dnl *** finalize CFLAGS, LDFLAGS, LIBS ***
+dnl# *** finalize CFLAGS, LDFLAGS, LIBS ***
 
-dnl Overview:
-dnl GST_OPTION_CFLAGS:  common flags for profiling, debugging, errors, ...
-dnl GST_*:              flags shared by built objects to link against GStreamer
-dnl GST_ALL_LDFLAGS:    linker flags shared by all
-dnl GST_LIB_LDFLAGS:    additional linker flags for all libaries
-dnl GST_LT_LDFLAGS:     library versioning of our libraries
-dnl GST_PLUGIN_LDFLAGS: flags to be used for all plugins
+dnl# Overview:
+dnl# GST_OPTION_CFLAGS:  common flags for profiling, debugging, errors, ...
+dnl# GST_*:              flags shared by built objects to link against GStreamer
+dnl# GST_ALL_LDFLAGS:    linker flags shared by all
+dnl# GST_LIB_LDFLAGS:    additional linker flags for all libaries
+dnl# GST_LT_LDFLAGS:     library versioning of our libraries
+dnl# GST_PLUGIN_LDFLAGS: flags to be used for all plugins
 
-dnl GST_OPTION_CFLAGS
+dnl# GST_OPTION_CFLAGS
 if test "x$USE_DEBUG" = xyes; then
    PROFILE_CFLAGS="-g"
 fi
-AC_SUBST(PROFILE_CFLAGS)
+AC_SUBST([PROFILE_CFLAGS])
 
 if test "x$GST_GIT" = "xyes"; then
   DEPRECATED_CFLAGS="-DGST_DISABLE_DEPRECATED"
 else
   DEPRECATED_CFLAGS=""
 fi
-AC_SUBST(DEPRECATED_CFLAGS)
+AC_SUBST([DEPRECATED_CFLAGS])
 
-dnl every flag in GST_OPTION_CFLAGS can be overridden at make time
+dnl# every flag in GST_OPTION_CFLAGS can be overridden at make time
 GST_OPTION_CFLAGS="\$(WARNING_CFLAGS) \$(ERROR_CFLAGS) \$(DEBUG_CFLAGS) \$(PROFILE_CFLAGS) \$(GCOV_CFLAGS) \$(OPT_CFLAGS) \$(DEPRECATED_CFLAGS)"
 
 AC_SUBST(GST_OPTION_CFLAGS)
 
-dnl FIXME: do we want to rename to GST_ALL_* ?
-dnl prefer internal headers to already installed ones
-dnl also add builddir include for enumtypes and marshal
-dnl add GST_OPTION_CFLAGS, but overridable
+dnl# FIXME: do we want to rename to GST_ALL_* ?
+dnl# prefer internal headers to already installed ones
+dnl# also add builddir include for enumtypes and marshal
+dnl# add GST_OPTION_CFLAGS, but overridable
 GST_CFLAGS="-I\$(top_srcdir)/gst-libs -I\$(top_builddir)/gst-libs $GST_CFLAGS $GLIB_EXTRA_CFLAGS \$(GST_OPTION_CFLAGS)"
-AC_SUBST(GST_CFLAGS)
-AC_SUBST(GST_LIBS)
+AC_SUBST([GST_CFLAGS])
+AC_SUBST([GST_LIBS])
 
 GST_ALL_LDFLAGS="-no-undefined"
 AC_SUBST(GST_ALL_LDFLAGS)
 
-dnl this really should only contain flags, not libs - they get added before
-dnl whatevertarget_LIBS and -L flags here affect the rest of the linking
+dnl# this really should only contain flags, not libs - they get added
+dnl# before whatevertarget_LIBS and -L flags here affect the rest of the
+dnl# linking
 GST_PLUGIN_LDFLAGS="-module -avoid-version -export-symbols-regex '^[_]*gst_plugin_desc.*' $GST_ALL_LDFLAGS"
-AC_SUBST(GST_PLUGIN_LDFLAGS)
+AC_SUBST([GST_PLUGIN_LDFLAGS])
 
-dnl Add MacOSX specific flags
-AC_CANONICAL_HOST
+dnl# Add MacOSX specific flags
+dnl# AC_CANONICAL_HOST should have already been called
 case $host_os in
      darwin*)
 	DARWIN_LDFLAGS="-Wl,-read_only_relocs,suppress"
@@ -195,40 +224,40 @@
         DARWIN_LDFLAGS=""
 	;;
 esac
-AC_SUBST(DARWIN_LDFLAGS)
+AC_SUBST([DARWIN_LDFLAGS])
 
-dnl *** Check for bz2
-AG_GST_CHECK_LIBHEADER(BZ2, bz2, BZ2_bzlibVersion, , bzlib.h, have_bz2=yes, have_bz2=no)
-AM_CONDITIONAL(HAVE_BZ2, test "x$have_bz2" = "xyes")
+dnl# *** Check for bz2
+AG_GST_CHECK_LIBHEADER([BZ2],[bz2],[BZ2_bzlibVersion],[],[bzlib.h],[have_bz2=yes],[have_bz2=no])
+AM_CONDITIONAL([HAVE_BZ2],[test "x$have_bz2" = "xyes"])
 if test "x$have_bz2" = "xno"; then
-  AC_WARN([libbz2 not found, matroska demuxer will not be able to read bz2 tracks])
+  AC_MSG_WARN([libbz2 not found, matroska demuxer will not be able to read bz2 tracks])
 fi
 
-AC_ARG_ENABLE(lgpl,
-              [AC_HELP_STRING([--enable-lgpl], [build a LGPL licensed gst-ffmpeg])])
-AM_CONDITIONAL(GST_FFMPEG_ENABLE_LGPL, test "x$enable_lgpl" = "xyes")
+AC_ARG_ENABLE([lgpl],
+              [AS_HELP_STRING([--enable-lgpl],[build a LGPL licensed gst-ffmpeg])])
+AM_CONDITIONAL([GST_FFMPEG_ENABLE_LGPL],[test "x$enable_lgpl" = "xyes"])
 if test "x$enable_lgpl" = "xyes"; then
-  AC_DEFINE([GST_FFMPEG_ENABLE_LGPL], [], [Defined if building a LGPL-only version of gst-ffmpeg])
+  AC_DEFINE([GST_FFMPEG_ENABLE_LGPL],[],[Defined if building a LGPL-only version of gst-ffmpeg])
 fi
 
-dnl *** configure external libs ***
+dnl# *** configure external libs ***
 
 HAVE_FFMPEG_UNINSTALLED=1
 
-AC_ARG_WITH(system-ffmpeg,
-            [AC_HELP_STRING([--with-system-ffmpeg], [use system Libav libraries])])
+AC_ARG_WITH([system-ffmpeg],
+            [AS_HELP_STRING([--with-system-ffmpeg],[use system Libav libraries])])
 
 if test "x$with_system_ffmpeg" = "xyes"; then
-  PKG_CHECK_MODULES(FFMPEG, libavformat libavcodec libavutil) 
+  PKG_CHECK_MODULES([FFMPEG],[libavformat libavcodec libavutil]) 
   if test "x$enable_lgpl" != "xyes"; then
-    PKG_CHECK_MODULES(POSTPROC, libpostproc libavcodec libavutil)
+    PKG_CHECK_MODULES([POSTPROC],[libpostproc libavcodec libavutil])
   fi
-  PKG_CHECK_MODULES(SWSCALE, libswscale libavutil)
+  PKG_CHECK_MODULES([SWSCALE],[libswscale libavutil])
   saved_CPPFLAGS="$CPPFLAGS"
   CPPFLAGS="$CPPFLAGS $FFMPEG_CFLAGS"
   AC_CHECK_HEADERS([avi.h])
   CPPFLAGS="$saved_CPPFLAGS"
-  AC_DEFINE([FFMPEG_SOURCE], ["system install"], [Describes where the Libav libraries come from.])
+  AC_DEFINE([FFMPEG_SOURCE],["system install"],[Describes where the Libav libraries come from.])
   HAVE_FFMPEG_UNINSTALLED=0
   AC_MSG_NOTICE([Using system-installed FFMpeg code])
   AC_MSG_WARN([
@@ -260,13 +289,14 @@
   ======================================================================
   ])
 
-  dnl No, this is not too extreme, we want people to see and read the above
+  dnl# No, this is not too extreme, we want people to see and read the
+  dnl# above
   sleep 15
 else
 
   AC_MSG_NOTICE([Using local Libav snapshot])
   
-  dnl libgstffmpeg.la: include dirs
+  dnl# libgstffmpeg.la: include dirs
   FFMPEG_CFLAGS="-I \$(top_srcdir)/gst-libs/ext/libav/libavutil \
   		 -I \$(top_srcdir)/gst-libs/ext/libav/libavformat \
                  -I \$(top_srcdir)/gst-libs/ext/libav/libavcodec \
@@ -274,11 +304,11 @@
 		 -I \$(top_builddir)/gst-libs/ext/libav \
                  -Wno-deprecated-declarations"
 
-  dnl libgstffmpeg.la: libs to statically link to        
+  dnl# libgstffmpeg.la: libs to statically link to        
   FFMPEG_LIBS="\$(top_builddir)/gst-libs/ext/libav/libavformat/libavformat.a \
                \$(top_builddir)/gst-libs/ext/libav/libavcodec/libavcodec.a \
                \$(top_builddir)/gst-libs/ext/libav/libavutil/libavutil.a"
-  dnl
+  dnl#
   POSTPROC_CFLAGS="-I \$(top_srcdir)/gst-libs/ext/libav/libpostproc	\
                    -I \$(top_srcdir)/gst-libs/ext/libav/libavutil 	\
                    -I \$(top_srcdir)/gst-libs/ext/libav/libavcodec 	\
@@ -286,29 +316,28 @@
 		   -I \$(top_builddir)/gst-libs/ext/libav \
                    -Wno-deprecated-declarations"
 
-  dnl libgstpostproc.la: libs to statically link to
+  dnl# libgstpostproc.la: libs to statically link to
   POSTPROC_LIBS="\$(top_builddir)/gst-libs/ext/libav/libpostproc/libpostproc.a \
   		 \$(top_builddir)/gst-libs/ext/libav/libavutil/libavutil.a"
   				 
-  dnl
+  dnl#
   SWSCALE_CFLAGS="-I \$(top_srcdir)/gst-libs/ext/libav/libswscale	\
                   -I \$(top_srcdir)/gst-libs/ext/libav/libavutil 	\
                   -I \$(top_srcdir)/gst-libs/ext/libav 	\
 		   -I \$(top_builddir)/gst-libs/ext/libav \
                   -Wno-deprecated-declarations"
 
-  dnl libgstswscale.la: libs to statically link to
+  dnl# libgstswscale.la: libs to statically link to
   SWSCALE_LIBS="\$(top_builddir)/gst-libs/ext/libav/libswscale/libswscale.a \
                 \$(top_builddir)/gst-libs/ext/libav/libavutil/libavutil.a"
 
   FFMPEG_SUBDIRS=gst-libs
-  AC_DEFINE(HAVE_AVI_H)
-  AC_DEFINE([FFMPEG_SOURCE], ["local snapshot"], [Describes where the Libav libraries come from.])
+  AC_DEFINE([HAVE_AVI_H])
+  AC_DEFINE([FFMPEG_SOURCE],["local snapshot"],[Describes where the Libav libraries come from.])
 
-  AC_ARG_WITH(ffmpeg-extra-configure, 
-      AC_HELP_STRING([--with-ffmpeg-extra-configure="xxx"],
-      [extra configure options for internal ffmpeg ./configure script]),,
-      with_ffmpeg_extra_configure=no)
+  AC_ARG_WITH([ffmpeg-extra-configure], 
+      [AS_HELP_STRING([--with-ffmpeg-extra-configure="xxx"],[extra configure options for internal ffmpeg ./configure script])],[],
+      [with_ffmpeg_extra_configure=no])
 
   # basic arguments
   embffmpeg_configure_args="--prefix=$prefix"
@@ -349,14 +378,14 @@
       ;;
   esac
 
-  dnl checks for extra enable/disable flags
+  dnl# checks for extra enable/disable flags
   FFMPEG_OPTS="(cd $srcdir/gst-libs/ext/libav && ./configure --help)"
-  # Let's check if we can disable the building of the ffmpeg binary
+  # Let us check if we can disable the building of the ffmpeg binary
   can_disable=`echo "$FFMPEG_OPTS" | grep 'disable-ffmpeg'`
   if test "$can_disable" != ""; then
     embffmpeg_configure_args="$embffmpeg_configure_args --disable-ffmpeg"
   fi
-  dnl check if libswscale needs enabling explicitly
+  dnl# check if libswscale needs enabling explicitly
   can_enable=`echo "$FFMPEG_OPTS" | grep 'enable-swscale'`
   if test "$can_enable" != ""; then
     embffmpeg_configure_args="$embffmpeg_configure_args --enable-swscale"
@@ -367,15 +396,15 @@
     embffmpeg_configure_args="$embffmpeg_configure_args $with_ffmpeg_extra_configure"
   fi
 
-  AC_SUBST(FFMPEG_CO_DIR)
-  AC_SUBST(FFMPEG_SVN)
-  AC_SUBST(FFMPEG_REVISION)
-  AC_SUBST(FFMPEG_EXTERNALS_REVISION)
+  AC_SUBST([FFMPEG_CO_DIR])
+  AC_SUBST([FFMPEG_SVN])
+  AC_SUBST([FFMPEG_REVISION])
+  AC_SUBST([FFMPEG_EXTERNALS_REVISION])
   AC_CONFIG_COMMANDS([configure-embedded-ffmpeg],
     [echo "Configuring included Libav instance with args $embffmpeg_configure_args"
      origdir=`pwd`
-     dnl Don't put path on the configure call when not needed, as FFmpeg's configure relies on it
-     dnl to detect out-of-tree builds
+     dnl# Do NOT put path on the configure call when not needed, as
+     dnl# FFmpeg's configure relies on it to detect out-of-tree builds
      if test -z "$srcdir" -o "$srcdir" = .; then
        confcmd=./configure
      else
@@ -392,21 +421,21 @@
   AC_MSG_NOTICE([Using included Libav code])
 fi
 
-AC_SUBST(FFMPEG_CFLAGS)
-AC_SUBST(FFMPEG_LIBS)
-AC_SUBST(FFMPEG_SUBDIRS)
-AC_SUBST(POSTPROC_CFLAGS)
-AC_SUBST(POSTPROC_LIBS)
-AC_SUBST(SWSCALE_CFLAGS)
-AC_SUBST(SWSCALE_LIBS)
-AC_SUBST(WIN32_LIBS)
+AC_SUBST([FFMPEG_CFLAGS])
+AC_SUBST([FFMPEG_LIBS])
+AC_SUBST([FFMPEG_SUBDIRS])
+AC_SUBST([POSTPROC_CFLAGS])
+AC_SUBST([POSTPROC_LIBS])
+AC_SUBST([SWSCALE_CFLAGS])
+AC_SUBST([SWSCALE_LIBS])
+AC_SUBST([WIN32_LIBS])
  
 if test x$HAVE_FFMPEG_UNINSTALLED = x1; then
-  AC_DEFINE(HAVE_FFMPEG_UNINSTALLED, [], [Defined if building against uninstalled Libav source])
+  AC_DEFINE([HAVE_FFMPEG_UNINSTALLED],[],[Defined if building against uninstalled Libav source])
 fi
-AM_CONDITIONAL(HAVE_FFMPEG_UNINSTALLED, test x$HAVE_FFMPEG_UNINSTALLED = x1)
+AM_CONDITIONAL([HAVE_FFMPEG_UNINSTALLED],[test x$HAVE_FFMPEG_UNINSTALLED = x1])
 
-AC_CONFIG_FILES(
+AC_CONFIG_FILES([
 Makefile
 common/Makefile
 common/m4/Makefile
@@ -422,7 +451,7 @@
 tests/Makefile
 tests/check/Makefile
 tests/files/Makefile
-)
+])
 AC_OUTPUT
 
 ORC_OUTPUT
