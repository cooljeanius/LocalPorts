--- configure.ac.orig	2007-08-13 19:08:14.000000000 -0400
+++ configure.ac	2014-04-29 15:39:45.000000000 -0400
@@ -1,75 +1,113 @@
-AC_PREREQ(2.52)
-AC_INIT(libgtkhtml/document/htmldocument.c)
+dnl#                                               -*- Autoconf -*-
+dnl# Process this file with autoconf to produce a configure script.
 
-AM_CONFIG_HEADER(config.h)
-
-AM_INIT_AUTOMAKE(libgtkhtml, 2.11.1)
+AC_PREREQ([2.69])
+AC_INIT([libgtkhtml],[2.11.1],[jonas@codefactory.se])
+AC_CONFIG_SRCDIR([libgtkhtml/document/htmldocument.c])
+AC_CONFIG_HEADERS([config.h])
+AC_CONFIG_MACRO_DIR([m4])
 
+# Automake:
+AM_INIT_AUTOMAKE
 AM_MAINTAINER_MODE
 
-AC_PROG_CC
-AC_ISC_POSIX
-AC_HEADER_STDC
-AM_PROG_LIBTOOL
-
-dnl ALL_LINGUAS="hi"
-dnl AM_GNU_GETTEXT
-
-AC_ARG_ENABLE(more-warnings,
-       [  --enable-more-warnings  maximum compiler warnings],
-       set_more_warnings="$enableval",set_more_warnings=no)
+# Checks for programs.
+AM_PROG_AR
+AC_PROG_CPP
+AC_PROG_CXX
+AC_SEARCH_LIBS([strerror],[cposix]) dnl# used to be AC\_ISC\_POSIX
+LT_INIT([win32-dll])
+AC_DEFUN([AC_REQUIRE_RANLIB],[
+  AC_REQUIRE([AC_PROG_RANLIB])
+])
+if test "x${RANLIB}" = "x"; then
+  test -z "${RANLIB}"
+  AC_REQUIRE_RANLIB
+else
+  test ! -z "${RANLIB}" && export RANLIB
+  AC_SUBST([RANLIB])
+fi
 
-if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
-       echo "enable compile warnings = $set_more_warnings"
+ALL_LINGUAS=""
+AM_GNU_GETTEXT([external])
+AM_GNU_GETTEXT_VERSION([0.18.3])
+
+AC_ARG_ENABLE([more-warnings],
+       [AS_HELP_STRING([--enable-more-warnings],
+                       [maximum compiler warnings])],
+       [set_more_warnings="${enableval}"],[set_more_warnings=no])
+
+if test "x${GCC}" = "xyes" -a "x${set_more_warnings}" != "xno"; then
+       echo "enable compile warnings = ${set_more_warnings}"
        CFLAGS="-Wall -Wno-uninitialized \
-               -Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes \
-               -Wnested-externs -Wpointer-arith \
+               -Wchar-subscripts -Wmissing-declarations  \
+               -Wmissing-prototypes -Wnested-externs -Wpointer-arith \
                -Wno-sign-compare -Wsign-promo -Werror \
-	       $CFLAGS"
+	       ${CFLAGS}"
 fi
 
-AC_SUBST(CFLAGS)
-AC_SUBST(LDFLAGS)
-
-
-PKG_CHECK_MODULES(GTKHTML2, gtk+-2.0 >= 2.4.0 libxml-2.0 >= 2.4.16)
+AC_SUBST([CFLAGS])
+AC_SUBST([LDFLAGS])
 
-
-AC_ARG_ENABLE(accessibility,
-              [  --enable-accessibility  enable accessibility support (needs gail) [default=yes]], ,
-              enable_accessibility=yes)
-
-if test x$enable_accessibility = xyes; then
-  PKG_CHECK_MODULES(GAILUTIL, gail >= 1.8, ,
-	            AC_MSG_ERROR([
+# Checks for libraries.
+LT_LIB_M
+PKG_CHECK_MODULES([GTKHTML2],[gtk+-2.0 >= 2.4.0 libxml-2.0 >= 2.4.16])
+
+
+AC_ARG_ENABLE([accessibility],
+              [AS_HELP_STRING([--enable-accessibility],
+                              [enable a11y support w/gail [default=yes]])],
+              [],[enable_accessibility=yes])
+
+if test "x${enable_accessibility}" = "xyes"; then
+  PKG_CHECK_MODULES([GAILUTIL],[gail >= 1.8],[],
+	            [AC_MSG_ERROR([
 *** gail is needed for accessibility. Either install gail or turn off 
-*** accessibility support using the --disable-accessibility option.]))
+*** accessibility support using the --disable-accessibility option.])])
 
-  AC_DEFINE(ENABLE_ACCESSIBILITY, 1,
+  AC_DEFINE([ENABLE_ACCESSIBILITY],[1],
 	    [Define to 1 to enable accessibility support.])
 else
   AC_MSG_WARN([*** GtkHtml2 will be built without accessibility support.])
 fi
 
-AM_CONDITIONAL(ENABLE_ACCESSIBILITY, test x$enable_accessibility = xyes)
+AM_CONDITIONAL([ENABLE_ACCESSIBILITY],
+               [test "x${enable_accessibility}" = "xyes"])
+
 
+PKG_CHECK_MODULES([GNOME_VFS],[gnome-vfs-2.0 >= 1.9.8],[have_vfs=true],
+	          [AC_MSG_WARN([will build tests minus GNOME VFS support]) 
+                   have_vfs=false])
 
-PKG_CHECK_MODULES(GNOME_VFS, gnome-vfs-2.0 >= 1.9.8, have_vfs=true,
-	          AC_MSG_WARN([*** test apps will be built without GNOME VFS support.]) 
-                  have_vfs=false)
+AM_CONDITIONAL([HAVE_GNOME_VFS],[test "x${have_vfs}" = "xtrue"])
 
-AM_CONDITIONAL(HAVE_GNOME_VFS, test x$have_vfs = xtrue)
 
+AC_SUBST([GTKHTML2_CFLAGS])
+AC_SUBST([GTKHTML2_LIBS])
+AC_SUBST([GNOME_VFS_CFLAGS])
+AC_SUBST([GNOME_VFS_LIBS])
+AC_SUBST([GAILUTIL_CFLAGS])
+AC_SUBST([GAILUTIL_LIBS])
+AC_SUBST([A11Y])
 
-AC_SUBST(GTKHTML2_CFLAGS)
-AC_SUBST(GTKHTML2_LIBS)
-AC_SUBST(GNOME_VFS_CFLAGS)
-AC_SUBST(GNOME_VFS_LIBS)
-AC_SUBST(GAILUTIL_CFLAGS)
-AC_SUBST(GAILUTIL_LIBS)
-AC_SUBST(A11Y)
+# Checks for header files.
+AC_DEFUN([AC_REQUIRE_HEADER_STDC],[
+  AC_REQUIRE([AC_HEADER_STDC])
+])
+AC_REQUIRE_HEADER_STDC
+AC_HEADER_TIME
+AC_CHECK_HEADERS([locale.h stdio.h sys/time.h])
+
+# Checks for typedefs, structures, and compiler characteristics.
+AC_C_BIGENDIAN
+AC_C_PROTOTYPES
+AC_TYPE_SIZE_T
+
+# Checks for library functions.
+AC_CHECK_FUNCS([floor memmove memset setlocale strcasecmp strchr \
+                strncasecmp strstr strtol])
 
-AC_OUTPUT([
+AC_CONFIG_FILES([
 Makefile
 docs/Makefile
 libgtkhtml/Makefile
@@ -90,6 +128,7 @@
 tests/Makefile
 tests/samples/Makefile
 libgtkhtml-2.0.pc
+po/Makefile.in
+po/Makefile
 ])
-
-
+AC_OUTPUT
