***************
*** 1,154 ****
- dnl Process this file with autoconf to produce a configure script.
- AC_INIT([file],[5.14],[christos@astron.com])
- AM_INIT_AUTOMAKE([subdir-objects foreign])
- m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])
  
  AC_CONFIG_HEADERS([config.h])
  AC_CONFIG_MACRO_DIR([m4])
  
- AC_MSG_CHECKING(for builtin ELF support)
- AC_ARG_ENABLE(elf,
- [  --disable-elf            disable builtin ELF support],
  [if test "${enableval}" = yes; then
-   AC_MSG_RESULT(yes)
-   AC_DEFINE([BUILTIN_ELF], 1, [Define if built-in ELF support is used])
  else
-   AC_MSG_RESULT(no)
- fi], [
    # enable by default
-   AC_MSG_RESULT(yes)
-   AC_DEFINE([BUILTIN_ELF], 1, [Define in built-in ELF support is used])
  ])
  
- AC_MSG_CHECKING(for ELF core file support)
- AC_ARG_ENABLE(elf-core,
- [  --disable-elf-core       disable ELF core file support],
  [if test "${enableval}" = yes; then
-   AC_MSG_RESULT(yes)
-   AC_DEFINE([ELFCORE], 1, [Define for ELF core file support])
  else
-   AC_MSG_RESULT(no)
- fi], [
    # enable by default
-   AC_MSG_RESULT(yes)
-   AC_DEFINE([ELFCORE], 1, [Define for ELF core file support])
  ])
  
- AC_MSG_CHECKING(for file formats in man section 5)
- AC_ARG_ENABLE(fsect-man5,
- [  --enable-fsect-man5      enable file formats in man section 5],
  [if test "${enableval}" = yes; then
-   AC_MSG_RESULT(yes)
    fsect=5
  else
-   AC_MSG_RESULT(no)
    fsect=4
- fi], [
    # disable by default
-   AC_MSG_RESULT(no)
    fsect=4
  ])
  
- AC_CANONICAL_HOST
- case "$host_os" in
-    mingw32*)
-       MINGW=1
-       ;;
-    *)
-       MINGW=0
-       ;;
- esac
- AC_SUBST(MINGW)
- AM_CONDITIONAL(MINGW, test "$MINGW" = 1)
- 
- AC_SUBST([pkgdatadir], ['$(datadir)/misc'])
- AC_SUBST(fsect)
- AM_CONDITIONAL(FSECT5, test x$fsect = x5)
- 
- AC_SUBST(WARNINGS)
- 
- dnl Checks for programs.
- AC_PROG_CC_STDC
  AC_USE_SYSTEM_EXTENSIONS
- AM_PROG_CC_C_O
  AC_C_BIGENDIAN
  AC_PROG_INSTALL
  AC_PROG_LN_S
  LT_INIT([disable-static pic-only])
  gl_VISIBILITY
- dnl Checks for headers
- AC_HEADER_STDC
  AC_HEADER_MAJOR
  AC_HEADER_SYS_WAIT
- AC_CHECK_HEADERS(stdint.h fcntl.h locale.h stdint.h inttypes.h unistd.h)
- AC_CHECK_HEADERS(stddef.h utime.h wchar.h wctype.h limits.h)
- AC_CHECK_HEADERS(getopt.h err.h)
- AC_CHECK_HEADERS(sys/mman.h sys/stat.h sys/types.h sys/utime.h sys/time.h)
- AC_CHECK_HEADERS(zlib.h)
  
- dnl Checks for typedefs, structures, and compiler characteristics.
  AC_C_CONST
  AC_TYPE_OFF_T
  AC_TYPE_SIZE_T
  AC_CHECK_MEMBERS([struct stat.st_rdev])
- 
  AC_CHECK_MEMBERS([struct tm.tm_gmtoff])
  AC_STRUCT_TIMEZONE
  AC_STRUCT_TIMEZONE_DAYLIGHT
  AC_SYS_LARGEFILE
- AC_FUNC_FSEEKO
  AC_TYPE_MBSTATE_T
- 
  AC_STRUCT_OPTION_GETOPT_H
  AC_TYPE_PID_T
  AC_TYPE_UINT8_T
  AC_TYPE_UINT16_T
  AC_TYPE_UINT32_T
- AC_TYPE_INT32_T
  AC_TYPE_UINT64_T
  AC_TYPE_INT64_T
- AC_FUNC_MMAP
- AC_FUNC_FORK
- AC_FUNC_MBRTOWC
  
- AC_MSG_CHECKING(for gcc compiler warnings)
- AC_ARG_ENABLE(warnings,
- [  --disable-warnings	disable compiler warnings],
  [if test "${enableval}" = no -o "$GCC" = no; then
-    AC_MSG_RESULT(no)
     WARNINGS=
  else
-    AC_MSG_RESULT(yes)
-    WARNINGS="-Wall -Wstrict-prototypes -Wmissing-prototypes -Wpointer-arith \
-        -Wmissing-declarations -Wredundant-decls -Wnested-externs \
-        -Wsign-compare -Wreturn-type -Wswitch -Wshadow \
         -Wcast-qual -Wwrite-strings -Wextra -Wunused-parameter -Wformat=2"
- fi], [
  if test "$GCC" = yes; then
-    AC_MSG_RESULT(yes)
-    WARNINGS="-Wall -Wstrict-prototypes -Wmissing-prototypes -Wpointer-arith \
-        -Wmissing-declarations -Wredundant-decls -Wnested-externs \
-        -Wsign-compare -Wreturn-type -Wswitch -Wshadow \
         -Wcast-qual -Wwrite-strings -Wextra -Wunused-parameter -Wformat=2"
  else
     WARNINGS=
-    AC_MSG_RESULT(no)
  fi])
  
- dnl Checks for functions
- AC_CHECK_FUNCS(strerror strndup strtoul mkstemp mkostemp utimes utime wcwidth strtof)
- 
- dnl Provide implementation of some required functions if necessary
- AC_REPLACE_FUNCS(getopt_long asprintf vasprintf strlcpy strlcat getline ctime_r asctime_r pread)
  
- dnl Checks for libraries
- AC_CHECK_LIB(z,gzopen)
  if test "$MINGW" = 1; then
-   AC_CHECK_LIB(gnurx,regexec,,AC_MSG_ERROR([libgnurx is required to build file(1) with MinGW]))
  fi
  
- dnl See if we are cross-compiling
- AM_CONDITIONAL(IS_CROSS_COMPILE, test "$cross_compiling" = yes)
  
- AC_CONFIG_FILES([Makefile src/Makefile magic/Makefile tests/Makefile doc/Makefile python/Makefile])
  AC_OUTPUT
--- 1,201 ----
+ dnl#                                               -*- Autoconf -*-
+ dnl# Process this file with autoconf to produce a configure script.
  
+ AC_PREREQ([2.69])
+ AC_INIT([file],[5.14],[christos@astron.com])
+ AC_CONFIG_SRCDIR([config.h.in])
  AC_CONFIG_HEADERS([config.h])
  AC_CONFIG_MACRO_DIR([m4])
  
+ AC_CANONICAL_TARGET
+ case "$host_os" in
+    mingw32*)
+       MINGW=1
+       ;;
+    *)
+       MINGW=0
+       ;;
+ esac
+ AC_SUBST([MINGW])
+ AM_CONDITIONAL([MINGW],[test "$MINGW" = 1])
+ 
+ AM_INIT_AUTOMAKE([subdir-objects foreign -Wall])
+ AM_MAINTAINER_MODE
+ AM_PROG_INSTALL_STRIP
+ 
+ AC_MSG_CHECKING([for builtin ELF support])
+ AC_ARG_ENABLE([elf],
+ [AS_HELP_STRING([--disable-elf],[disable builtin ELF support])],
  [if test "${enableval}" = yes; then
+   AC_MSG_RESULT([yes])
+   AC_DEFINE([BUILTIN_ELF],[1],[Define if built-in ELF support is used])
  else
+   AC_MSG_RESULT([no])
+ fi],[
    # enable by default
+   AC_MSG_RESULT([yes])
+   AC_DEFINE([BUILTIN_ELF],[1],[Define in built-in ELF support is used])
  ])
  
+ AC_MSG_CHECKING([for ELF core file support])
+ AC_ARG_ENABLE([elf-core],
+ [AS_HELP_STRING([--disable-elf-core],[disable ELF core file support])],
  [if test "${enableval}" = yes; then
+   AC_MSG_RESULT([yes])
+   AC_DEFINE([ELFCORE],[1],[Define for ELF core file support])
  else
+   AC_MSG_RESULT([no])
+ fi],[
    # enable by default
+   AC_MSG_RESULT([yes])
+   AC_DEFINE([ELFCORE],[1],[Define for ELF core file support])
  ])
  
+ AC_MSG_CHECKING([for file formats in man section 5])
+ AC_ARG_ENABLE([fsect-man5],
+ [AS_HELP_STRING([--enable-fsect-man5],[enable file formats in man section 5])],
  [if test "${enableval}" = yes; then
+   AC_MSG_RESULT([yes])
    fsect=5
  else
+   AC_MSG_RESULT([no])
    fsect=4
+ fi],[
    # disable by default
+   AC_MSG_RESULT([no])
    fsect=4
  ])
  
+ AC_SUBST([pkgdatadir],['$(datadir)/misc'])
+ AC_SUBST([fsect])
+ AM_CONDITIONAL([FSECT5],[test x$fsect = x5])
+ 
+ AC_SUBST([WARNINGS])
+ 
+ dnl# Checks for programs.
+ AM_PROG_AS
+ if test "x$CC" = "x"; then
+ 	test -z "$CC"
+ 	AC_PROG_CC
+ else
+ 	test ! -z "$CC" && export CC
+ 	AC_SUBST([CC])
+ 	if test "x$CC_C_O" = "x"; then
+ 		test -z "$CC_C_O"
+ 		AM_PROG_CC_C_O
+ 	fi
+ fi
  AC_USE_SYSTEM_EXTENSIONS
+ AM_PROG_AR
  AC_C_BIGENDIAN
  AC_PROG_INSTALL
  AC_PROG_LN_S
+ AC_DISABLE_STATIC
  LT_INIT([disable-static pic-only])
+ LT_LANG([C])
  gl_VISIBILITY
+ 
+ dnl# Checks for headers
+ dnl# AC_HEADER_STDC is called automatically
  AC_HEADER_MAJOR
+ AC_HEADER_STDBOOL dnl# calls AC_CHECK_HEADER_STDBOOL
  AC_HEADER_SYS_WAIT
+ AC_CHECK_HEADERS([fcntl.h float.h locale.h stdio.h])
+ AC_CHECK_HEADERS([stddef.h utime.h wchar.h wctype.h limits.h])
+ AC_CHECK_HEADERS([err.h getopt.h])
+ AC_CHECK_HEADERS([sys/ioctl.h sys/mman.h param.h sys/param.h stat.h \
+                   time.h sys/time.h sys/utime.h])
+ AC_CHECK_HEADERS([rxposix.h zlib.h])
  
+ dnl# Checks for typedefs, structures, and compiler characteristics.
  AC_C_CONST
+ AC_C_INLINE
+ AC_C_PROTOTYPES
  AC_TYPE_OFF_T
  AC_TYPE_SIZE_T
+ AC_TYPE_SSIZE_T
  AC_CHECK_MEMBERS([struct stat.st_rdev])
  AC_CHECK_MEMBERS([struct tm.tm_gmtoff])
  AC_STRUCT_TIMEZONE
  AC_STRUCT_TIMEZONE_DAYLIGHT
  AC_SYS_LARGEFILE
+ AC_SYS_LONG_FILE_NAMES
  AC_TYPE_MBSTATE_T
  AC_STRUCT_OPTION_GETOPT_H
+ AC_TYPE_MODE_T
  AC_TYPE_PID_T
  AC_TYPE_UINT8_T
  AC_TYPE_UINT16_T
  AC_TYPE_UINT32_T
  AC_TYPE_UINT64_T
+ AC_TYPE_INT8_T
+ AC_TYPE_INT16_T
+ AC_TYPE_INT32_T
  AC_TYPE_INT64_T
+ AC_CHECK_TYPES([ptrdiff_t])
  
+ AC_MSG_CHECKING([for gcc compiler warnings])
+ AC_ARG_ENABLE([warnings],
+ [AS_HELP_STRING([--disable-warnings],[disable compiler warnings])],
  [if test "${enableval}" = no -o "$GCC" = no; then
+    AC_MSG_RESULT([no])
     WARNINGS=
  else
+    AC_MSG_RESULT([yes])
+    WARNINGS="-Wall -Wstrict-prototypes -Wmissing-prototypes \
+        -Wpointer-arith -Wmissing-declarations -Wredundant-decls \
+        -Wnested-externs -Wsign-compare -Wreturn-type -Wswitch -Wshadow \
         -Wcast-qual -Wwrite-strings -Wextra -Wunused-parameter -Wformat=2"
+ fi],[
  if test "$GCC" = yes; then
+    AC_MSG_RESULT([yes])
+    WARNINGS="-Wall -Wstrict-prototypes -Wmissing-prototypes \
+        -Wpointer-arith -Wmissing-declarations -Wredundant-decls \
+        -Wnested-externs -Wsign-compare -Wreturn-type -Wswitch -Wshadow \
         -Wcast-qual -Wwrite-strings -Wextra -Wunused-parameter -Wformat=2"
  else
     WARNINGS=
+    AC_MSG_RESULT([no])
  fi])
  
+ dnl# Checks for library functions
+ AC_FUNC_FORK
+ AC_FUNC_FSEEKO
+ AC_FUNC_LSTAT dnl# calls AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
+ AC_FUNC_MALLOC
+ AC_FUNC_MBRTOWC
+ AC_FUNC_MKTIME
+ AC_FUNC_MMAP
+ AC_FUNC_REALLOC
+ AC_FUNC_STRTOD
+ AC_CHECK_FUNCS([atoi dup2 getdelim isascii iswprint lstat malloc memchr \
+                 memset munmap mkostemp mkstemp mktime realloc regcomp \
+                 select setlocale strchr strcspn strdup strerror strndup \
+                 strrchr strstr strtof strtol strtoul strtoull \
+                 utime utimes wcwidth])
+ 
+ dnl# Provide implementation of some required functions if necessary
+ AC_REPLACE_FUNCS([getopt_long asprintf vasprintf strlcpy strlcat getline \
+                   ctime_r asctime_r pread])
  
+ dnl# Checks for libraries
+ AC_CHECK_LIB([z],[gzopen])
  if test "$MINGW" = 1; then
+   AC_CHECK_LIB([gnurx],[regexec],[],[AC_MSG_ERROR([libgnurx is required to build file(1) with MinGW])])
+ else
+   # FIXME: Replace `main' with a function in `-lgnurx' (and `-lrx'):
+   AC_CHECK_LIB([gnurx],[main],[],[AC_CHECK_LIB([rx],[main])])
  fi
+ # FIXME: Replace `main' with a function in `-lshlwapi':
+ AC_CHECK_LIB([shlwapi],[main])
  
+ dnl# See if we are cross-compiling
+ AM_CONDITIONAL([IS_CROSS_COMPILE],[test "$cross_compiling" = yes])
  
+ AC_CONFIG_FILES([Makefile \
+                  src/Makefile \
+                  magic/Makefile \
+                  tests/Makefile \
+                  doc/Makefile \
+                  python/Makefile])
  AC_OUTPUT
