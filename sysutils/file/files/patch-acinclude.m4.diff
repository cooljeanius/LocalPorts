--- acinclude.m4.bak	2013-09-15 19:15:59.000000000 -0400
+++ acinclude.m4	2013-09-16 07:27:05.000000000 -0400
@@ -1,58 +1,82 @@
-dnl from autoconf 2.13 acspecific.m4, with changes to check for daylight
+dnl# from autoconf 2.13 acspecific.m4, with changes to check for daylight
 
 AC_DEFUN([AC_STRUCT_TIMEZONE_DAYLIGHT],
-[AC_REQUIRE([AC_STRUCT_TM])dnl
-AC_CACHE_CHECK([for tm_zone in struct tm], ac_cv_struct_tm_zone,
-[AC_TRY_COMPILE([#include <sys/types.h>
-#include <$ac_cv_struct_tm>], [struct tm tm; tm.tm_zone;],
-  ac_cv_struct_tm_zone=yes, ac_cv_struct_tm_zone=no)])
+[AC_PREREQ([2.13])dnl
+AC_REQUIRE([AC_STRUCT_TM])dnl
+AC_CACHE_CHECK([for tm_zone in struct tm],[ac_cv_struct_tm_zone],
+[AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
+#include <sys/types.h>
+#include <$ac_cv_struct_tm>
+]],[[
+struct tm tm; tm.tm_zone;
+]])],
+  [ac_cv_struct_tm_zone=yes],[ac_cv_struct_tm_zone=no])
+])
 if test "$ac_cv_struct_tm_zone" = yes; then
-  AC_DEFINE(HAVE_TM_ZONE,1,[HAVE_TM_ZONE])
+  AC_DEFINE([HAVE_TM_ZONE],[1],[HAVE_TM_ZONE])
 fi
 
-# On SGI, apparently tzname is a #define, but that's ok, AC_CHECK_DECL will
-# consider it declared and we won't give our own extern.
-AC_CHECK_DECLS([tzname], , , [#include <time.h>])
-AC_CACHE_CHECK(for tzname, ac_cv_var_tzname,
-[AC_TRY_LINK(
-[#include <time.h>
+# On SGI, apparently tzname is a #define, but that is ok,
+# AC_CHECK_DECL will consider it declared and we will not give our
+# own extern.
+AC_CHECK_HEADERS_ONCE([time.h])
+AC_CHECK_DECLS([tzname],[],[],[#include <time.h>])
+AC_CACHE_CHECK([for tzname],[ac_cv_var_tzname],
+[AC_LINK_IFELSE([AC_LANG_SOURCE([[
+#include <time.h>
 #if !HAVE_DECL_TZNAME
 extern char *tzname[];
-#endif],
-[return tzname[0][0];], [ac_cv_var_tzname=yes], [ac_cv_var_tzname=no])])
-  if test $ac_cv_var_tzname = yes; then
-    AC_DEFINE(HAVE_TZNAME,1,[HAVE_TZNAME])
-  fi
+#endif
+]],[[
+return tzname[0][0];
+]])],
+  [ac_cv_var_tzname=yes],[ac_cv_var_tzname=no])
+])
+if test $ac_cv_var_tzname = yes; then
+  AC_DEFINE([HAVE_TZNAME],[1],[HAVE_TZNAME])
+fi
 
-AC_CACHE_CHECK([for tm_isdst in struct tm], ac_cv_struct_tm_isdst,
-[AC_TRY_COMPILE([#include <sys/types.h>
-#include <$ac_cv_struct_tm>], [struct tm tm; tm.tm_isdst;],
-  ac_cv_struct_tm_isdst=yes, ac_cv_struct_tm_isdst=no)])
+AC_CACHE_CHECK([for tm_isdst in struct tm],[ac_cv_struct_tm_isdst],
+[AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
+#include <sys/types.h>
+#include <$ac_cv_struct_tm>
+]],[[
+struct tm tm; tm.tm_isdst;
+]])],
+  [ac_cv_struct_tm_isdst=yes],[ac_cv_struct_tm_isdst=no])
+])
 if test "$ac_cv_struct_tm_isdst" = yes; then
-  AC_DEFINE(HAVE_TM_ISDST,1,[HAVE_TM_ISDST])
+  AC_DEFINE([HAVE_TM_ISDST],[1],[HAVE_TM_ISDST])
 fi
 
-
-AC_CHECK_DECLS([daylight], , , [#include <time.h>])
-AC_CACHE_CHECK(for daylight, ac_cv_var_daylight,
-[AC_TRY_LINK(
-changequote(<<, >>)dnl
-<<#include <time.h>
+AC_CHECK_DECLS([daylight],[],[],[#include <time.h>])
+AC_CACHE_CHECK([for daylight],[ac_cv_var_daylight],
+[AC_LINK_IFELSE([AC_LANG_SOURCE([[
+#include <time.h>
 #if !HAVE_DECL_DAYLIGHT
 extern int daylight;
-#endif>>,
-changequote([, ])dnl
-[atoi(daylight);], ac_cv_var_daylight=yes, ac_cv_var_daylight=no)])
+#endif
+]],[[
+atoi(daylight);
+]])],
+  [ac_cv_var_daylight=yes],[ac_cv_var_daylight=no])
+])
   if test $ac_cv_var_daylight = yes; then
-    AC_DEFINE(HAVE_DAYLIGHT,1,[HAVE_DAYLIGHT])
+    AC_DEFINE([HAVE_DAYLIGHT],[1],[HAVE_DAYLIGHT])
   fi
 ])
 
 AC_DEFUN([AC_STRUCT_OPTION_GETOPT_H],
-[AC_CACHE_CHECK([for struct option in getopt], ac_cv_struct_option_getopt_h,
-[AC_TRY_COMPILE([#include <getopt.h>], [struct option op; op.name;],
-  ac_cv_struct_option_getopt_h=yes, ac_cv_struct_option_getopt_h=no)])
+[AC_PREREQ([2.13])dnl
+AC_REQUIRE([AC_PROG_CC])dnl
+AC_CACHE_CHECK([for struct option in getopt], [ac_cv_struct_option_getopt_h],
+[AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
+#include <getopt.h>
+]],[[
+struct option op; op.name;
+]])],
+  [ac_cv_struct_option_getopt_h=yes],[ac_cv_struct_option_getopt_h=no])])
 if test "$ac_cv_struct_option_getopt_h" = yes; then
-  AC_DEFINE(HAVE_STRUCT_OPTION,1,[HAVE_STRUCT_OPTION])
+  AC_DEFINE([HAVE_STRUCT_OPTION],[1],[HAVE_STRUCT_OPTION])
 fi
 ])
