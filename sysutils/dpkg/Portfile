# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 105815 2013-05-06 14:52:20Z landonf@macports.org $

PortSystem          1.0

name                dpkg
version             1.16.10
revision            1
platforms           darwin freebsd
categories          sysutils archivers
license             GPL-2+
maintainers         gwmail.gwu.edu:egall openmaintainer
description         Debian package maintenance system
long_description    ${name} is the basis of the ${description}. \
                    Installing this port allows the usage of the \
                    \`port dpkg\` command.

homepage            http://wiki.debian.org/Teams/Dpkg

master_sites        debian:d/${name}/
checksums           md5     a20a06a5272717274a8b009368f237da \
                    sha1    bd67ce10236a674a2349d13feaa096b41fea4c9c \
                    rmd160  e04b3834056cd97c1cb955007f02e1358a8e8fa0 \
                    sha256  aeaacf0884039940d9463901102194f9a42eb5702157b9e7a23f43e0d9f65cf2

use_xz              yes
extract.asroot      yes

depends_build-append \
                    port:pkgconfig \
                    path:share/aclocal/ax_check_gnu_make.m4:autoconf-archive \
                    path:share/aclocal/xorg-macros.m4:xorg-util-macros \
                    bin:git:git-core \
                    bin:gnutar:gnutar \
                    bin:lzma:xz \
                    bin:perl:perl5

# Use MacPorts versions explicitly
depends_lib-append  port:gettext \
                    port:libiconv \
                    port:perl5 \
                    port:coreutils \
                    port:bzip2 \
                    port:zlib \
                    port:ncurses \
                    port:gnutar \
                    path:lib/pkgconfig/liblzma.pc:xz

depends_run-append  bin:gnutar:gnutar \
                    bin:lzma:xz \
                    bin:perl:perl5 \
                    port:debianutils

# got to do some underscore-to-hyphen twiddling...
distname            ${name}_${version}
worksrcdir          ${name}-${version}

configure.env-append \
                    PERL=${prefix}/bin/perl5 \
                    PKG_CONFIG=${prefix}/bin/pkg-config \
                    TAR=${prefix}/bin/gnutar
configure.args-append \
                    --with-libintl-prefix=${prefix} \
                    --with-libiconv-prefix=${prefix} \
                    --with-admindir=${prefix}/var/db/${name} \
                    --with-logdir=${prefix}/var/log \
                    --mandir=${prefix}/share/man \
                    --with-zlib \
                    --with-bz2 \
                    --with-liblzma \
                    --disable-linker-optimisations \
                    --disable-silent-rules \
                    --disable-start-stop-daemon
# The start-stop-daemon patch now applies again, but now it leads to build
# errors, so disabling it with a configure flag again (as done above)

# ccache is trouble
configure.ccache          no

# Older versions of gcc choke with the -Wvla warning flag
configure.cflags-delete   -Wvla
configure.cppflags-delete -Wvla
configure.ldflags-delete  -Wvla

post-configure {
    reinplace "s|-Wvla||" ${worksrcpath}/Makefile
    eval reinplace "s|-Wvla||" [glob ${worksrcpath}/*/Makefile]
    eval reinplace "s|-Wvla||" [glob ${worksrcpath}/lib/*/Makefile]
    reinplace "s|-Wvla||" ${worksrcpath}/lib/dpkg/test/Makefile
    reinplace "s|-Wmissing-declarations||" ${worksrcpath}/dselect/Makefile
}

compiler.blacklist-append cc gcc-3.3 gcc-4.0 apple-gcc-4.0

build.type          gnu

set vardpkg ${destroot}${prefix}/var/db/${name}
destroot.keepdirs-append \
                    ${vardpkg} \
                    ${vardpkg}/updates \
                    ${vardpkg}/info \
                    ${destroot}${prefix}/var/log \
                    ${destroot}${prefix}/etc/${name}

patchfiles-append   patch-configure.ac.diff \
                    patch-lib_dpkg_dpkg.h.diff \
                    patch-lib_dpkg_tarfn.c.diff \
                    patch-src_remove.c.diff \
                    patch-src_archives.c.diff \
                    patch-utils_start-stop-daemon.c.diff

post-patch {
    set scripts ${worksrcpath}/scripts
    reinplace "s|/etc/${name}/|${prefix}/etc/${name}/|" \
            ${scripts}/${name}-shlibdeps.pl \
            ${scripts}/${name}-source.pl
    reinplace "s|AC_ERROR|AC_MSG_ERROR|" ${worksrcpath}/m4/dpkg-build.m4
    file copy ${prefix}/share/aclocal/ax_check_gnu_make.m4 ${worksrcpath}/m4
    file copy ${prefix}/share/aclocal/xorg-macros.m4 ${worksrcpath}/m4
    system -W ${worksrcpath} "git init"
}

use_autoreconf      yes
autoreconf.args     -fvi --warnings=all

pre-destroot {
    file mkdir ${destroot}${prefix}/share/doc/${name}
}

post-destroot {
    file mkdir ${vardpkg}
    file mkdir ${vardpkg}/updates
    file mkdir ${vardpkg}/info
    system "touch ${vardpkg}/available ${vardpkg}/status"
}

# These platform variants had previously had patches associated
# with them...
platform darwin {
    depends_build-append    bin:gnumake:gmake
}

platform freebsd {
    depends_build-append    bin:gmake:gmake
}

# This variant currently hangs while building and fails to actually
# install the documentation, not entirely sure why...
# Example error message:
# dot[21000:907] CoreText CopyPropertiesForFont received mig IPC error (FFFFFFFFFFFFFECC) from font server
# (issue with the graphviz port?)
variant docs description {Build documentation (warning: building documentation takes a long time)} {
    PortGroup               archcheck 1.0
    depends_build-append    port:doxygen \
                            path:bin/dot:graphviz \
                            bin:mig:bootstrap_cmds \
                            bin:lcov:lcov \
                            port:fondu \
                            port:fontconfig
    depends_skip_archcheck-append bootstrap_cmds lcov fondu fontconfig
    set docdir ${prefix}/share/doc/${name}
    configure.args-append   --docdir=${docdir} \
                            --htmldir=${docdir}/html \
                            --dvidir=${docdir}/dvi \
                            --pdfdir=${docdir}/pdf \
                            --psdir=${docdir}/ps
    build.target-append     doc
    pre-build {
        elevateToRoot "doxygen"
    }
    post-build {
        system -W ${worksrcpath}/doc "doxygen"
        dropPrivileges
        set destroot_docdir ${destroot}${prefix}/share/doc/${name}
        xinstall -d ${destroot_docdir}
        copy ${worksrcpath}/doc/doc ${destroot_docdir}
        copy ${worksrcpath}/doc/html ${destroot_docdir}
        foreach docfile {coding-style.txt triggers.txt README.feature-removal-schedule frontend.txt README.api} {
            xinstall -m 644 ${worksrcpath}/doc/${docfile} ${destroot_docdir}
        }
    }
}

# Tests currently fail, this needs to be fixed eventually
test.run            yes
test.target         check

pre-test {
    elevateToRoot "test"
}
post-test {
    dropPrivileges
}

livecheck.type      regex
livecheck.url       http://ftp.debian.org/debian/pool/main/d/${name}/
livecheck.regex     "${name}_(\\d+\\.\\d+(\\.\\d+)*)"
