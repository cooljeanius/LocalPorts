# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 114325 2013-12-05 09:20:31Z ryandesign@macports.org $

# Thanks to the Fink Project for their work on porting apt

PortSystem          1.0

name                apt
version             0.5.27
revision            12
platforms           darwin freebsd
categories          sysutils
maintainers         gwmail.gwu.edu:egall openmaintainer
license             GPL-2+

description         Advanced front-end for dpkg

long_description    Apt is Debian's next generation front-end for the \
                    dpkg package manager. It provides the apt-get \
                    utility and APT dselect method that provides a \
                    simpler, safer way to install and upgrade packages.

homepage            http://packages.qa.debian.org/a/apt.html
master_sites        fink \
                    debian \
                    debian:a/${name} \
                    debian:pool/main/a/${name} \
                    http://ftp.debian.org/debian/pool/main/a/apt/
checksums           md5     36f0b6012806569d27be98c80a6d57ff \
                    sha1    a84519a72889aadf6411cb6fb99323e7c4bdfd57 \
                    rmd160  045035783259ae69cde5f4e90d1ca450bca9c2c0

# got to do some underscore-to-hyphen twiddling...
distname            ${name}_${version}
worksrcdir          ${name}-${version}

depends_build-append port:gettext
depends_lib-append  path:bin/dpkg:dpkg \
                    bin:bash:bash \
                    port:libiconv
# gettext is added as a library dependency in each platform

# would normally be a candidate for muniversal, but that fails because
# we override the destroot, so instead just disable universal:
universal_variant   no

pre-patch {
    file rename ${worksrcpath}/configure.in ${worksrcpath}/configure.ac
    file copy ${worksrcpath}/aclocal.m4 ${worksrcpath}/acinclude.m4
}

patchfiles-append   patch-buildlib_ostable.diff \
                    patch-paths.diff \
                    patch-aclocal.m4.diff \
                    patch-acinclude.m4.diff \
                    patch-configure.ac.diff \
                    patch-configure.diff \
                    patch-static-constructors.diff \
                    patch-buildlib_environment.mak.in.diff \
                    patch-apt-pkg_contrib_system.h.diff \
                    patch-apt-pkg_init.h.diff \
                    patch-apt-inst_deb_dpkgdb.cc.diff \
                    patch-apt-pkg_deb_deblistparser.cc.diff \
                    patch-cmdline_apt-get.cc.diff \
                    patch-cmdline_apt-sortpkgs.cc.diff \
                    patch-doc_apt_preferences.5.diff \
                    patch-doc_apt-cache.8.diff \
                    patch-doc_apt-cdrom.8.diff \
                    patch-doc_apt-config.8.diff \
                    patch-doc_apt-get.8.diff \
                    patch-doc_sources.list.5.diff \
                    patch-methods_connect.cc.diff \
                    patch-methods_ftp.cc.diff \
                    patch-methods_rfc2553emu.h.diff \
                    patch-apt-pkg_deb_debindexfile.cc.diff \
                    patch-apt-pkg_deb_debversion.cc.diff \
                    patch-apt-inst_contrib_extracttar.cc.diff
# patches:
# - patch-buildlib_environment.mak.in: used to be "patch-soname-magic"
# - patch-buildlib_ostable: used to be just "patch-ostable"
# - patch-acinclude.m4: TODO: figure out how to silence some of the
#   warnings that it produces, and still be able to autoreconf
# patches that do not work yet:
# - patch-apt-pkg_contrib_mmap.cc
# - patch-apt-pkg_contrib_mmap.h

patch.args-append   --backup

# there is already a "post-patch" section later

use_autoreconf      yes
autoreconf.args     -fvi -Wall
# autopoint will create the "m4" subdirectory for us:
autoreconf.env-append ACLOCAL="aclocal -I m4 --install"
# Work around case insensitive file system issues:
configure.cmd       ../configure
configure.dir       ${worksrcpath}/build
# (this pre-configure step has been merged with the other)
# (should be fixed now, with the latest configure.ac patches, but keeping
# this around for a while just in case...)

configure.optflags -O2
configure.cflags-append "-L${prefix}/lib"
# what fink uses:
configure.cxxflags-append "-DEMULATE_MMAP -D__USE_MISC -fconstant-cfstrings -DHAVE_SOCKLEN_T=1"
# I was messing around with autoheader:
configure.cppflags-append "-I. -I.. -DHAVE_BINDTEXTDOMAIN -DHAVE_TEXTDOMAIN"
configure.ldflags-append -lintl

configure.args-append   --with-libiconv-prefix=${prefix} \
                        --with-libintl-prefix=${prefix} \
                        --disable-nls

build.dir           ${configure.dir}
build.type          gnu
build.pre_args      -f GNUMakefile ${build.target}
build.post_args     NOISY=1
build.env-append    NOISY=1
# The build system chooses the number of make jobs on its own:
use_parallel_build  no

set varapt          ${destroot}${prefix}/var/db/apt
destroot.keepdirs   ${varapt}/cache/archives/partial \
                    ${varapt}/state/lists/partial \
                    ${destroot}${prefix}/etc/apt/apt.conf.d

# This project has buggy code, and clang is right to complain about it.
# That is because this version is ancient though.
# TODO: see if updating to a newer version allows building with clang
compiler.blacklist-append *clang* *gcc-4.2
# (gcc-4.2 also breaks)

### Operating System Variants ###
platform darwin {
    global aptpkg-longversion aptpkg-version aptpkg-shortversion
    global aptinst-longversion aptinst-version aptinst-shortversion
    global apt-libsuffix

    set apt-libsuffix   dylib

    set aptpkg-longversion  3.3.0.dylib
    set aptpkg-version      3.3.dylib
    set aptpkg-shortversion 3.dylib

    set aptinst-longversion     1.0.0.dylib
    set aptinst-version         1.0.dylib
    set aptinst-shortversion    1.dylib

    depends_lib-append      port:gettext
    depends_build-append    bin:gnumake:gmake
    # patch-01-c++pragma.diff has been turned into a script
    patchfiles-append   patch-apt-pkg_deb_dpkgpm.cc.diff \
                        patch-buildlib_library.mak.diff \
                        patch-use-libintl.diff
    # patches:
    # - patch-apt-pkg_deb_dpkgpm.cc: used to be "patch-sig_t"
    # - patch-buildlib_library.mak: used to be "patch-darwinshlibs-hack"
}

platform freebsd {
    global aptpkg-longversion aptpkg-version aptpkg-shortversion
    global aptinst-longversion aptinst-version aptinst-shortversion
    global apt-libsuffix

    set apt-libsuffix   so

    set aptpkg-longversion  so.3.3.0
    set aptpkg-version      so.3.3
    set aptpkg-shortversion so.3

    set aptinst-longversion     so.1.0.0
    set aptinst-version         so.1.0
    set aptinst-shortversion    so.1

    depends_lib-append      port:gettext
    depends_build-append    bin:gmake:gmake
    patchfiles-append   patch-apt-pkg_deb_dpkgpm.cc.diff \
                        patch-use-libintl.diff
    # patchfiles: both are also used on darwin, see notes for them above
}

### Target Overrides ###
# changed from "post-patch" to "pre-configure" to give me room to work on
# patches without reinplaces messing them up:
pre-configure {
    file mkdir ${worksrcpath}/build
    # These "@PREFIX@"es are all inserted by patches:
    reinplace "s|@PREFIX@|${prefix}|g" \
            ${worksrcpath}/buildlib/environment.mak.in \
            ${worksrcpath}/apt-pkg/deb/debsystem.cc \
            ${worksrcpath}/apt-pkg/init.cc \
            ${worksrcpath}/dselect/install \
            ${worksrcpath}/dselect/setup \
            ${worksrcpath}/dselect/update
    eval reinplace "s|@PREFIX@|${prefix}|g" [glob ${worksrcpath}/doc/*.8]
    eval reinplace "s|@PREFIX@|${prefix}|g" [glob ${worksrcpath}/doc/*.5]
    xinstall -m 644 ${filespath}/debsystem_darwin.cc ${worksrcpath}/apt-pkg/deb
    # This script comes from Fink:
    ui_debug "Running script to patch usage of flush"
    system -W ${worksrcpath} "sh ${filespath}/patch_flush.sh"
    # Hack for lack of post-patch-append:
    if {${os.platform} eq "freebsd"} {
        reinplace "s|make -s|gmake -s|g" ${worksrcpath}/configure
    }
    if {${os.platform} eq "darwin"} {
        ui_debug "Running script to fix c++ pragmas"
        system -W ${worksrcpath} "sh ${filespath}/patch-01-c++pragma.sh"
    }
    system "echo \"x86_64\tx86_64\" >> ${worksrcpath}/buildlib/archtable"
    xinstall ${prefix}/share/gettext/gettext.h ${worksrcpath}
}

# tests are still a WIP:
test.run yes
test.dir ${worksrcpath}/test
test.target ""
test.env-append NOISY=1

# apt's makefiles do not have an install target, so do everything manually:
destroot {
    set build ${build.dir}

    # Install binaries:
    set bindest ${destroot}${prefix}/bin/
    file mkdir ${bindest}
    xinstall -m 755 ${build}/bin/apt-cache ${bindest}
    xinstall -m 755 ${build}/bin/apt-cdrom ${bindest}
    xinstall -m 755 ${build}/bin/apt-config ${bindest}
    xinstall -m 755 ${build}/bin/apt-extracttemplates ${bindest}
    xinstall -m 755 ${build}/bin/apt-get ${bindest}
    xinstall -m 755 ${build}/bin/apt-sortpkgs ${bindest}

    # Install libraries:
    set libdest ${destroot}${prefix}/lib/
    file mkdir ${libdest}

    xinstall -m 644 ${build}/bin/libapt-pkg.${aptpkg-longversion} ${libdest}
    system  "cd ${libdest} && \
         ln -sf libapt-pkg.${aptpkg-longversion} libapt-pkg.${aptpkg-version} && \
         ln -sf libapt-pkg.${aptpkg-version} libapt-pkg.${aptpkg-shortversion} && \
         ln -sf libapt-pkg.${aptpkg-shortversion} libapt-pkg.${apt-libsuffix}"

    xinstall -m 644 ${build}/bin/libapt-inst.${aptinst-longversion} ${libdest}
    system  "cd ${libdest} && \
         ln -sf libapt-inst.${aptinst-longversion} libapt-inst.${aptinst-version} && \
         ln -sf libapt-inst.${aptinst-version} libapt-inst.${aptinst-shortversion} && \
         ln -sf libapt-inst.${aptinst-shortversion} libapt-inst.${apt-libsuffix}"

    # Install methods:
    set methdest ${destroot}${prefix}/libexec/apt/methods/
    file mkdir ${methdest}
    xinstall -m 755 ${build}/bin/methods/cdrom ${methdest}
    xinstall -m 755 ${build}/bin/methods/copy ${methdest}
    xinstall -m 755 ${build}/bin/methods/file ${methdest}
    xinstall -m 755 ${build}/bin/methods/ftp ${methdest}
    xinstall -m 755 ${build}/bin/methods/gzip ${methdest}
    xinstall -m 755 ${build}/bin/methods/http ${methdest}
    xinstall -m 755 ${build}/bin/methods/rsh ${methdest}
    system  "cd ${methdest} && \
         ln -sf rsh ssh"

    file mkdir ${methdest}/apt
    xinstall -m 644 ${build}/scripts/dselect/desc.apt ${methdest}/apt/
    xinstall -m 755 ${build}/scripts/dselect/install ${methdest}/apt/
    xinstall -m 644 ${build}/scripts/dselect/names ${methdest}/apt/
    xinstall -m 755 ${build}/scripts/dselect/setup ${methdest}/apt/
    xinstall -m 755 ${build}/scripts/dselect/update ${methdest}/apt/

    # Install includes:
    set incdest ${destroot}${prefix}/include/apt-pkg/
    file mkdir ${incdest}
    foreach file [readdir ${build}/include/apt-pkg/] {
        if {"$file" == "." || "$file" == ".."} {
            continue
        }
        xinstall -m 644 ${build}/include/apt-pkg/${file} \
            ${incdest}
    }

    # Install man pages:
    set mandest ${destroot}${prefix}/share/man
    file mkdir ${mandest}
    file mkdir ${mandest}/man1
    file mkdir ${mandest}/man5
    file mkdir ${mandest}/man8
    xinstall -m 644 ${build}/docs/apt-cache.8 \
            ${build}/docs/apt-cdrom.8 \
            ${build}/docs/apt-config.8 \
            ${build}/docs/apt-get.8 \
                ${mandest}/man8/

    xinstall -m 644 ${build}/docs/apt-extracttemplates.1 \
            ${build}/docs/apt-ftparchive.1 \
            ${build}/docs/apt-sortpkgs.1 \
                ${mandest}/man1/

    xinstall -m 644 ${build}/docs/apt.conf.5 \
            ${build}/docs/apt_preferences.5 \
            ${build}/docs/sources.list.5 \
            ${build}/docs/vendors.list.5 \
                ${mandest}/man5/

    # Other docs:
    set docdir ${destroot}${prefix}/share/doc/apt
    xinstall -d ${docdir}
    xinstall -W ${worksrcpath} -m 644 AUTHORS COMPILING COPYING COPYING.GPL  README.make ${docdir}
    xinstall -W ${worksrcpath}/doc -m 644 Bugs libapt-pkg2_to_3.txt style.txt ${docdir}
    xinstall -d ${docdir}/debian
    xinstall -W ${worksrcpath}/debian -m 644 changelog NEWS.Debian ${docdir}/debian

    # Install configuration files:
    set confdest ${destroot}${prefix}/etc/apt/apt.conf.d
    file mkdir ${confdest}
    xinstall -m 644 ${filespath}/sources.list ${destroot}${prefix}/etc/apt/sources.list
    xinstall -m 644 ${worksrcpath}/build/docs/examples/apt.conf ${destroot}${prefix}/etc/apt/apt.conf

    # Create var directories:
    file mkdir ${destroot}${prefix}/var/db/apt/cache/archives/partial
    file mkdir ${destroot}${prefix}/var/db/apt/state/lists/partial
    xinstall -d ${destroot}${prefix}/var/lib/apt/lists/partial
    destroot.keepdirs-append ${destroot}${prefix}/var/lib/apt/lists/partial
    xinstall -d ${destroot}${prefix}/var/cache/apt/archives/partial
    destroot.keepdirs-append ${destroot}${prefix}/var/cache/apt/archives/partial
}
# ...

post-activate {
    set vardpkg ${prefix}/var/db/dpkg
    set cmethoptfile ${vardpkg}/cmethopt
    if {[file isdirectory ${vardpkg}]} {
        ui_debug "checking ${vardpkg} for dselect method file"
        if {![file exists ${cmethoptfile}]} {
            system "echo \"apt apt\" > ${cmethoptfile}"
            file attributes ${cmethoptfile} -permissions 644
        }
    }
}

#livecheck currently fails... 0.5.27 is newer than what fink uses
# (they use 0.5.4 still), so I have no idea how we are able to fetch a
# newer version than what they use from their mirrors... According to
# debian upstream, the last version in the 0.5.x series was 0.5.32, and, as
# of April 2014, the current versions were:
#  oldstable 0.8.10.3
#  stable 0.9.7.9
#  testing 0.9.16.1
#  unstable 1.0

