# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 102342 2013-01-31 17:22:53Z ryandesign@macports.org $

PortSystem          1.0

name                MacPorts
version             2.1.3
revision            1

categories          sysutils macports
platforms           darwin freebsd
maintainers         lists.macosforge.org:macports-mgr
license             BSD

description         The ${name} Infrastructure
long_description \
   ${name} provides the infrastructure that allows easy installation and \
   management of freely available software on Mac OS X 10.4 or newer systems.

notes "This port cannot directly be used to upgrade ${name}; use 'port\
selfupdate' for that."

homepage            http://www.macports.org/
master_sites        sourceforge:project/macports/${name}/${version}
# testing subdir is for non-final releases only
#dist_subdir         ${name}/testing
use_bzip2           yes

checksums           rmd160 ef4acbf38d1a2261d878d30c9c5e85953e1a3d1f \
                    sha256 db1205f30747d0cf6ff96709fe121f077575eea4f6d181796c14f22e35086999

variant keep_prefix description "Use configured prefix instead of enforcing /opt/local" {}
if {![variant_isset keep_prefix]} {
    prefix          /opt/local
}

variant mp_deps description "Use ports supplied by ${name} to fulfill missing dependencies" {
depends_build-append port:bsdmake \
                     port:bzr \
                     port:gpatch \
                     port:mercurial \
                     path:bin/xz:xz \
                     port:swig-tcl \
                     port:gnustep-make \
                     port:gnustep-make-cocoa
configure.env-append BSDMAKE=${prefix}/bin/bsdmake \
                     BZR=${prefix}/bin/bzr \
                     GPATCH=${prefix}/bin/gpatch \
                     GNUPATCH=${prefix}/bin/gpatch \
                     HG=${prefix}/bin/hg \
                     LZMA=${prefix}/bin/lzma \
                     SWIG=${prefix}/bin/swig \
                     XZ=${prefix}/bin/xz \
                     GNUSTEP_SYSTEM_ROOT=${prefix}/GNUstep/System \
                     PATH=${prefix}/bin:/usr/bin:/bin:/usr/sbin:/sbin
configure.args-append --prefix=${prefix}
}

variant mp_shadow_deps requires mp_deps description "Use ports supplied by ${name} as dependencies, even if they shadow standard OS X system tools" {
depends_build-append port:bzip2 \
                     port:cpio \
                     port:cvs \
                     port:diffutils \
                     port:ed \
                     port:file \
                     port:gawk \
                     port:git-core \
                     port:gsed \
                     port:cctools \
                     port:gnutar \
                     port:gzip \
                     port:md5sha1sum \
                     port:openssl \
                     port:rsync \
                     port:subversion \
                     port:unzip \
                     path:bin/xar:xar \
                     port:zip
depends_lib-append   port:tclcurl \
                     port:tcl-sqlite3 \
                     port:tclreadline \
                     port:tcllib
    pre-configure {
        ui_msg "Warning: Using this variant could possibly be dangerous, as libraries might cause breakages with upgrades."
    }
configure.env-append BZIP2=${prefix}/bin/bzip2 \
                     CVS=${prefix}/bin/cvs \
                     FILE=${prefix}/bin/file \
                     GIT=${prefix}/bin/git \
                     GNUTAR=${prefix}/bin/gnutar \
                     GZIP=${prefix}/bin/gzip \
                     LIPO=${prefix}/bin/lipo \
                     OPENSSL=${prefix}/bin/openssl \
                     RSYNC=${prefix}/bin/rsync \
                     SVN=${prefix}/bin/svn \
                     UNZIP=${prefix}/bin/unzip \
                     XAR=${prefix}/bin/xar \
                     ZIP=${prefix}/bin/zip \
                     PATH=${prefix}/bin:${prefix}/sbin:/usr/bin:/bin:/usr/sbin:/sbin
configure.args-append --with-curlprefix=${prefix} \
                      --with-tcl=${prefix}/lib \
                      --with-tclinclude=${prefix}/include \
                      --with-sqlite3prefix=${prefix} \
                      --with-frameworks-dir=${prefix}/Library/Frameworks
}

variant only_mp_deps requires mp_shadow_deps keep_prefix conflicts egallager description {Makes MacPorts entirely self-hosting} {
    PortGroup            archcheck 1.0
    PortGroup            active_variants 1.1
    depends_build-append port:coreutils \
                         port:grep \
                         port:gwhich \
                         port:launch \
                         port:gmake \
                         port:man \
                         port:p5.12-lchown \
                         port:p5.12-file-chdir \
                         port:cdsclient \
                         port:cmdftp \
                         port:mdf2iso \
                         port:mtr \
                         port:osxbom \
                         port:pkgconfig \
                         port:bash
    depends_lib-append   port:tcl
    depends_skip_archcheck man cdsclient osxbom
    require_active_variants osxbom "" rename
    set prefix           ${prefix}
    post-extract {
        reinplace "s|\[\$PATH\]\:/usr/sbin|\[\]|" ${worksrcpath}/configure.ac
        reinplace "s|\[\$PATH\]\:/usr/local/bin|\[\]|" ${worksrcpath}/configure.ac
    }
    use_autoconf         yes
    pre-configure {
        system "echo \"prefix is ${prefix}\""
        system -W ${worksrcpath} "ln -sv `which grep` ."
        reinplace "s|grep \-v|${prefix}/bin/grep \-v|" ${worksrcpath}/configure
        system -W ${worksrcpath} "ln -sv `which gzip` ."
        system -W ${worksrcpath} "ln -sv `which gmake` ."
        system -W ${worksrcpath} "export PATH=${prefix}/bin:${prefix}/sbin:${prefix}/libexec/gnubin:${prefix}/libexec/texbin"
    }
    configure.env-delete PATH=${prefix}/bin:${prefix}/sbin:/usr/bin:/bin:/usr/sbin:/sbin
    configure.env-append PATH=${prefix}/bin:${prefix}/sbin:${prefix}/libexec/gnubin:${prefix}/libexec/texbin \
                         GREP=${prefix}/bin/grep \
                         EGREP='${prefix}/bin/grep -E' \
                         OPEN=${prefix}/bin/launch \
                         MAKE=${prefix}/bin/gmake \
                         GMAKE=${prefix}/bin/gmake \
                         GNUMAKE=${prefix}/bin/gmake \
                         TCLSH=${prefix}/bin/tclsh \
                         STLIB_LD=${prefix}/bin/ar \
                         LSBOM=${prefix}/lsbom \
                         ECHO=${prefix}/libexec/gnubin/echo \
                         CPPFLAGS=-I${prefix}/include \
                         PKG_CONFIG=${prefix}/bin/pkg-config \
                         SHELL=${prefix}/bin/bash \
                         SQLITE3_TCL_DIR=${prefix}/lib/sqlite3
    pre-build {
        reinplace "s|gzip|${prefix}/bin/gzip|" ${worksrcpath}/Makefile
        reinplace "s|gzip|${prefix}/bin/gzip|" ${worksrcpath}/doc/Makefile
        reinplace "s|\$\{STLIB_LD\}|${prefix}/bin/ar|" ${worksrcpath}/src/cregistry/Makefile
    }
    build.env-append     ${configure.env}
    use_parallel_build   no
    build.cmd            ${prefix}/bin/gmake
    build.args
    build.pre_args
    build.post_args
    build.target         src
}

variant docs requires mp_deps description "Builds documentation" {
    depends_build-append port:tcl-dox \
                         port:tcldoc \
                         path:bin/doxygen:doxygen
    pre-build {
        system -W ${worksrcpath} "doxygen -u"
    }
    build.target-append tcldox
    #build.target-append tcldoc
    post-destroot {
        xinstall -d ${destroot}${prefix}/share/doc/${name}
        xinstall ${worksrcpath}/doc/INTERNALS ${destroot}${prefix}/share/doc/${name}
        xinstall -d ${destroot}${prefix}/share/doc/${name}/tcl-dox
        foreach doc [glob ${worksrcpath}/tcldox/*] {
            xinstall ${doc} ${destroot}${prefix}/share/doc/${name}/tcl-dox
        }
    }
}

variant mp_bundle requires mp_deps description "Adds other ports related to ${name}" {
depends_build-append port:cpan2port \
                     port:macports-notifier \
                     port:MacPorts_Framework \
                     port:macportsscripts \
                     port:mpvim \
                     port:Pallet \
                     port:port-depgraph \
                     port:port_cutleaves \
                     port:portfile-gen \
                     port:pearl \
                     port:ghsum \
                     port:useful-ports \
                     port:port-whatsnew
}
variant egallager requires mp_shadow_deps description "Uses my personal fork of MacPorts" {
    PortGroup                github 1.0
    PortGroup                archcheck 1.0

    set oldname              ${name}
    github.setup             cooljeanius ${name}-fork ${version}ebg_2 v
    set name                 ${oldname}

    fetch.type               git
    git.url                  git://github.com/cooljeanius/${name}-fork.git
    depends_build-append     port:autoconf-archive \
                             port:dylibbundler \
                             port:symlinks \
                             path:bin/bison:bison \
                             path:bin/dmalloc:dmalloc \
                             path:bin/perl:perl5 \
                             path:bin/python:python_select \
                             path:bin/javac:jikes \
                             path:bin/guavac:google-guava \
                             path:bin/ecj:eclipse-ecj32 \
                             path:bin/gcj:swig-gcj \
                             path:bin/gcc:gcc_select \
                             path:bin/flex:flex
    #depends_lib-append      port:tcLex port:readline
    depends_skip_archcheck   kaffe eclipse-ecj32 google-guava
    use_autoconf             yes
    configure.args-append    --enable-readline
}

if {![variant_isset mp_deps]} {
    # We don't want to use anything supplied by ports when building MacPorts itself
    # (unless the user requests the variant specifying otherwise, that is)
    configure.env            PATH=/usr/bin:/bin:/usr/sbin:/sbin

    # Readline is disabled by default to avoid support issues with people who
    # have a readline in /usr/local. Since this portfile is presumably used in a
    # clean environment (if not using the mp_deps variant), enable it here.
    configure.args-append    --enable-readline
}

# Some of MacPorts' default flags don't play well when we're building MacPorts
# itself; nuke them.
configure.cppflags
configure.ldflags
configure.cc_archflags
configure.objc_archflags
configure.ld_archflags
compiler.cpath
compiler.library_path

# It's better to not use ccache, to avoid problems in general.
configure.ccache no

post-destroot {
    # Only install .default versions of config files.
    delete ${destroot}${prefix}/etc/macports/archive_sites.conf
    delete ${destroot}${prefix}/etc/macports/macports.conf
    delete ${destroot}${prefix}/etc/macports/pubkeys.conf
    delete ${destroot}${prefix}/etc/macports/sources.conf
    delete ${destroot}${prefix}/etc/macports/variants.conf
}

if {![info exists package.resources]} {
    set package.resources ${workpath}/pkg_resources
    set package.scripts   ${workpath}/pkg_resources
} elseif {!${package.flat}} {
    package.scripts   ${package.resources}
}
set resources_lang ${package.resources}/English.lproj

pre-pkg {
    file copy -force -- ${worksrcpath}/portmgr/dmg/ReadMe.rtf ${resources_lang}
    file copy -force -- ${worksrcpath}/portmgr/dmg/License.html ${resources_lang}
    file copy -force -- ${worksrcpath}/portmgr/dmg/postflight ${package.scripts}
    file copy -force -- ${worksrcpath}/src/upgrade_sources_conf_default.tcl ${package.scripts}
    file copy -force -- ${worksrcpath}/src/images_to_archives.tcl ${package.scripts}

    file attributes ${package.scripts}/postflight -permissions 0755
    file attributes ${package.scripts}/upgrade_sources_conf_default.tcl -permissions 0755
    file attributes ${package.scripts}/images_to_archives.tcl -permissions 0755
    file attributes ${resources_lang}/ReadMe.rtf -permissions 0644
    file attributes ${resources_lang}/License.html -permissions 0644

    reinplace "s|__PREFIX__|${prefix}|g" \
              ${package.scripts}/postflight \
              ${resources_lang}/ReadMe.rtf
    reinplace "s|is built|contains a Universal installer|" ${resources_lang}/ReadMe.rtf
    reinplace "s|__XVERS__|${macosx_deployment_target}|" ${resources_lang}/ReadMe.rtf
    if {${package.flat}} {
        file copy -force -- ${worksrcpath}/portmgr/dmg/Distribution ${workpath}
        file attributes ${workpath}/Distribution -permissions 0644
        reinplace "s|__PREFIX__|${prefix}|g" ${workpath}/Distribution
        switch $macosx_deployment_target {
            10.4    {set xcode_cli "Command Line Support"}
            10.5    -
            10.6    {set xcode_cli "UNIX Development"}
            default {set xcode_cli "Command Line Tools or UNIX Development"}
        }
        reinplace "s|__XCODECLITOOLS__|${xcode_cli}|g" ${workpath}/Distribution
        reinplace "s|__XVERS__|${macosx_deployment_target}|" ${workpath}/Distribution
        set next_major [lindex [split $macosx_deployment_target .] 0].[expr [lindex [split $macosx_deployment_target .] 1] + 1]
        reinplace "s|__NEXT_XVERS__|$next_major|" ${workpath}/Distribution
        reinplace "s|__VERSION__|${version}|" ${workpath}/Distribution
        move ${package.scripts}/postflight ${package.scripts}/postinstall
    } else {
        file copy -force -- ${worksrcpath}/portmgr/dmg/InstallationCheck ${package.resources}
        file copy -force -- ${worksrcpath}/portmgr/dmg/InstallationCheck.strings ${resources_lang}
        file attributes ${package.resources}/InstallationCheck -permissions 0755
        file attributes ${resources_lang}/InstallationCheck.strings -permissions 0644
        reinplace "s|__PREFIX__|${prefix}|g" \
              ${package.resources}/InstallationCheck
        reinplace "s|__DARWINVERS__|${os.major}|" ${package.resources}/InstallationCheck
        reinplace "s|__XVERS__|${macosx_deployment_target}|" \
            ${resources_lang}/InstallationCheck.strings
    }
    # won't be there before the pkg is built with older base versions
    if {[file isfile ${resources_lang}/Welcome.html]} {
        reinplace "s|or newer ||" ${resources_lang}/Welcome.html
        if {${os.major} > 8} {
            reinplace "s|10\\.4|${macosx_deployment_target}|" ${resources_lang}/Welcome.html
        }
    }
}

post-pkg {
    # for older base versions
    set lproj ${workpath}/${name}-${version}.pkg/Contents/Resources/English.lproj
    if {[file isfile ${lproj}/Welcome.html]} {
        reinplace "s|or newer ||" ${lproj}/Welcome.html
        if {${os.major} > 8} {
            reinplace "s|10\\.4|${macosx_deployment_target}|" ${lproj}/Welcome.html
        }
    }
}

platform darwin 8 powerpc {
    pre-configure {
        set sdkrootpath /Developer/SDKs/MacOSX10.4u.sdk
        if {[file exists ${sdkrootpath}]} {
            # User has SDK installed.
            set tclstubpath /System/Library/Frameworks/Tcl.framework/Versions/8.4/libtclstub8.4.a
            if {![file exists ${sdkrootpath}${tclstubpath}]} {
                ui_msg "Fixing your MacOSX10.4u installation by copying libtclstub8.4.a to ${sdkrootpath}${tclstubpath}"
                xinstall -p ${tclstubpath} ${sdkrootpath}${tclstubpath}
            }
            # Supply architecture and sysroot flags to build MacPorts universal.
            configure.cflags-append -isysroot ${sdkrootpath} -arch ppc -arch i386
            configure.env-append SHLIB_LDFLAGS='-Wl,-syslibroot,${sdkrootpath} -arch ppc -arch i386'
        }
    }
}

platform darwin 8 i386 {
    # Supply architecture flags to build MacPorts universal.
    configure.cflags-append -arch ppc -arch i386
    configure.args-append SHLIB_LDFLAGS='-arch ppc -arch i386'
}

platform darwin 9 {
    # Supply architecture flags to build MacPorts universal.
    configure.cflags-append -arch ppc -arch i386
    configure.args-append SHLIB_LDFLAGS='-arch ppc -arch i386'
}

platform darwin {
    if {${os.major} >= 10} {
        # Supply architecture flags to build MacPorts universal.
        configure.cflags-append -arch x86_64 -arch i386
        configure.args-append SHLIB_LDFLAGS='-arch x86_64 -arch i386'
    }
}

pre-destroot {
    xinstall -d ${destroot}${prefix}/var/macports/registry/portfiles
    xinstall -d ${destroot}${prefix}/var/macports/incoming/verified
}
destroot.violate_mtree yes
destroot.keepdirs    ${destroot}${prefix}/include \
                     ${destroot}${prefix}/lib \
                     ${destroot}${prefix}/libexec \
                     ${destroot}${prefix}/sbin \
                     ${destroot}${prefix}/share/info \
                     ${destroot}${prefix}/share/man/cat1 \
                     ${destroot}${prefix}/share/man/cat2 \
                     ${destroot}${prefix}/share/man/cat3 \
                     ${destroot}${prefix}/share/man/cat4 \
                     ${destroot}${prefix}/share/man/cat5 \
                     ${destroot}${prefix}/share/man/cat6 \
                     ${destroot}${prefix}/share/man/cat7 \
                     ${destroot}${prefix}/share/man/cat8 \
                     ${destroot}${prefix}/share/man/cat9 \
                     ${destroot}${prefix}/share/man/catl \
                     ${destroot}${prefix}/share/man/catn \
                     ${destroot}${prefix}/share/man/man1 \
                     ${destroot}${prefix}/share/man/man2 \
                     ${destroot}${prefix}/share/man/man3 \
                     ${destroot}${prefix}/share/man/man4 \
                     ${destroot}${prefix}/share/man/man5 \
                     ${destroot}${prefix}/share/man/man6 \
                     ${destroot}${prefix}/share/man/man7 \
                     ${destroot}${prefix}/share/man/man8 \
                     ${destroot}${prefix}/share/man/man9 \
                     ${destroot}${prefix}/share/man/manl \
                     ${destroot}${prefix}/share/man/mann \
                     ${destroot}${prefix}/share/nls/C \
                     ${destroot}${prefix}/share/nls/skel \
                     ${destroot}${prefix}/share/nls/af_ZA.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/af_ZA.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/bg_BG.CP1251 \
                     ${destroot}${prefix}/share/nls/cs_CZ.ISO8859-2 \
                     ${destroot}${prefix}/share/nls/da_DK.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/da_DK.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/de_AT.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/de_AT.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/de_CH.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/de_CH.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/de_DE.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/de_DE.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/el_GR.ISO8859-7 \
                     ${destroot}${prefix}/share/nls/en_AU.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/en_AU.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/en_AU.US-ASCII \
                     ${destroot}${prefix}/share/nls/en_CA.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/en_CA.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/en_CA.US-ASCII \
                     ${destroot}${prefix}/share/nls/en_GB.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/en_GB.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/en_GB.US-ASCII \
                     ${destroot}${prefix}/share/nls/en_NZ.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/en_NZ.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/en_NZ.US-ASCII \
                     ${destroot}${prefix}/share/nls/en_US.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/en_US.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/es_ES.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/es_ES.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/et_EE.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/fi_FI.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/fi_FI.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/fr_BE.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/fr_BE.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/fr_CA.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/fr_CA.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/fr_CH.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/fr_CH.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/fr_FR.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/fr_FR.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/hi_IN.ISCII-DEV \
                     ${destroot}${prefix}/share/nls/hr_HR.ISO8859-2 \
                     ${destroot}${prefix}/share/nls/hu_HU.ISO8859-2 \
                     ${destroot}${prefix}/share/nls/is_IS.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/is_IS.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/it_CH.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/it_CH.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/it_IT.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/it_IT.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/ja_JP.SJIS \
                     ${destroot}${prefix}/share/nls/ja_JP.eucJP \
                     ${destroot}${prefix}/share/nls/ko_KR.eucKR \
                     ${destroot}${prefix}/share/nls/la_LN.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/la_LN.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/la_LN.ISO8859-2 \
                     ${destroot}${prefix}/share/nls/la_LN.ISO8859-4 \
                     ${destroot}${prefix}/share/nls/la_LN.US-ASCII \
                     ${destroot}${prefix}/share/nls/lt_LT.ISO8859-4 \
                     ${destroot}${prefix}/share/nls/nl_BE.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/nl_BE.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/nl_NL.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/nl_NL.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/no_NO.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/no_NO.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/pl_PL.ISO8859-2 \
                     ${destroot}${prefix}/share/nls/pt_BR.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/pt_PT.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/pt_PT.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/ro_RO.ISO8859-2 \
                     ${destroot}${prefix}/share/nls/ru_RU.CP866 \
                     ${destroot}${prefix}/share/nls/ru_RU.ISO8859-5 \
                     ${destroot}${prefix}/share/nls/ru_RU.KOI8-R \
                     ${destroot}${prefix}/share/nls/sk_SK.ISO8859-2 \
                     ${destroot}${prefix}/share/nls/sl_SI.ISO8859-2 \
                     ${destroot}${prefix}/share/nls/sv_SE.ISO8859-1 \
                     ${destroot}${prefix}/share/nls/sv_SE.ISO8859-15 \
                     ${destroot}${prefix}/share/nls/tr_TR.ISO8859-9 \
                     ${destroot}${prefix}/share/nls/uk_UA.ISO8859-5 \
                     ${destroot}${prefix}/share/nls/uk_UA.KOI8-U \
                     ${destroot}${prefix}/share/nls/zh_CN.eucCN \
                     ${destroot}${prefix}/share/nls/zh_TW.Big5 \
                     ${destroot}${prefix}/var/macports/build \
                     ${destroot}${prefix}/var/macports/distfiles \
                     ${destroot}${prefix}/var/macports/registry \
                     ${destroot}${prefix}/var/macports/registry/portfiles \
                     ${destroot}${prefix}/var/macports/incoming/verified
