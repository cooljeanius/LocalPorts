# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem            1.0
PortGroup             archcheck 1.0

name                  scilab
version               5.4.1
revision              2
categories            science
platforms             darwin
maintainers           debian.org:sylvestre gwmail.gwu.edu:egall openmaintainer
license               cecill

description           open source software for numerical computation

long_description      ${name} is ${description}.

homepage              http://www.${name}.org/
master_sites          ${homepage}download/${version}/
distname              ${name}-${version}-src

checksums             md5     5f8746053d645c0d7f220d42d3463f2d \
                      sha1    594b4a7ef6d8934347e38bf777625857582493c4 \
                      rmd160  8902d19af0c94ba22d6ff0062b09974df1b2e8c2 \
                      sha256  f63db4de7daeb68409644b2c32888af4f0bb0ca7ede9c3857f4ccb6289ea861c

worksrcdir            ${name}-${version}

patchfiles-append     patch-macosx.m4.diff
# commented out until it applies against the new version:
#                     patch-configure.ac.diff

post-patch {
    reinplace "s|m4\/|m4|" ${worksrcpath}/Makefile.am
    reinplace "s|m4\/|m4|" ${worksrcpath}/configure.ac
    # trick the script into thinking MacPorts is Fink, until the patch
    # for the configure.ac file applies properly again
    reinplace "s|FINK_PREFIX\=\"\/sw\/\"|FINK_PREFIX\=\"${prefix}\"|g" ${worksrcpath}/configure.ac
    reinplace "s|\$\(top_srcdir\)|${worksrcpath}|" ${worksrcpath}/Makefile.am
    # run glibtoolize before autoreconf runs it, to silence some
    # warnings from aclocal
    system -W ${worksrcpath} "glibtoolize --copy --automake --force"
}

use_autoconf          yes
autoconf.args         --force

# Too many things that Scilab depends on are not universal
universal_variant     no

depends_build-append  port:pkgconfig \
                      port:imake \
                      port:gawk \
                      port:grep \
                      port:intltool \
                      port:apache-ant \
                      port:junit \
                      path:bin/splint:splint \
                      path:bin/fop:fop

# Most of these are taken from Fink's list of dependencies
depends_lib-append    port:libgtkhtml \
                      port:readline \
                      port:tcl \
                      port:tk \
                      port:vte \
                      port:Xaw3d \
                      port:atlas \
                      port:atk \
                      path:lib/pkgconfig/cairo.pc:cairo \
                      port:fontconfig \
                      port:freetype \
                      port:gettext \
                      path:lib/pkgconfig/glib-2.0.pc:glib2 \
                      port:glitz \
                      port:gtk2 \
                      port:libiconv \
                      port:libpng \
                      path:lib/pkgconfig/pango.pc:pango \
                      path:lib/pkgconfig/pixman-1.pc:libpixman \
                      port:libxml2 \
                      port:ncurses \
                      port:xorg-libX11 \
                      port:sablotron \
                      port:pcre \
                      path:lib/pkgconfig/fftw3.pc:fftw-3 \
                      path:lib/libhdf5.dylib:hdf5-18 \
                      path:lib/pkgconfig/eigen3.pc:eigen3 \
                      port:xz \
                      port:zlib

depends_run-append    port:dia

configure.args-append --without-tk \
                      --with-tcl-include=${prefix}/include \
                      --with-tcl-library=${prefix}/lib \
                      --without-modelica \
                      --without-javasci \
                      --disable-ccache \
                      --disable-debug-java \
                      --disable-build-swig \
                      --disable-build-giws \
                      --without-gui \
                      --with-x \
                      --x-includes=${prefix}/include \
                      --x-libraries=${prefix}/lib \
                      --disable-build-help \
                      --without-openmp \
                      --without-arpack-ng \
                      --without-umfpack \
                      --with-pcre=${prefix} \
                      --without-gfortran \
                      --with-hdf5-include=${prefix}/include \
                      --with-hdf5-library=${prefix}/lib \
                      --disable-dependency-tracking \
                      --without-matio \
                      --with-libiconv-prefix=${prefix} \
                      --with-libintl-prefix=${prefix} \
                      --with-ant=${prefix}

configure.ldflags-append \
                      -llapack \
                      -latlas \
                      -lblas

platform macosx {
    configure.ldflags-append \
                      "-framework Accelerate"
}

# ccache support has been removed because:
# ccache: FATAL: Recursive invocation (the name of the ccache binary must be "ccache")
if {[tbool configure.ccache]} {
    configure.ccache no
}

# ./configure --help said these were influential environment variables
configure.env-append XMKMF=${prefix}/bin/xmkmf \
                     PCRE_LIBS=-L${prefix}/lib -lpcreposix -lpcre

configure.pkg_config ${prefix}/bin/pkg-config

# This is to disable checking for jgraphx, which MacPorts does not have yet
# (it has just "jgraph" without the "x", but I think that is different)
configure.env-append XCOS_ENABLE="no"

# gcc is needed for gfortran
# so therefore we shall use the "fortran recipe"
set gcc_versions {4.3 4.4 4.5 4.6 4.7 4.8 4.9}
set default_fortran_variant +gcc48
set g95_conflicts {}

foreach ver ${gcc_versions} {
    set ver_no_dot [join [split ${ver} "."] ""]

    set variant_line {variant gcc${ver_no_dot} description "build with gfortran from gcc${ver_no_dot}" conflicts g95}

    foreach over ${gcc_versions} {
        if {${ver} == ${over}} {
            continue
        }

        set over_no_dot [join [split ${over} "."] ""]
        append variant_line " conflicts gcc${over_no_dot}"
    }
    append variant_line { {}}

    eval $variant_line

    append g95_conflicts " conflicts gcc${ver_no_dot}"

    if {[variant_isset gcc${ver_no_dot}]} {
        if {${default_fortran_variant} != "+gcc${ver_no_dot}"} {
            set default_fortran_variant ""
        }
    }
}

eval [concat {variant g95 description {build with g95}} $g95_conflicts {{}}]

if {[variant_isset g95]} {
    if {${default_fortran_variant} != "+g95"} {
        set default_fortran_variant ""
    }
}

if {${default_fortran_variant} != ""} {
    default_variants-append "${default_fortran_variant}"
}

foreach ver ${gcc_versions} {
    set ver_no_dot [join [split ${ver} "."] ""]

    if {[variant_isset gcc${ver_no_dot}]} {
        depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
        depends_build-append port:gcc${ver_no_dot}

        configure.args-delete --without-gfortran
        configure.args-append --with-gfortran \
                              --with-gcc

        configure.ldflags-append -L${prefix}/lib/libgcc -lgcc

        configure.fc  ${prefix}/bin/gfortran-mp-${ver}
        configure.f77 ${prefix}/bin/gfortran-mp-${ver}
        configure.f90 ${prefix}/bin/gfortran-mp-${ver}
    }
}

if {[variant_isset g95]} {
    depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
    depends_build-append port:g95

    configure.args-delete --without-gfortran
    configure.args-append --with-gfortran

    configure.fc ${prefix}/bin/g95
    configure.f77 ${prefix}/bin/g95
    configure.f90 ${prefix}/bin/g95
}

variant ocaml description {Build OCaml module (modelica)} {
    depends_lib-append  port:ocaml \
                        port:swig-ocaml
    configure.args-delete --without-modelica \
                          --disable-build-swig \
                          --disable-build-giws
    configure.args-append --with-modelica
}

#TODO: fix livecheck
