# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem            1.0
PortGroup             archcheck 1.0
PortGroup             active_variants 1.1

name                  scilab
version               5.4.1
revision              6
categories            science
platforms             macosx
maintainers           debian.org:sylvestre gwmail.gwu.edu:egall openmaintainer
license               cecill

description           open source software for numerical computation

long_description      ${name} is ${description}.

homepage              http://www.${name}.org/
master_sites          ${homepage}download/${version}/
distfiles             ${name}-${version}-src-repack1.tar.gz \
                      prerequirements-${name}-${version}-x86_64-src.dmg

checksums           scilab-5.4.1-src-repack1.tar.gz \
                    md5     00a78bd58903c50000a28e50ff652000 \
                    sha1    814fd9ff488b153a95621c297cca097d85758e1f \
                    rmd160  bfd47dc9e20128d812b9ac5a7ce0f33b67a0d041 \
                    sha256  e58eafab87575f8c85d62250a6ab30f80d356293121e2748886ea70b3aa0680e \
                    size    64956349 \
                    prerequirements-scilab-5.4.1-x86_64-src.dmg \
                    md5     0fa4b4d7f73a002a81fbf071a311963b \
                    sha1    8d8bc9f9e3a63ca1087dabff2bd6db9501f8ed4c \
                    rmd160  d00b40aa25bd4b2a4cf882fca35ae67ae1030367 \
                    sha256  e73024561b2ab20e8c3491efca2c0f9a69edd52d1d2c31e99e4b7fed1627507a \
                    size    36790230

extract.only          ${name}-${version}-src-repack1.tar.gz

worksrcdir            ${name}-${version}

patchfiles-append     patch-macosx.m4.diff \
                      patch-configure.ac.diff \
                      patch-Makefile.am.diff \
                      patch-modules-Makefile.am.diff

post-patch {
    if {![file isfile ${filespath}/patch-Makefile.am.diff]} {
        reinplace "s|m4\/|m4|" ${worksrcpath}/Makefile.am
    }
    if {![file isfile ${filespath}/patch-configure.ac.diff]} {
        reinplace "s|m4\/|m4|" ${worksrcpath}/configure.ac
        # Trick the script into thinking MacPorts is Fink, until the patch
        # for the configure.ac file applies properly again:
        reinplace "s|FINK_PREFIX\=\"\/sw\/\"|FINK_PREFIX\=\"${prefix}\"|g" ${worksrcpath}/configure.ac
    }
    # Fix an issue I had with the Makefile using $(top_srdir) in a way
    # that somehow messed up...
    reinplace "s|\$\(top_srcdir\)|${worksrcpath}|" ${worksrcpath}/Makefile.am
    # Run glibtoolize before autoreconf runs it, to silence some
    # warnings from aclocal:
    ui_debug "running '${prefix}/bin/glibtoolize --copy --automake --force' in ${worksrcpath}"
    system -W ${worksrcpath} "${prefix}/bin/glibtoolize --copy --automake --force"
    xinstall ${prefix}/share/aclocal/autobuild.m4 ${worksrcpath}/m4
    xinstall ${prefix}/share/aclocal/ax_check_gnu_make.m4 ${worksrcpath}/m4
    xinstall ${prefix}/share/aclocal/bakefile.m4 ${worksrcpath}/m4
    xinstall ${prefix}/share/aclocal/cmake.m4 ${worksrcpath}/m4
    xinstall ${prefix}/share/aclocal/pkg.m4 ${worksrcpath}/m4
    xinstall ${prefix}/share/aclocal/xorg-macros.m4 ${worksrcpath}/m4
    if {![file exists ${worksrcpath}/po]} {
        xinstall -d ${worksrcpath}/po
    }
    xinstall ${filespath}/Makevars.in ${worksrcpath}/po
    xinstall ${filespath}/POTFILES.in ${worksrcpath}/po
    if {[file exists ${prefix}/share/gettext/gettext.h]} {
        xinstall ${prefix}/share/gettext/gettext.h ${worksrcpath}
    }
}

use_autoreconf        yes
autoreconf.args       -fvi -Wall

# Too many things that Scilab depends on are not universal:
universal_variant     no
# The prerequirements dmg only says x86_64, so assume that that is the only
# supported arch:
supported_archs       x86_64

# Some of these build deps will only be needed once I add a test phase,
# and then only until http://trac.macports.org/ticket/38208 is resolved.
depends_build-append  port:pkgconfig \
                      port:intltool \
                      port:docbook-xsl \
                      port:checkstyle \
                      port:cobertura \
                      port:commons-logging \
                      port:junit \
                      port:objectweb-asm \
                      port:saxon \
                      port:saxpath \
                      port:SuiteSparse \
                      path:bin/xmkmf:imake \
                      path:bin/ant:apache-ant \
                      path:share/aclocal/autobuild.m4:autobuild \
                      path:share/aclocal/ax_check_gnu_make.m4:autoconf-archive \
                      path:share/aclocal/bakefile.m4:bakefile \
                      path:share/aclocal/cmake.m4:cmake \
                      path:share/aclocal/xorg-macros.m4:xorg-util-macros \
                      path:share/java/antlr.jar:antlr3 \
                      bin:antlr:antlr \
                      bin:astyle:astyle \
                      bin:doxygen:doxygen \
                      bin:dot:graphviz \
                      bin:fop:fop \
                      bin:gawk:gawk \
                      bin:grep:grep \
                      bin:runtest:dejagnu \
                      bin:splint:splint \
                      bin:xmlindent:xmlindent

# Most of these library deps are taken from Fink's list of dependencies
# for Scilab (some were from the outdated version of the Fink package):
depends_lib-append    port:readline \
                      port:tcl \
                      port:atlas \
                      port:gettext \
                      path:lib/pkgconfig/glib-2.0.pc:glib2 \
                      port:libiconv \
                      port:libpng \
                      port:libtool \
                      port:libxml2 \
                      port:ncurses \
                      port:xorg-libX11 \
                      port:pcre \
                      path:lib/pkgconfig/fftw3.pc:fftw-3 \
                      path:lib/libhdf5.dylib:hdf5 \
                      path:lib/pkgconfig/eigen3.pc:eigen3 \
                      port:xz \
                      port:zlib \
                      port:matio

# Needed for some of the data files:
depends_run-append    bin:dia:dia

pre-configure {
    if {![file exists ${worksrcpath}/bin]} {
        xinstall -d ${worksrcpath}/bin
    }
    if {![file exists ${worksrcpath}/thirdparty]} {
        xinstall -d ${worksrcpath}/thirdparty
    }
    if {![file exists ${worksrcpath}/mountpoint]} {
        xinstall -d ${worksrcpath}/mountpoint
    }
    system -W ${worksrcpath} "hdiutil attach -mountroot mountpoint -nobrowse -noautoopen ${distpath}/prerequirements-${name}-${version}-x86_64-src.dmg"
    ui_debug "Copying prerequirements from dmg..."
    # Use "copy" instead of "xinstall" here because of folders
    copy {*}[glob ${worksrcpath}/mountpoint/${name}-${version}/thirdparty/*] ${worksrcpath}/thirdparty
    copy {*}[glob ${worksrcpath}/mountpoint/${name}-${version}/bin/*] ${worksrcpath}/bin
    ui_debug "Done copying prerequirements."
    system -W ${worksrcpath} "hdiutil detach mountpoint/${name}-${version}"
    xinstall ${prefix}/share/gettext/gettext.jar ${worksrcpath}/thirdparty
    xinstall {*}[glob ${prefix}/share/java/antlr*.jar] ${worksrcpath}/thirdparty
    xinstall {*}[glob ${prefix}/share/java/*asm*.jar] ${worksrcpath}/thirdparty
    xinstall {*}[glob ${prefix}/share/java/checkstyle*.jar] ${worksrcpath}/thirdparty
    xinstall {*}[glob ${prefix}/share/java/commons-beanutils*.jar] ${worksrcpath}/thirdparty
    xinstall {*}[glob ${prefix}/share/java/commons-logging*.jar] ${worksrcpath}/thirdparty
    xinstall {*}[glob ${prefix}/share/java/sax*.jar] ${worksrcpath}/thirdparty
    xinstall {*}[glob ${prefix}/share/java/cobertura*.jar] ${worksrcpath}/thirdparty
    xinstall {*}[glob ${prefix}/share/java/junit*.jar] ${worksrcpath}/thirdparty
    configure.classpath-append [join [glob ${prefix}/share/java/*.jar] ":"]
    configure.classpath-append [join [glob ${worksrcpath}/thirdparty/*.jar] ":"]
    if {[file isdirectory ${prefix}/GNUstep/lib/GNUstep/Libraries/Java]} {
        configure.classpath-append ${prefix}/GNUstep/lib/GNUstep/Libraries/Java
    }
    ui_debug "configure.classpath will be displayed when displaying configuration environment."
    if {[active_variants path:lib/pkgconfig/eigen3.pc:eigen3 blas]} {
        configure.ldflags-append \
                      -leigen_blas
    }
}

configure.args-append --with-macports-prefix=${prefix} \
                      --without-tk \
                      --with-tcl-include=${prefix}/include \
                      --with-tcl-library=${prefix}/lib \
                      --without-modelica \
                      --without-javasci \
                      --disable-ccache \
                      --enable-debug-java \
                      --disable-build-swig \
                      --disable-build-giws \
                      --without-gui \
                      --with-x \
                      --x-includes=${prefix}/include \
                      --x-libraries=${prefix}/lib \
                      --disable-build-help \
                      --enable-build-doxygen \
                      --without-openmp \
                      --without-arpack-ng \
                      --with-umfpack-library=${prefix}/lib \
                      --with-umfpack-include=${prefix}/include \
                      --with-pcre=${prefix} \
                      --without-gfortran \
                      --with-hdf5-include=${prefix}/include \
                      --with-hdf5-library=${prefix}/lib \
                      --disable-dependency-tracking \
                      --with-libiconv-prefix=${prefix} \
                      --with-libintl-prefix=${prefix} \
                      --with-ant=${prefix} \
                      --with-matio-include=${prefix}/include \
                      --with-matio-library=${prefix}/lib \
                      --with-fop \
                      --with-lint \
                      --with-docbook=${prefix}/share/xsl/docbook-xsl \
                      --with-install-help-xml

configure.ldflags-append \
                      -llapack \
                      -latlas \
                      -lblas \
                      -lpng \
                      -lreadline \
                      -lX11

# ccache support has been removed because:
# ccache: FATAL: Recursive invocation (the name of the ccache binary must be "ccache")
if {[tbool configure.ccache]} {
    configure.ccache no
}

# ./configure --help said these were influential environment variables:
configure.env-append XMKMF=${prefix}/bin/xmkmf \
                     PCRE_LIBS=-L${prefix}/lib -lpcreposix -lpcre \
                     FOP=${prefix}/bin/fop

configure.pkg_config ${prefix}/bin/pkg-config

# This is to disable checking for jgraphx, which MacPorts does not have yet
# (it has just "jgraph" without the "x", but I think that is different)
configure.env-append XCOS_ENABLE="no"

# gcc is needed for gfortran
# so therefore we shall use the "fortran recipe"
set gcc_versions {4.3 4.4 4.5 4.6 4.7 4.8 4.9}
set default_fortran_variant +gcc48
set g95_conflicts {}

foreach ver ${gcc_versions} {
    set ver_no_dot [join [split ${ver} "."] ""]

    set variant_line {variant gcc${ver_no_dot} description "build with gfortran from gcc${ver_no_dot}" conflicts g95}

    foreach over ${gcc_versions} {
        if {${ver} == ${over}} {
            continue
        }

        set over_no_dot [join [split ${over} "."] ""]
        append variant_line " conflicts gcc${over_no_dot}"
    }
    append variant_line { {}}

    eval $variant_line

    append g95_conflicts " conflicts gcc${ver_no_dot}"

    if {[variant_isset gcc${ver_no_dot}]} {
        if {${default_fortran_variant} != "+gcc${ver_no_dot}"} {
            set default_fortran_variant ""
        }
    }
}

eval [concat {variant g95 description {build with g95}} $g95_conflicts {{}}]

if {[variant_isset g95]} {
    if {${default_fortran_variant} != "+g95"} {
        set default_fortran_variant ""
    }
}

if {${default_fortran_variant} != ""} {
    default_variants-append "${default_fortran_variant}"
}

foreach ver ${gcc_versions} {
    set ver_no_dot [join [split ${ver} "."] ""]

    if {[variant_isset gcc${ver_no_dot}]} {
        depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
        depends_build-append port:gcc${ver_no_dot}

        configure.args-delete --without-gfortran
        configure.args-append --with-gfortran \
                              --with-gcc

        configure.ldflags-append -L${prefix}/lib/libgcc -lgcc

        configure.fc  ${prefix}/bin/gfortran-mp-${ver}
        configure.f77 ${prefix}/bin/gfortran-mp-${ver}
        configure.f90 ${prefix}/bin/gfortran-mp-${ver}
    }
}

if {[variant_isset g95]} {
    depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
    depends_build-append port:g95

    configure.args-delete --without-gfortran
    configure.args-append --with-gfortran

    configure.fc ${prefix}/bin/g95
    configure.f77 ${prefix}/bin/g95
    configure.f90 ${prefix}/bin/g95
}

# warning: this variant is untested:
variant ocaml description {Build OCaml module (modelica)} {
    depends_lib-append  port:ocaml \
                        port:swig-ocaml
    configure.args-delete --without-modelica \
                          --disable-build-swig \
                          --disable-build-giws
    configure.args-append --with-modelica
}

#TODO: fix livecheck (then update to 5.5.3)
