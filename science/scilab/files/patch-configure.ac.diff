--- configure.ac.orig	2012-09-28 18:11:00.000000000 -0400
+++ configure.ac	2013-03-17 23:42:05.000000000 -0400
@@ -16,8 +16,8 @@
 
 AC_REVISION($Revision$)dnl
 AC_INIT([Scilab],[5],[http://bugzilla.scilab.org/])
-AC_PREREQ(2.62)
-AC_CONFIG_MACRO_DIR([m4/])
+AC_PREREQ([2.62])
+AC_CONFIG_MACRO_DIR([m4])
 
 SCI_BUILDDIR="`pwd`"
 SCI_SRCDIR="$srcdir"
@@ -60,7 +60,7 @@
    sleep 180
 fi
 
-AC_CONFIG_AUX_DIR(config)
+AC_CONFIG_AUX_DIR([config])
 AC_CONFIG_HEADERS([modules/core/includes/machine.h])
 
 # strip executable
@@ -145,15 +145,21 @@
 ########## compilator & misc programs detection
 ################################################
 
+AM_PROG_AR
+AC_PROG_AWK
 AC_PROG_CPP
 AC_PROG_GREP
+AC_PROG_INSTALL
+AC_PROG_MAKE_SET
+AC_PROG_MKDIR_P
+AC_PROG_RANLIB
 
 ######
-#### Mac OS X set of fink path with provided
+#### Mac OS X set of macports path with provided
 ######
 
-AC_ARG_WITH(fink_prefix,
-AC_HELP_STRING([--with-fink-prefix],[Provide a fink prefix. Default: /sw/ ]))
+AC_ARG_WITH([macports_prefix],
+AC_HELP_STRING([--with-macports-prefix],[Provide a macports prefix. Default: /opt/local ]))
 # Need MacosX Version to specify some path.                                  
 case "$host_os" in
      *Darwin* | *darwin*)
@@ -163,26 +169,20 @@
 
 case "$host" in
     *darwin*)
-        if test -n "$with_fink_prefix"; then
-            # If with-fink-prefix is provided, use the provided path to make sure that we will
+        if test -n "$with_macports_prefix"; then
+            # If with-macports-prefix is provided, use the provided path to make sure that we will
             # use it to detect dependencies (for example, gfortran is not provided in xcode.
-            # Therefor, we use the one in fink)
-            FINK_PREFIX="$with_fink_prefix/"
+            # Therefor, we use the one in macports)
+            MACPORTS_PREFIX="$with_macports_prefix"
 
-            # Exec the init script of fink to make sure that the env is set
-            if test -f $with_fink_prefix/bin/init.sh; then
-                echo "source $with_fink_prefix/bin/init.sh executed to set the env"
-                source $with_fink_prefix/bin/init.sh
-            else
-                AC_MSG_WARN([Could not find the fink init.sh script: $with_fink_prefix/bin/init.sh])
-            fi
+            # Macports doesn't have an init.sh so removing that part
         else
-            FINK_PREFIX="/sw/"
+            MACPORTS_PREFIX="/opt/local"
         fi
 
         #Append to the default flags on Apple machines
-        CPPFLAGS="$CPPFLAGS -I$FINK_PREFIX/include/"
-        LDFLAGS="$LDFLAGS -L$FINK_PREFIX/lib/"
+        CPPFLAGS="$CPPFLAGS -I$MACPORTS_PREFIX/include/"
+        LDFLAGS="$LDFLAGS -L$MACPORTS_PREFIX/lib/"
         ;;
 esac
 
@@ -813,7 +813,7 @@
    if test "$ac_java_jvm_name" = "jdk"; then
         JAVA_HOME=$ac_java_jvm_dir
         JAVA_VERSION=$ac_java_jvm_version
-#     AC_JAVA_TOOLS
+        AC_JAVA_TOOLS
         AC_JAVA_JNI_INCLUDE
         JAVA_JNI_INCLUDE=$ac_java_jvm_jni_include_flags
 
@@ -1214,13 +1214,24 @@
 # function strtod used in modules/core/src/c/getval.c
 AC_FUNC_STRTOD
 
+# other funcs
+AC_FUNC_ALLOCA
+AC_FUNC_ERROR_AT_LINE
+AC_FUNC_FORK
+AC_FUNC_MALLOC
+AC_FUNC_MMAP
+AC_FUNC_REALLOC
+AC_CHECK_FUNCS([realpath strcspn strspn strtoul wcwidth])
+
 ########################
 ## test for header files
 ########################
 
+AC_HEADER_STDC
+
 AC_CHECK_HEADERS([limits.h values.h])
 
-AC_CHECK_HEADERS([fcntl.h float.h libintl.h locale.h malloc.h netdb.h netinet/in.h nlist.h sgtty.h stddef.h sys/file.h sys/ioctl.h sys/param.h sys/socket.h sys/time.h sys/timeb.h sys/utsname.h syslog.h term.h termcap.h termio.h termios.h wchar.h wctype.h time.h])
+AC_CHECK_HEADERS([fcntl.h float.h libintl.h locale.h malloc.h netdb.h netinet/in.h nlist.h sgtty.h stddef.h stdio.h string.h strings.h sys/file.h sys/ioctl.h sys/param.h sys/socket.h sys/time.h sys/timeb.h sys/utsname.h syslog.h term.h termcap.h termio.h termios.h wchar.h wctype.h time.h utime.h])
 
 # check header dirent
 AC_HEADER_DIRENT
@@ -1231,6 +1242,13 @@
 # check if the specific header is available or not | used in modules/core/src/c/link_SYSV.c
 AC_HEADER_SYS_WAIT
 
+# Checks for typedefs, structures, and compiler characteristics.
+AC_CHECK_HEADER_STDBOOL
+AC_TYPE_INT32_T
+AC_TYPE_PID_T
+AC_TYPE_SIZE_T
+AC_TYPE_UINT32_T
+AC_CHECK_TYPES([ptrdiff_t])
 
 #######################
 ## Test for structures ##
@@ -1245,7 +1263,7 @@
 
 # gettext.  See http://www.gnu.org/software/hello/manual/gettext/AM_005fGNU_005fGETTEXT.html
 AM_GNU_GETTEXT([external])
-AM_GNU_GETTEXT_VERSION([0.16])
+AM_GNU_GETTEXT_VERSION([0.18.2])
 
 # function closedir used in modules/metanet/src/c/files.c
 AC_FUNC_CLOSEDIR_VOID
@@ -1306,7 +1324,9 @@
 ## other libraries
 ##################
 
-AC_CHECK_LIB(dl, dlopen)
+AC_CHECK_LIB([dl], [dlopen])
+# FIXME: Replace `main' with a function in `-lintl':
+AC_CHECK_LIB([intl], [main])
 
 AC_SEARCH_LIBS([pthread_join],[pthread])
 
@@ -1314,7 +1334,7 @@
 ## FFTW
 #################
 
-AC_ARG_WITH(fftw,
+AC_ARG_WITH([fftw],
     AC_HELP_STRING([--without-fftw],[Disable the interface to the FFTW 3 library]))
 
 FFTW_ENABLE=no
@@ -1326,31 +1346,16 @@
 AC_SUBST(FFTW_ENABLE)
 AM_CONDITIONAL(FFTW, test "$with_fftw" != no)
 
-
-#################
-## MPI
-#################
-
-# Not in Scilab 5.0
-#AC_ARG_WITH(mpi,
-#    [  --with-mpi               compile with MPI library])
-#
-#if test "$with_mpi" = yes; then
-#   AC_OPENMPI()
-#   # We will have to detect other implementation of OpenMPI
-#fi
-#AM_CONDITIONAL(MPI, test "$with_mpi" = yes)
-
 #################
 ## OpenMP
 #################
 
-AC_ARG_WITH(openmp,
+AC_ARG_WITH([openmp],
     AC_HELP_STRING([--without-openmp],[Disable the usage of OpenMP (parallelization of some algoritms)]))
 
 OPENMP_ENABLE=no
 if test "$with_openmp" != no; then
-#   AC_OPENMP
+    AC_OPENMP
     OPENMP_CFLAGS="-fopenmp"
     OPENMP_CXXFLAGS="-fopenmp"
     OPENMP_LIBS="-lgomp"
@@ -1680,7 +1685,6 @@
 AC_PROG_LIBTOOL([shared dlopen])
 AM_PROG_LIBTOOL
 
-
 # Avoid to link all the dep from others libraries (*.la included by LIBADD)
 link_all_deplibs=no
 
