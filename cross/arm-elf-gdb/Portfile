# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 99199 2012-10-29 19:24:13Z jmr@macports.org $

PortSystem              1.0

name                    arm-elf-gdb
version                 8.0.1
revision                0
categories              cross devel
maintainers             koostech.com:billy openmaintainer
license                 GPL-3+
description             GDB for the ARM processors
long_description        arm-elf-gdb is a version of the GNU Debugger \
                        for the arm-elf toolchain.
homepage                http://www.gnu.org/software/gdb/gdb.html
platforms               darwin
master_sites            gnu:gdb
distname                gdb-${version}
dist_subdir             gdb
use_bzip2               yes
#FIXME: update checksums once I can fetch the tarball successfully:
checksums               md5     496399e96654fc0f899a5c964bc1f0f8 \
                        sha1    08821f7b74238c07f99b5c975d7b4783c23081a5 \
                        rmd160  dc27919fdea46622f21db4c4e77ffced340d70ad \
                        sha256  2f6a0e2ce1c66c9dedeb7f58a8d1298ad602ddcdaf15d23104e1f7832b96d0e8

set crossgdb-target     arm-elf

#TODO: fix compatibility with texinfo5
depends_build-append    port:arm-elf-binutils \
                        path:arm-elf/bin/gcc:arm-elf-gcc \
                        path:bin/makeinfo:texinfo \
                        path:bin/xmkmf:imake \
                        bin:bison:bison \
                        bin:expect:expect \
                        bin:flex:flex \
                        bin:gawk:gawk \
                        bin:gm4:m4 \
                        bin:grep:grep \
                        port:libunwind-headers \
                        port:elftoolchain

depends_lib-append      port:expat \
                        port:gettext \
                        port:libiconv \
                        port:ncurses \
                        port:zlib

# the arm-elf-binutils port is not universal
universal_variant       no

# Build in a different directory, as advised in the README file.
pre-configure {
        file mkdir "${workpath}/build"
}
configure.dir           ${workpath}/build
configure.cmd           ${workpath}/gdb-${version}/configure

configure.pre_args      --prefix=${prefix}/arm-elf
configure.args-append   --mandir=${prefix}/share/man \
                        --infodir=${prefix}/share/info \
                        --target=${crossgdb-target} \
                        --enable-interwork \
                        --enable-multilib \
                        --enable-elfcpp=yes \
                        --disable-werror \
                        --disable-isl-version-check \
                        --disable-cloog-version-check \
                        --disable-ppl-version-check \
                        --without-python \
                        --with-zlib \
                        --enable-elf-stt-common \
                        --with-x \
                        --x-includes=${prefix}/include \
                        --x-libraries=${prefix}/lib \
                        --with-expat \
                        --with-libexpat-prefix=${prefix} \
                        --with-libiconv-prefix=${prefix} \
                        --with-iconv-bin=${prefix}/bin/iconv \
                        --with-curses \
                        --enable-plugins \
                        --enable-sim \
                        --enable-multi-ice \
                        --enable-gdb-build-warnings \
                        --enable-largefile

configure.env-append    MAKEINFO=${prefix}/bin/makeinfo \
                        XMKMF=${prefix}/bin/xmkmf \
                        INSTALLED_PRODUCT_ASIDES=YES \
                        RC_JASPER=YES \
                        RC_XBS=YES \
                        SEPARATE_STRIP=YES \
                        TARGET_ARCHITECTURE=arm \
                        gdb_cv_var_macho=no

build.env-append        ${configure.env}

build.type              gnu
use_parallel_build      no
configure.ccache        no

# tests
test.run                yes
test.target             check

build.dir               ${workpath}/build

post-patch {
        namespace eval crossgdb {}

        # Fix the info pages and related stuff.
        #
        # path: path to the doc directory (e.g. gas/doc/)
        # makefile: path to Makefile.in (e.g. gas/doc/Makefile.in)
        # name: name of the info page (e.g. as)
        # suffix: suffix of the souce page (texinfo or texi)
                proc crossgdb::fixinfo { path makefile name suffix } {
                        global crossgdb-target worksrcpath

                        # Fix the source
                        reinplace "s|setfilename ${name}.info|setfilename ${crossgdb-target}-${name}.info|g" \
                                ${worksrcpath}/${path}/${name}.${suffix}
                        reinplace "s|(${name})|(${crossgdb-target}-${name})|g" \
                                ${worksrcpath}/${path}/${name}.${suffix}
                        reinplace "s|@file{${name}}|@file{${crossgdb-target}-${name}}|g" \
                                ${worksrcpath}/${path}/${name}.${suffix}

                        # Fix the Makefile
                        reinplace "s| ${name}.info| ${crossgdb-target}-${name}.info|g" \
                                ${worksrcpath}/${makefile}
                        reinplace "s|/${name}.info|/${crossgdb-target}-${name}.info|g" \
                                ${worksrcpath}/${makefile}
                        reinplace "s|^${name}.info|${crossgdb-target}-${name}.info|g" \
                                ${worksrcpath}/${makefile}
                        reinplace "s| ${name}.pod| ${crossgdb-target}-${name}.pod|g" \
                                ${worksrcpath}/${makefile}
                        reinplace "s|/${name}.pod|/${crossgdb-target}-${name}.pod|g" \
                                ${worksrcpath}/${makefile}
                        reinplace "s|^${name}.pod|${crossgdb-target}-${name}.pod|g" \
                                ${worksrcpath}/${makefile}
                        reinplace "s| ${name}.${suffix}| ${crossgdb-target}-${name}.${suffix}|g" \
                                ${worksrcpath}/${makefile}
                        reinplace "s|/${name}.${suffix}|/${crossgdb-target}-${name}.${suffix}|g" \
                                ${worksrcpath}/${makefile}
                        reinplace "s|^${name}.${suffix}|${crossgdb-target}-${name}.${suffix}|g" \
                                ${worksrcpath}/${makefile}

                        # Rename the source
                        file rename ${worksrcpath}/${path}/${name}.${suffix} \
                                ${worksrcpath}/${path}/${crossgdb-target}-${name}.${suffix}

                        # Fix the dir for install-info.
                        # (note: this may be effectless if there was no info dir to be fixed)
                        reinplace "s|--info-dir=\$(DESTDIR)\$(infodir)|--dir-file=\$(DESTDIR)\$(infodir)/${crossgdb-target}-gdb-dir|g" \
                                "${worksrcpath}/${makefile}"
                }
        # etc/standards.info
        crossgdb::fixinfo etc/ etc/Makefile.in standards info
}

destroot.violate_mtree yes

post-destroot {
        # Do not overwrite libiberty installed by gcc.
        if {[file exists ${destroot}/${prefix}/lib/${build_arch}/libiberty.a]} {
            file delete "${destroot}/${prefix}/lib/${build_arch}/libiberty.a"
        }
}
