# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 102865 2013-02-09 19:16:59Z jeremyhu@macports.org $

PortSystem          1.0
PortGroup           archcheck 1.0

name                gdal
version             1.10.1
#TODO: update to 1.11.0
revision            6
categories          gis
license             MIT BSD
platforms           darwin macosx

maintainers         gwmail.gwu.edu:egall openmaintainer

description         GDAL - Geospatial Data Abstraction Library

long_description    GDAL is a translator library for raster geospatial \
                    data formats that is released under an X/MIT style \
                    Open Source license. As a library, it presents a \
                    single abstract data model to the calling application \
                    for all supported formats. The related OGR library \
                    (which lives within the GDAL source tree) provides a \
                    similar capability for simple features vector data.

homepage            http://www.${name}.org/
master_sites        http://www.${name}.org/dl/ \
                    http://download.osgeo.org/${name}/ \
                    http://download.osgeo.org/${name}/CURRENT

checksums           rmd160  b06cbd0f34a6dad99768d5f75a9856e4e027d3bc \
                    sha256  9984f0314c0bd831eb59fb646c2bc5e13cf1378be4f51499045166cbe62be6ea

depends_build-append        path:bin/ed:ed \
                            path:bin/glibtool:libtool

depends_lib-append          port:zlib \
                            port:libpng \
                            port:tiff \
                            port:libgeotiff \
                            port:jpeg \
                            path:include/gif_lib.h:giflib \
                            port:proj

set PYINST                  ""
set OPENCLBASE              "/System/Library/Frameworks/OpenCL.framework"

configure.args-append       --with-local=${prefix} \
                            --with-libz=${prefix} \
                            --with-liblzma=no \
                            --with-png=${prefix} \
                            --with-libtiff=${prefix} \
                            --with-geotiff=${prefix} \
                            --with-jpeg=${prefix}\
                            --with-gif=${prefix} \
                            --with-static-proj4=${prefix} \
                            --without-pg \
                            --without-grass \
                            --without-libgrass \
                            --without-cfitsio \
                            --without-pcraster \
                            --without-netcdf \
                            --without-ogdi \
                            --without-fme \
                            --without-hdf4 \
                            --without-hdf5 \
                            --without-jasper \
                            --without-openjpeg \
                            --without-ecw \
                            --without-kakadu \
                            --without-mrsid \
                            --without-jp2mrsid \
                            --without-msg \
                            --without-bsb \
                            --without-oci \
                            --without-grib \
                            --without-mysql \
                            --without-ingres \
                            --without-xerces \
                            --without-odbc \
                            --without-curl \
                            --without-sqlite3 \
                            --without-spatialite \
                            --without-dwgdirect \
                            --without-idb \
                            --without-sde \
                            --without-geos \
                            --without-opencl \
                            --without-pam \
                            --without-perl \
                            --without-php \
                            --without-ruby \
                            --without-python \
                            --without-xerces \
                            --without-expat \
                            --without-poppler \
                            --mandir=${prefix}/share/man

# Once we have updated to 1.11.0, uncomment this to always choose internal
# libjson code (#44098):
#configure.args-append      --with-libjson-c=internal

configure.env-append        GEOTIFF_INCLUDE='-I${prefix}/include'

# Patch to ensure that the python installation respects DESTDIR:
patchfiles-append           patch-swig_python_GNUmakefile.diff \
                            patch-gdalwarpkernel_opencl_c.diff \
                            patch-gdalwarpkernel_opencl_h.diff

# Upstream fix for the "Undefined symbols: _environ" error:
patchfiles-append   patch-port-cpl_spawn.cpp.diff

# Silence a configure warning about ignoring datarootdir:
patchfiles-append   patch-GDALmake.opt.in.diff

# Ease development:
patch.args-append   --backup

# Patches for universal build:
post-configure {
    reinplace -E "s|(INST_PYMOD).*|\\1\t=\t${PYINST}|" \
        ${worksrcpath}/GDALmake.opt
    if {[variant_isset universal]} {
        ui_debug "ed - ${worksrcpath}/port/cpl_config.h < ${filespath}/config.h.ed"
        system "ed - ${worksrcpath}/port/cpl_config.h < ${filespath}/config.h.ed"
    }
}

# Set target to none by clearing it:
build.target

variant lzma conflicts universal \
    description {Enable LZMA (7Z) compression support} {
    depends_lib-append      port:lzma \
                            port:xz \
                            port:lzip
    depends_skip_archcheck-append lzma
    if {[variant_isset python24]} {
        depends_lib-append  port:py24-liblzma
    }
    if {[variant_isset python25]} {
        depends_lib-append  port:py25-liblzma
    }
    if {[variant_isset python26]} {
        depends_lib-append  port:py26-liblzma \
                            port:py26-pylzma
    }
    if {[variant_isset python27]} {
        depends_lib-append  port:py27-liblzma
    }
    configure.args-replace  --with-lzma=no --with-lzma=yes
}

variant geos description {Enable GEOS geometry engine functionality} {
    depends_lib-append      port:geos
    if {![variant_isset universal] && ![variant_isset perf] && \
        ![tbool configure.ccache] && [variant_isset broken]} {
        depends_lib-append  port:geos2
    }
    if {[variant_isset python25] && ![variant_isset postgresql81] && \
        ![variant_isset postgresql82] && ![variant_isset postgresql83] && \
        ![variant_isset postgresql84] && ![variant_isset postgresql90] && \
        ![variant_isset postgresql91] && ![variant_isset postgresql92] && \
        ![variant_isset postgresql93]} {
        depends_lib-append  port:py25-geoalchemy
    }
    if {[variant_isset python26] && ![variant_isset postgresql81] && \
        ![variant_isset postgresql82] && ![variant_isset postgresql83] && \
        ![variant_isset postgresql84] && ![variant_isset postgresql90] && \
        ![variant_isset postgresql91] && ![variant_isset postgresql92] && \
        ![variant_isset postgresql93]} {
        depends_lib-append  port:py26-geoalchemy
    }
    if {[variant_isset python27] && ![variant_isset postgresql81] && \
        ![variant_isset postgresql82] && ![variant_isset postgresql83] && \
        ![variant_isset postgresql84] && ![variant_isset postgresql90] && \
        ![variant_isset postgresql91] && ![variant_isset postgresql92] && \
        ![variant_isset postgresql93]} {
        depends_lib-append  port:py27-geoalchemy
    }
    configure.args-replace  --without-geos --with-geos=${prefix}/bin/geos-config
}

variant curl description {Enable curl support} {
    depends_lib-append      port:curl \
                            port:flickcurl \
                            port:tclcurl
    if {[variant_isset framework]} {
        if {![variant_isset universal]} {
            depends_lib-append port:curlftpfs
        }
        if {${os.platform} eq "darwin" && ${os.major} > 10} {
            depends_lib-append port:curlhandle
        }
    }
    configure.args-replace  --without-curl --with-curl=${prefix}/bin/curl-config
    if {[variant_isset python24]} {
        depends_lib-append  port:py24-curl \
                            port:curlish_select
    }
    if {[variant_isset python25]} {
        depends_lib-append  port:py25-curl \
                            port:curlish_select
    }
    if {[variant_isset python26]} {
        depends_lib-append  port:py26-curl \
                            port:py26-curlish
    }
    if {[variant_isset python27]} {
        depends_lib-append  port:py27-curlish
    }
}

variant mrsid conflicts universal description {Enable MrSID file format} {
    depends_lib-append      port:geoexpress-sdk
    configure.args-replace  --without-mrsid --with-mrsid=${prefix}/share/Geo_DSDK

    pre-fetch {
        if {${os.platform} eq "darwin" && (${os.major} < 12 || ${os.major} > 13)} {
            ui_error "mrsid is only compatible with OS X 10.8 and 10.9"
            return -code error "incompatible OS X version"
        }
    }
    # Fixes for Geo_DSDK 7.x - http://trac.osgeo.org/gdal/ticket/2410
    patchfiles-append       patch-frmts_mrsid_mrsiddataset.cpp.diff \
                            patch-mrsid-configure.diff
}

#TODO: make a port for the ECW SDK instead of forcing the user to modify
# our prefix manually:
variant ecw description {Enable ECW file format via external ECW SDK} {
    configure.args-replace  --without-ecw --with-ecw=${prefix}/lib/ECW

    if {${configure.cxx_stdlib} eq "libc++"} {
        patchfiles-append   patch-configure-ecw-libcxx.diff
    } else {
        patchfiles-append   patch-configure-ecw-libstdcxx.diff
    }

    pre-configure {
        if {(![file exists ${prefix}/lib/ECW]) && \
        (![file exists /Intergraph/ERDASEcwJpeg2000SDK5.1.1/Desktop_Read-Only])} {
            ui_error "
****
* The Intergraph ECW SDK version 5.1.1 is needed to
* compile gdal with the ecw variant. It must be installed separately.
* Please download the Mac OS X version of the SDK
* 'ERDAS ECW/JP2 SDK v5.1.1 (MacOSX)' from
* http://download.intergraph.com/
* Choose to install it in ${prefix}/lib/ECW.
* Then try to install GDAL again.
****"
            return -code error "ECW SDK 5.1.1 not installed."
        }

        if {(![file exists ${prefix}/lib/ECW]) && \
            ([file exists /Intergraph/ERDASEcwJpeg2000SDK5.1.1/Desktop_Read-Only])} {

          ui_error "
****
* Please create symbolic links from the /Intergraph directory to
* ${prefix}/lib/ECW, by executing at the prompt:
* sudo ln -s /Intergraph/ERDASEcwJpeg2000SDK5.1.1/Desktop_Read-Only \
                  ${prefix}/lib/ECW
* Or reinstall the ECW SDK in ${prefix}/lib/ECW directly.
* Then try again.
****"
            return -code error "Symlinks missing."
        }
    }
}

variant hdf4 description {Enable HDF4 file format} {
    depends_lib-append      port:hdf4 \
                            port:hdfeos
    configure.args-replace  --without-hdf4 --with-hdf4=${prefix}
}

variant hdf5 description {Enable HDF5 file format} {
    depends_lib-append      port:hdf5 \
                            port:h5utils \
                            port:hdfeos5
    if {[variant_isset hdf4]} {
        depends_lib-append  port:h4h5tools
    }
    configure.args-replace  --without-hdf5 --with-hdf5=${prefix}
}

variant netcdf description {Enable NetCDF file format} {
    depends_lib-append      port:netcdf \
                            port:ncview
    if {[variant_isset python26] && ![tbool configure.ccache] && \
        ![variant_isset universal]} {
        depends_lib-append  port:py26-netcdf4
    }
    if {[variant_isset python27] && ![tbool configure.ccache] && \
        ![variant_isset universal]} {
        depends_lib-append  port:py27-netcdf4
    }
    configure.args-replace  --without-netcdf --with-netcdf=${prefix}
    # some other netcdf things are added in variant +huge
}

#JPEG-2K variants:
variant jasper conflicts openjpeg \
    description {Enable JasPer JPEG-2000 format support} {
    depends_lib-append      port:jasper
    configure.args-replace  --without-jasper --with-jasper=${prefix}
}

# currently broken, still checks for openjpeg2.0 while the openjpeg port
# is up to version 2.1:
variant openjpeg conflicts jasper \
    description {Enable OpenJPEG JPEG-2000 format support} {
    depends_lib-append      port:openjpeg \
                            port:openjpeg15
    configure.args-replace  --without-openjpeg --with-openjpeg=${prefix}
}

# Might not need to conflict with universal any more:
variant xerces conflicts universal description {Enable xerces XML support for GML file format} {
    depends_lib-append      path:lib/libxerces-c.dylib:xercesc
    configure.args-replace  --without-xerces --with-xerces=${prefix}
    depends_skip_archcheck-append xercesc
}

# Enabled by default below:
variant expat description {Enable expat XML support} {
    depends_lib-append      port:expat
    configure.args-replace  --without-expat --with-expat=${prefix}
}

# Python variants (first two are deprecated):
variant python24 conflicts python25 python26 python27 \
    description {Enable Python 2.4 support (deprecated)} {
    depends_lib-append      port:python24
    configure.python        ${prefix}/bin/python2.4
    configure.args-replace  --without-python --with-python
    set PYINST              ${frameworks_dir}/Python.framework/Versions/2.4
    build.args-append       PYTHON=python2.4
    build.env-append        PYTHON=python2.4
}

variant python25 conflicts python24 python26 python27 \
    description {Enable Python 2.5 support (deprecated)} {
    depends_lib-append      port:python25
    configure.python        ${prefix}/bin/python2.5
    configure.args-replace  --without-python --with-python
    set PYINST              ${frameworks_dir}/Python.framework/Versions/2.5
    build.args-append       PYTHON=python2.5
    build.env-append        PYTHON=python2.5
}

variant python26 conflicts python24 python25 python27 \
    description {Enable Python 2.6 support} {
    depends_lib-append      port:python26 \
                            port:py26-numpy
    configure.python        ${prefix}/bin/python2.6
    configure.args-replace  --without-python --with-python
    set PYINST              ${frameworks_dir}/Python.framework/Versions/2.6
    build.args-append       PYTHON=python2.6
    build.env-append        PYTHON=python2.6
}

variant python27 conflicts python24 python25 python26 \
    description {Enable Python 2.7 support} {
    depends_lib-append      port:python27 \
                            port:py27-numpy
    configure.python        ${prefix}/bin/python2.7
    configure.args-replace  --without-python --with-python
    set PYINST              ${frameworks_dir}/Python.framework/Versions/2.7
    build.args-append       PYTHON=python2.7
    build.env-append        PYTHON=python2.7
}

#FIXME: gdal supports python3 as of version 1.10.0, add respective variants

# Database variants:
set postgresql_suffixes {81 82 83 84 90 91 92 93}

set portsgresql_variants {}
foreach s ${postgresql_suffixes} {
    lappend portsgresql_variants postgresql${s}
}

foreach s ${postgresql_suffixes} {
    set p postgresql${s}
    set v [string index ${s} 0].[string index ${s} 1]
    set i [lsearch -exact ${portsgresql_variants} ${p}]
    set c [lreplace ${portsgresql_variants} ${i} ${i}]
    eval [subst {
        variant ${p} description "Enable PostgreSQL ${v} support" conflicts ${c} {
            depends_lib-append      port:${p}
            configure.args-replace  --without-pg --with-pg=${prefix}/lib/postgresql${s}/bin/pg_config
        }
    }]
}

#FIXME: change this to variants for supported mysql versions:
variant mysql5 description {Enable MySQL 5 support} {
    depends_lib-append      path:bin/mysql_config5:mysql5
    configure.args-replace  --without-mysql --with-mysql=${prefix}/lib/mysql5/bin/mysql_config
}

# sqlite3 is really a backup in case we fail to find spatialite:
variant sqlite3 description {Enable SQLite3 support} {
    depends_lib-append      port:sqlite3 \
                            port:tcl-sqlite3
    if {[variant_isset framework]} {
        # warning: this will pull in the whole of qt4 as well:
        depends_lib-append  port:qt4-mac-sqlite3-plugin
    }
    configure.args-replace  --without-sqlite3 --with-sqlite3=${prefix}
    configure.env-append    SQLITE3_CFLAGS='-I${prefix}/include' \
                            SQLITE3_LDFLAGS='-L${prefix}/lib -lsqlite3' \
                            SQLITE_INC='-I${prefix}/include'
}

# needs the same things as sqlite3, but more:
variant spatialite requires sqlite3 \
        description {Enable SpartiaLite support} {
    depends_build-append    port:pkgconfig
    depends_lib-append      port:spatialite
    configure.args-replace  --without-spatialite --with-spatialite=${prefix}
    pre-configure {
        configure.env-append    LIBS='[exec ${prefix}/bin/pkg-config --libs spatialite]'
    }
    if {[variant_isset python24]} {
        depends_lib-append  port:py24-spatialite
    }
    if {[variant_isset python25]} {
        depends_lib-append  port:py25-spatialite
    }
    if {[variant_isset python26]} {
        depends_lib-append  port:py26-spatialite
    }
    if {[variant_isset python27]} {
        depends_lib-append  port:py27-spatialite
    }
}

# ODBC variants:
variant unixODBC conflicts iodbc \
        description {Enable ODBC support via unixODBC} {
    depends_lib-append      port:unixODBC
    if {[variant_isset mysql5]} {
        if {![variant_isset universal]} {
            depends_lib-append mysql-connector-odbc
        }
    }
    if {[variant_isset python26]} {
        depends_lib-append  port:py26-pyodbc
    }
    if {[variant_isset python27]} {
        depends_lib-append  port:py27-pyodbc
    }
    configure.args-replace  --without-odbc --with-odbc=${prefix}
}

variant iodbc conflicts unixODBC \
        description {Enable ODBC support via libiodbc} {
    depends_lib-append      port:libiodbc
    configure.args-replace  --without-odbc --with-odbc=${prefix}
}

# PDF support:
variant poppler description {Enable poppler support} {
    depends_lib-append      port:poppler
    configure.args-replace  --without-poppler --with-poppler=${prefix}
}

# OpenCL variant:
variant opencl description {Use OpenCL for parallel computations} {
    configure.args-replace  --without-opencl --with-opencl
    configure.args-append   --with-opencl-include=${OPENCLBASE}/Headers
    configure.args-append   --with-opencl-lib='-framework OpenCL'
    if {[variant_isset python26]} {
        depends_lib-append  port:py26-pyopencl
    }
    if {[variant_isset python27]} {
        depends_lib-append  port:py27-pyopencl
    }
}

# variant to build as a Framework on OS X:
#TODO: investigate if this breaks stuff, as it changes where it installs:
platform macosx {
    variant framework description {Build as a Mac OS X framework} {
        configure.args-append   --with-macosx-framework \
                                --disable-option-checking
        configure.env-append    CARBON_FRAMEWORK="-framework Carbon" \
                                with_macosx_framework='yes' \
                                MACOSX_FRAMEWORK=yes
        if {[variant_isset universal] && ![variant_isset huge]} {
            configure.universal_args-delete --disable-dependency-tracking
        }
    }
}

variant huge requires curl expat geos hdf5 mysql5 netcdf opencl sqlite3 \
                      description {Pull even more dependencies} {
    configure.args-delete   --with-lzma=no \
                            --without-pg \
                            --without-grass \
                            --without-libgrass \
                            --without-cfitsio \
                            --without-pcraster \
                            --without-netcdf \
                            --without-ogdi \
                            --without-fme \
                            --without-hdf4 \
                            --without-hdf5 \
                            --without-jasper \
                            --without-openjpeg \
                            --without-ecw \
                            --without-kakadu \
                            --without-mrsid \
                            --without-jp2mrsid \
                            --without-msg \
                            --without-bsb \
                            --without-oci \
                            --without-grib \
                            --without-mysql \
                            --without-ingres \
                            --without-odbc \
                            --without-curl \
                            --without-sqlite3 \
                            --without-spatialite \
                            --without-dwgdirect \
                            --without-idb \
                            --without-sde \
                            --without-geos \
                            --without-opencl \
                            --without-pam \
                            --without-perl \
                            --without-php \
                            --without-ruby \
                            --without-python \
                            --without-expat \
                            --disable-dependency-tracking
    configure.universal_args-delete --disable-dependency-tracking
    depends_lib-append      port:cfitsio \
                            port:libxmi \
                            port:nco \
                            port:libgdiplus \
                            port:grib_api \
                            port:ssdeep \
                            port:swig-perl \
                            port:p5.26-www-curl \
                            port:p5.26-xml-sax-expat \
                            port:swig-python \
                            port:swig-ruby \
                            port:ruby19 \
                            port:rb-xmlparser \
                            port:rb-sqlite3 \
                            port:libkml \
                            port:shapelib \
                            port:lcms2 \
                            port:fontconfig \
                            port:freetype \
                            port:bzip2 \
                            port:libtool \
                            port:szip \
                            port:xorg-libsm \
                            port:xorg-libice \
                            port:xorg-libX11 \
                            port:xorg-libxcb \
                            port:xorg-libXau \
                            port:xorg-libXdmcp \
                            port:c-ares \
                            port:libcomerr \
                            port:libfetch \
                            port:libidn \
                            port:gettext \
                            port:libssh2 \
                            port:libiconv \
                            port:openldap \
                            port:openssl \
                            port:jbigkit \
                            port:armadillo \
                            port:pcre \
                            port:libxml2 \
                            bin:java:kaffe
    # openjpeg will also get linked against here regardless of whether its
    # variant is set, but I do not want to add a duplicate dependency for
    # it, nor do I want this variant (+huge) to require the +openjpeg
    # variant, because it conflicts with the +jasper variant...
    if {![variant_isset perf] && ![tbool configure.ccache]} {
        # the +netcdf variant should already be required by this variant
        # (+huge), but just in case:
        if {[variant_isset netcdf] && [variant_isset broken]} {
            depends_lib-append  port:netcdf-fortran
        }
    }
    if {${configure.cxx_stdlib} eq "libstdc++"} {
        depends_lib-append  path:lib/libstdc++.6.dylib:libgcc
    }
    if {[variant_isset python25]} {
        depends_lib-append  port:py25-couchdb \
                            port:py25-xlwt
        # py25-couchdbkit has been removed from trunk
    }
    if {[variant_isset python26]} {
        depends_lib-append  port:py26-couchdb \
                            port:py26-couchdbkit \
                            port:py26-xlwt
    }
    if {[variant_isset python27]} {
        depends_lib-append  port:py27-couchdb \
                            port:py27-xlwt
    }
    pre-configure {
        xinstall -m 755 ${prefix}/share/gettext/config.rpath ${worksrcpath}
    }
    configure.args-append   --with-cfitsio \
                            --with-grib \
                            --with-perl \
                            --with-ruby \
                            --with-libkml=${prefix} \
                            --with-libkml-inc=${prefix}/include \
                            --with-libkml-lib=${prefix}/lib
}

# Only disable parallel build in one place:
if {[variant_isset python25] || [variant_isset python26] || \
    [variant_isset python27] || [variant_isset huge]} {
    use_parallel_build      no
}

variant extra_nonuniversal conflicts universal requires huge hdf4 lzma \
        description {Extra dependencies that are not universal} {
    depends_lib-append      port:wgrib2 \
                            port:ocilib \
                            port:couchdb \
                            port:swig-php \
                            port:pear-Net_Curl \
                            port:mdbtools
    depends_skip_archcheck-append \
                            lzma wgrib2 ocilib couchdb mdbtools
    configure.args-append   --with-oci
}

# comment out if necessary:
variant broken requires extra_nonuniversal poppler \
spatialite xerces conflicts universal description {dependencies that do \
not even work even when not building universal} {
    depends_lib-append      port:pamtester \
                            port:svdlibc \
                            port:sam2p \
                            lib:msgpack:msgpack \
                            port:jubatus-msgpack-rpc \
                            port:cyrus-sasl2
    depends_skip_archcheck-append pamtester sam2p tif22pnm svdlibc xercesc
    configure.args-delete   --without-xerces
    configure.args-append   --with-pam \
                            --with-php \
                            --with-msg
    # the +poppler variant should already be required by this variant
    # (+broken), but just in case:
    if {[variant_isset poppler]} {
        depends_lib-append  port:podofo
    }
    if {[variant_isset xerces]} {
        depends_lib-append  port:xalanj
        depends_skip_archcheck-append xalanj
    }
}

variant autoreconf description {Runs autoreconf before configuring} {
    pre-patch {
        file copy ${worksrcpath}/configure.in ${worksrcpath}/configure.ac
    }
    #TODO: need to fix patches for new version, currently they fail
    # to apply cleanly:
    patchfiles-append       patch-configure.ac.diff \
                            patch-configure.in.diff
    use_autoreconf          yes
    autoreconf.args         -fvi -Wall
    depends_build-append    port:gawk \
                            port:grep \
                            port:gsed
}

# Only turn off ccache in one place:
if {[variant_isset autoreconf] || [variant_isset framework] || \
    ([variant_isset netcdf] && \
     ([variant_isset python26] || [variant_isset python27]))} {
    configure.ccache no
}

# Perf variant to optimize code:
variant perf description {Optimize for speed} {
    PortGroup                   compiler_blacklist_versions 1.0
    # instead of forcing macports-clang-3.4 to be configure.compiler
    # manually, blacklist the previous versions:
    compiler.blacklist-append   macports-clang-2.9 macports-clang-3.0 \
                                macports-clang-3.1 macports-clang-3.2 \
                                macports-clang-3.3
    # also blacklist the corresponding system clang versions:
    compiler.blacklist-append   {clang < 503.0.38}
    # also blacklist old versions of gcc:
    compiler.blacklist-append   gcc-3.3 {*gcc-4.[0-6]}
    # just in case:
    compiler.fallback-prepend macports-clang-3.4
    # set the flags this way instead of manually:
    configure.march     native
    configure.mtune     native
    # for some reason that fails, so still have to do it manually anyways:
    configure.optflags  -O3 -march=native
    configure.pipe      yes
    # force a local build, just in case, by clearing archive_sites:
    archive_sites
}

default_variants-append     +expat

# we now add a dependency on the relevant py-geoalchemy in the geos variant
# depending on the python variant set, and that pulls in py-psycopg2, whose
# postgres variants can get messed up, so only make +geos a default variant
# if there are no python or postgresql variants set:
if {![variant_isset postgresql81] && ![variant_isset postgresql82] && \
    ![variant_isset postgresql83] && ![variant_isset postgresql84] && \
    ![variant_isset postgresql90] && ![variant_isset postgresql91] && \
    ![variant_isset postgresql92] && ![variant_isset postgresql93] && \
    ![variant_isset python24] && ![variant_isset python25] && \
    ![variant_isset python26] && ![variant_isset python27]} {
    default_variants-append +geos
}

# Postconfigure hack to avoid read ${include} .h files before
# GDAL own include directories:
post-configure {
    set FRMT_PATH ${worksrcpath}/ogr/ogrsf_frmts
    if {[variant_isset expat]} {
        foreach makefile [glob -dir ${FRMT_PATH} */GNUmakefile] {
            reinplace "s|\$\(EXPAT_INCLUDE\)||" ${makefile}
        }
    }

    if {[variant_isset geos] && \
        [file exists ${worksrcpath}/GDALmake.opt]} {
        reinplace -E "s|(GEOS_CFLAGS.*=).*|\\1|" ${worksrcpath}/GDALmake.opt
    }
}

post-destroot {
    xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}
    xinstall -m 644 -W ${worksrcpath} HOWTO-RELEASE NEWS VERSION \
        ${destroot}${prefix}/share/doc/${name}

    if {[variant_isset mrsid]} {
         foreach f [list \
            bin/gdal_contour \
            bin/gdal_grid \
            bin/gdal_rasterize \
            bin/gdal_translate \
            bin/gdaladdo \
            bin/gdalbuildvrt \
            bin/gdaldem \
            bin/gdalenhance \
            bin/gdalinfo \
            bin/gdallocationinfo \
            bin/gdalmanage \
            bin/gdalserver \
            bin/gdalsrsinfo \
            bin/gdaltindex \
            bin/gdaltransform \
            bin/gdalwarp \
            bin/nearblack \
            bin/ogr2ogr \
            bin/ogrinfo \
            bin/ogrlineref \
            bin/ogrtindex \
            bin/testepsg \
            lib/libgdal.1.dylib] \
            {
                exec install_name_tool -change libltidsdk.9.dylib ${prefix}/share/Geo_DSDK/Raster_DSDK/lib/libltidsdk.9.dylib ${prefix}/${f}
            }
    }

    if {[variant_isset ecw]} {
          foreach f [list \
            bin/gdal_contour \
            bin/gdal_grid \
            bin/gdal_rasterize \
            bin/gdal_translate \
            bin/gdaladdo \
            bin/gdalbuildvrt \
            bin/gdaldem \
            bin/gdalenhance \
            bin/gdalinfo \
            bin/gdallocationinfo \
            bin/gdalmanage \
            bin/gdalserver \
            bin/gdalsrsinfo \
            bin/gdaltindex \
            bin/gdaltransform \
            bin/gdalwarp \
            bin/nearblack \
            bin/ogr2ogr \
            bin/ogrinfo \
            bin/ogrlineref \
            bin/ogrtindex \
            bin/testepsg \
            lib/libgdal.1.dylib] \
            {
                if {${configure.cxx_stdlib} eq "libc++"} {
                    exec install_name_tool -change \
                        /Users/jenkins/hudson/workspace/RL_5.1.1_ECWJP2SDK_OSX/Master/libNCSEcw.dylib ${prefix}/lib/ECW/redistributable/libc++/libNCSEcw.dylib \
                        ${prefix}/${f}
                } else {
                    exec install_name_tool -change \
                        /Users/jenkins/hudson/workspace/RL_5.1.1_ECWJP2SDK_OSX/Master/libNCSEcw.dylib ${prefix}/lib/ECW/redistributable/libstdc++/libNCSEcw.dylib \
                        ${prefix}/${f}
                }
            }
    }
}

# checking CURRENT is necessary to keep it from thinking that 1.9.2 is
# newer than 1.1x.x:
livecheck.type  regex
livecheck.url   http://download.osgeo.org/${name}/CURRENT
livecheck.regex ${name}-(\\d+(?:\\.\\d+)*)\\.tar
