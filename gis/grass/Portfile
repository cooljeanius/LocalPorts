# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 111848 2013-10-03 20:35:14Z devans@macports.org $

PortSystem        1.0
PortGroup         wxWidgets 1.0
PortGroup         active_variants 1.1

name              grass
epoch             1
version           6.4.3
revision          4
maintainers       nomaintainer
categories        gis
license           GPL-2+
platforms         darwin

description       GRASS GIS
long_description  GRASS is a Geographic Information System (GIS) used for \
                  geospatial data management and analysis.

homepage          http://grass.osgeo.org/
master_sites      ${homepage}grass[join [lrange [split ${version} .] 0 1] {}]/source/

checksums         rmd160  bdbd671972730701aa8213c2041abe31a68eea4c \
                  sha256  5d29d322a262330894aa046845e6790258cd6e3f95b28c350ed7839810672ed6

# Setting python_bin here has been moved into the python variants

depends_build-append \
                  port:pkgconfig \
                  port:swig \
                  bin:sed:gsed \
                  bin:grep:grep \
                  bin:svnversion:subversion \
                  bin:flex:flex \
                  bin:bison:bison
# the python dependencies have been moved to their variants
depends_lib-append \
                  path:lib/pkgconfig/cairo.pc:cairo \
                  port:fftw-3 \
                  port:fontconfig \
                  port:freetype \
                  port:gdal \
                  port:gdbm \
                  port:geos \
                  port:gettext \
                  port:gpsbabel \
                  port:jasper \
                  port:jpeg \
                  port:libiconv \
                  port:libpng \
                  port:mesa \
                  port:ncurses \
                  port:netpbm \
                  path:lib/libXm.dylib:openmotif \
                  port:proj47 \
                  port:proj \
                  port:readline \
                  port:tcl \
                  port:tiff \
                  port:tk \
                  port:xorg-libX11 \
                  port:xorg-libXext \
                  port:xorg-libXmu \
                  port:xorg-libXt \
                  port:xorg-libice \
                  port:xorg-libsm \
                  port:xrender \
                  port:zlib
# gpsbabel and netpbm are not actually linked against, but
# macosx/Readme.rtf says that they have to be universal, so including
# them as library dependencies seemed like the best way to ensure that.
# (it was either that or use the deprecated archcheck portgroup)

# https://trac.macports.org/ticket/32790
# this should probably only apply to some Xcode versions
compiler.blacklist-append  *clang*

patchfiles-append \
    patch-configure.diff \
    patch-gui-wxpython-core-globalvar.py.diff \
    patch-gui-wxpython-gui_core-ghelp.py.diff \
    patch-lib-init-grass.src.diff \
    patch-macosx_Makefile.diff \
    patch-Makefile.diff \
    patch-ffmpeg.diff

# List of all python scripts. Used later to ensure usage of
# python26/python27 (and not the currently active python)
# Work around bug http://trac.osgeo.org/grass/ticket/1758
set python_scripts [ list \
    doc/python/m.distance.py \
    doc/python/raster_example_ctypes.py \
    doc/python/vector_example_ctypes.py \
    general/g.parser/test.py \
    gui/scripts/d.rast3d.py \
    gui/scripts/g.change.gui.py \
    gui/scripts/g.extension.py \
    gui/scripts/g.extension.rebuild.all.py \
    gui/scripts/v.type_wrapper.py \
    gui/wxpython/compat/__init__.py \
    gui/wxpython/compat/subprocess.py \
    gui/wxpython/core/debug.py \
    gui/wxpython/core/gcmd.py \
    gui/wxpython/core/globalvar.py \
    gui/wxpython/core/menudata.py \
    gui/wxpython/core/render.py \
    gui/wxpython/core/settings.py \
    gui/wxpython/core/units.py \
    gui/wxpython/core/utils.py \
    gui/wxpython/core/workspace.py \
    gui/wxpython/create__init__.py \
    gui/wxpython/dbmgr/dialogs.py \
    gui/wxpython/dbmgr/manager.py \
    gui/wxpython/dbmgr/sqlbuilder.py \
    gui/wxpython/dbmgr/vinfo.py \
    gui/wxpython/gcp/manager.py \
    gui/wxpython/gcp/mapdisplay.py \
    gui/wxpython/gcp/toolbars.py \
    gui/wxpython/gis_set.py \
    gui/wxpython/gmodeler/dialogs.py \
    gui/wxpython/gmodeler/frame.py \
    gui/wxpython/gmodeler/menudata.py \
    gui/wxpython/gmodeler/model.py \
    gui/wxpython/gmodeler/preferences.py \
    gui/wxpython/gmodeler/toolbars.py \
    gui/wxpython/gui_core/dialogs.py \
    gui/wxpython/gui_core/forms.py \
    gui/wxpython/gui_core/ghelp.py \
    gui/wxpython/gui_core/goutput.py \
    gui/wxpython/gui_core/gselect.py \
    gui/wxpython/gui_core/mapdisp.py \
    gui/wxpython/gui_core/mapwindow.py \
    gui/wxpython/gui_core/menu.py \
    gui/wxpython/gui_core/preferences.py \
    gui/wxpython/gui_core/prompt.py \
    gui/wxpython/gui_core/toolbars.py \
    gui/wxpython/gui_core/widgets.py \
    gui/wxpython/icons/__init__.py \
    gui/wxpython/icons/grass2_icons.py \
    gui/wxpython/icons/grass_icons.py \
    gui/wxpython/icons/icon.py \
    gui/wxpython/icons/silk_icons.py \
    gui/wxpython/lmgr/frame.py \
    gui/wxpython/lmgr/layertree.py \
    gui/wxpython/lmgr/menudata.py \
    gui/wxpython/lmgr/pyshell.py \
    gui/wxpython/lmgr/toolbars.py \
    gui/wxpython/location_wizard/base.py \
    gui/wxpython/location_wizard/dialogs.py \
    gui/wxpython/location_wizard/wizard.py \
    gui/wxpython/mapdisp/frame.py \
    gui/wxpython/mapdisp/gprint.py \
    gui/wxpython/mapdisp/main.py \
    gui/wxpython/mapdisp/mapwindow.py \
    gui/wxpython/mapdisp/overlays.py \
    gui/wxpython/mapdisp/statusbar.py \
    gui/wxpython/mapdisp/toolbars.py \
    gui/wxpython/modules/colorrules.py \
    gui/wxpython/modules/extensions.py \
    gui/wxpython/modules/histogram.py \
    gui/wxpython/modules/mcalc_builder.py \
    gui/wxpython/modules/ogc_services.py \
    gui/wxpython/modules/vclean.py \
    gui/wxpython/nviz/animation.py \
    gui/wxpython/nviz/main.py \
    gui/wxpython/nviz/mapwindow.py \
    gui/wxpython/nviz/preferences.py \
    gui/wxpython/nviz/tools.py \
    gui/wxpython/nviz/workspace.py \
    gui/wxpython/nviz/wxnviz.py \
    gui/wxpython/psmap/dialogs.py \
    gui/wxpython/psmap/frame.py \
    gui/wxpython/psmap/instructions.py \
    gui/wxpython/psmap/menudata.py \
    gui/wxpython/psmap/toolbars.py \
    gui/wxpython/psmap/utils.py \
    gui/wxpython/scripts/p.cmd.py \
    gui/wxpython/scripts/p.db.py \
    gui/wxpython/scripts/p.mon.py \
    gui/wxpython/scripts/p.rast.py \
    gui/wxpython/scripts/p.vect.py \
    gui/wxpython/scripts/vkrige.py \
    gui/wxpython/tools/update_menudata.py \
    gui/wxpython/vdigit/dialogs.py \
    gui/wxpython/vdigit/main.py \
    gui/wxpython/vdigit/mapwindow.py \
    gui/wxpython/vdigit/preferences.py \
    gui/wxpython/vdigit/toolbars.py \
    gui/wxpython/vdigit/wxdigit.py \
    gui/wxpython/vdigit/wxdisplay.py \
    gui/wxpython/wxgui.py \
    gui/wxpython/wxplot/base.py \
    gui/wxpython/wxplot/dialogs.py \
    gui/wxpython/wxplot/profile.py \
    imagery/i.atcorr/create_iwave.py \
    lib/python/__init__.py \
    lib/python/array.py \
    lib/python/core.py \
    lib/python/ctypes/__init__.py \
    lib/python/ctypes/ctypesgen.py \
    lib/python/ctypes/ctypesgencore/__init__.py \
    lib/python/ctypes/ctypesgencore/ctypedescs.py \
    lib/python/ctypes/ctypesgencore/descriptions.py \
    lib/python/ctypes/ctypesgencore/expressions.py \
    lib/python/ctypes/ctypesgencore/libraryloader.py \
    lib/python/ctypes/ctypesgencore/messages.py \
    lib/python/ctypes/ctypesgencore/options.py \
    lib/python/ctypes/ctypesgencore/parser/__init__.py \
    lib/python/ctypes/ctypesgencore/parser/cdeclarations.py \
    lib/python/ctypes/ctypesgencore/parser/cgrammar.py \
    lib/python/ctypes/ctypesgencore/parser/cparser.py \
    lib/python/ctypes/ctypesgencore/parser/ctypesparser.py \
    lib/python/ctypes/ctypesgencore/parser/datacollectingparser.py \
    lib/python/ctypes/ctypesgencore/parser/lex.py \
    lib/python/ctypes/ctypesgencore/parser/lextab.py \
    lib/python/ctypes/ctypesgencore/parser/parsetab.py \
    lib/python/ctypes/ctypesgencore/parser/pplexer.py \
    lib/python/ctypes/ctypesgencore/parser/preprocessor.py \
    lib/python/ctypes/ctypesgencore/parser/yacc.py \
    lib/python/ctypes/ctypesgencore/printer/__init__.py \
    lib/python/ctypes/ctypesgencore/printer/defaultheader.py \
    lib/python/ctypes/ctypesgencore/printer/preamble.py \
    lib/python/ctypes/ctypesgencore/printer/printer.py \
    lib/python/ctypes/ctypesgencore/printer/test.py \
    lib/python/ctypes/ctypesgencore/processor/__init__.py \
    lib/python/ctypes/ctypesgencore/processor/dependencies.py \
    lib/python/ctypes/ctypesgencore/processor/operations.py \
    lib/python/ctypes/ctypesgencore/processor/pipeline.py \
    lib/python/ctypes/loader.py \
    lib/python/ctypes/preamble.py \
    lib/python/db.py \
    lib/python/grass__init__.py \
    lib/python/raster.py \
    lib/python/task.py \
    lib/python/vector.py ]

post-patch {
   reinplace "s|@@APPLICATIONS_DIR@@|${applications_dir}|" ${worksrcpath}/configure
   # The reinplacing for the python scripts has been moved into the
   # python variants
   file copy ${worksrcpath}/configure.in ${worksrcpath}/configure.ac
}

configure.ldflags-append -framework OpenGL -framework Accelerate -lgeos -ljpeg
configure.args-append \
    --with-blas \
    --with-cairo \
    --with-cairo-includes=${prefix}/include/cairo \
    --with-cairo-libs=${prefix}/lib \
    --with-curses \
    --with-fftw \
    --with-fftw-includes=${prefix}/include \
    --with-fftw-libs=${prefix}/lib \
    --with-freetype \
    --with-freetype-includes=${prefix}/include/freetype2 \
    --with-freetype-libs=${prefix}/lib \
    --with-gdal=${prefix}/bin/gdal-config \
    --with-geos=${prefix}/bin/geos-config \
    --with-jpeg \
    --with-jpeg-includes=${prefix}/include \
    --with-jpeg-libs=${prefix}/lib \
    --with-lapack \
    --with-motif \
    --with-motif-includes=${prefix}/include \
    --with-motif-libs=${prefix}/lib \
    --with-nls \
    --with-png \
    --with-png-includes=${prefix}/include \
    --with-png-libs=${prefix}/lib \
    --with-proj-includes=${prefix}/lib/proj47/include \
    --with-proj-libs=${prefix}/lib/proj47/lib \
    --with-proj-share=${prefix}/lib/proj47/share/proj \
    --with-readline \
    --with-readline-includes=${prefix}/include/readline \
    --with-readline-libs=${prefix}/lib \
    --with-regex \
    --with-regex-includes=/usr/include \
    --with-regex-lib=/usr/lib \
    --with-tcltk \
    --with-tcltk-includes=${prefix}/include \
    --with-tcltk-libs=${prefix}/lib \
    --with-tiff \
    --with-tiff-includes=${prefix}/include \
    --with-tiff-libs=${prefix}/lib \
    --with-zlib-includes=${prefix}/include \
    --with-zlib-libs=${prefix}/lib \
    --with-cxx \
    --with-x \
    --x-includes=${prefix}/include \
    --x-libraries=${prefix}/lib \
    --without-ffmpeg \
    --without-glw \
    --without-odbc \
    --without-postgres \
    --without-python \
    --without-sqlite \
    --disable-python \
    --disable-wxwidgets \
    --enable-largefile

configure.env-append \
    NAD2BIN=${prefix}/lib/proj47/bin/nad2bin \
    GDAL_BIN=${prefix}/bin \
    JASPERLIB=${prefix}/lib/libjasper.dylib \
    JASPERHDR_DIR=${prefix}/include \
    JPEGINCPATH=${prefix}/include \
    JPEGLIBPATH=${prefix}/lib \
    JPEGLIB=${prefix}/lib/libjpeg.dylib \
    DBMINCPATH=${prefix}/include \
    DBMLIBPATH=${prefix}/lib \
    DBMLIB=${prefix}/lib/libgdbm.dylb \
    SWIG=${prefix}/bin/swig

platform macosx {
    #TODO: re-enable building of app bundle
    # Some older compilers do not support `-isystem`, so blacklist:
    compiler.blacklist-append gcc-3.3 *gcc-4.0
    configure.cppflags-append \
        -isystem/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers
    configure.ldflags-append \
        -L/System/Library/Frameworks/OpenGL.framework/Versions/Current/Libraries
    if {[variant_isset universal]} {
        # the "${universal_archs}" variable has to be quoted
        # here to work:
        configure.args-append \
            --with-macosx-archs="${universal_archs}"
    } else {
        configure.args-append \
            --with-macosx-archs=${build_arch}
    }
}

# I found this condition for detecting 64-bitness in some other
# Portfile, but I forget which:
if {([variant_isset universal] && [string match *64* $universal_archs]) || (![variant_isset universal] && [string match *64 $build_arch])} {
    configure.args-append \
        --enable-64bit
}

post-configure {
    reinplace "s|@SWIG@|${prefix}/bin/swig|g" ${worksrcpath}/include/Make/Platform.make
    reinplace "s|@JPEGINCPATH@|-I${prefix}/local/include|g" ${worksrcpath}/include/Make/Platform.make
    reinplace "s|@JPEGLIBPATH@|-L${prefix}/local/lib|g" ${worksrcpath}/include/Make/Platform.make
    reinplace "s|@JPEGLIB@|-ljpeg|g" ${worksrcpath}/include/Make/Platform.make
    reinplace "s|@DBMINCPATH@|-I${prefix}/local/include|g" ${worksrcpath}/include/Make/Platform.make
    reinplace "s|@DBMLIBPATH@|-L${prefix}/local/lib|g" ${worksrcpath}/include/Make/Platform.make
    reinplace "s|@DBMLIB@|-lgdbm|g" ${worksrcpath}/include/Make/Platform.make
    reinplace "s|@USE_GLWM@||g" ${worksrcpath}/include/Make/Platform.make
    # This next reinplace ensures that we are UsingTheRightCompiler
    # for gem:
    reinplace "s|CC=gcc|CC=${configure.cc}|g" ${worksrcpath}/gem/Makefile
    # This next reinplace prepends ${configure.cflags} to existing ones
    # (note the escaped space at the end):
    reinplace "s|CFLAGS=|CFLAGS=${configure.cflags}\ |g" ${worksrcpath}/gem/Makefile
    reinplace "s|/usr/local/bin|${prefix}/bin|g" ${worksrcpath}/gem/Makefile
}

build.target    default
build.type      gnu

# setting PYTHON in the environment has been moved to the python variants
build.env-append \
    NAD2BIN=${prefix}/lib/proj47/bin/nad2bin \
    GDAL_BIN=${prefix}/bin \
    JASPERLIB=${prefix}/lib/libjasper.dylib \
    JASPERHDR_DIR=${prefix}/include \
    CC=${configure.cc} \
    CFLAGS=${configure.cflags}

# This is writing over the previous reinplace we did, but it is
# necessary to make sure that gem respects the destroot:
pre-destroot {
    reinplace "s|${prefix}/bin|${destroot}${prefix}/bin|g" ${worksrcpath}/gem/Makefile
}

platform macosx {
    pre-destroot {
        reinplace "s|/Library/|${prefix}/Library/|g" ${worksrcpath}/macosx/Makefile
    }
    # Setting this is temporary until I can ensure that it stops
    # doing this:
    destroot.violate_mtree yes
}

variant mysql5 description {Add MySQL 5 support} {
    depends_lib-append    path:bin/mysql_config5:mysql5
    require_active_variants gdal mysql5
    configure.args-append --with-mysql
    configure.args-append --with-mysql-includes=${prefix}/include/mysql5/mysql
    configure.args-append --with-mysql-libs=${prefix}/lib/mysql5/mysql
    configure.env-append  MYSQLD_CONFIG=${prefix}/lib/mysql5/bin/mysql_config
}

variant postgresql83 conflicts postgresql84 postgresql90 postgresql91 postgresql92 postgresql93 description {Add PostgreSQL 8.3 support} {
    depends_lib-append    port:postgresql83
    require_active_variants gdal postgresql83
    configure.args-delete --without-postgres
    configure.args-append --with-postgres
    configure.args-append --with-postgres-includes=${prefix}/include/postgresql83
    configure.args-append --with-postgres-libs=${prefix}/lib/postgresql83
}

variant postgresql84 conflicts postgresql83 postgresql90 postgresql91 postgresql92 postgresql93 description {Add PostgreSQL 8.4 support} {
    depends_lib-append    port:postgresql84
    require_active_variants gdal postgresql84
    configure.args-delete --without-postgres
    configure.args-append --with-postgres
    configure.args-append --with-postgres-includes=${prefix}/include/postgresql84
    configure.args-append --with-postgres-libs=${prefix}/lib/postgresql84
}

variant postgresql90 conflicts postgresql83 postgresql84 postgresql91 postgresql92 postgresql93 description {Add PostgreSQL 9.0 support} {
    depends_lib-append    port:postgresql90
    require_active_variants gdal postgresql90
    configure.args-delete --without-postgres
    configure.args-append --with-postgres
    configure.args-append --with-postgres-includes=${prefix}/include/postgresql90
    configure.args-append --with-postgres-libs=${prefix}/lib/postgresql90
}

variant postgresql91 conflicts postgresql83 postgresql84 postgresql90 postgresql92 postgresql93 description {Add PostgreSQL 9.1 support} {
    depends_lib-append    port:postgresql91
    require_active_variants gdal postgresql91
    configure.args-delete --without-postgres
    configure.args-append --with-postgres
    configure.args-append --with-postgres-includes=${prefix}/include/postgresql91
    configure.args-append --with-postgres-libs=${prefix}/lib/postgresql91
}

variant postgresql92 conflicts postgresql83 postgresql84 postgresql90 postgresql91 postgresql93 description {Add PostgreSQL 9.2 support} {
    depends_lib-append    port:postgresql92
    require_active_variants gdal postgresql92
    configure.args-delete --without-postgres
    configure.args-append --with-postgres
    configure.args-append --with-postgres-includes=${prefix}/include/postgresql92
    configure.args-append --with-postgres-libs=${prefix}/lib/postgresql92
}

variant postgresql93 conflicts postgresql83 postgresql84 postgresql90 postgresql91 postgresql92 description {Add PostgreSQL 9.3 support} {
    depends_lib-append    port:postgresql93
    require_active_variants gdal postgresql93
    configure.args-delete --without-postgres
    configure.args-append --with-postgres
    configure.args-append --with-postgres-includes=${prefix}/include/postgresql93
    configure.args-append --with-postgres-libs=${prefix}/lib/postgresql93
}

variant sqlite3 description {Add SQLite 3 support} {
    depends_lib-append    port:sqlite3
    require_active_variants gdal sqlite3
    configure.args-delete --without-sqlite
    configure.args-append --with-sqlite
    configure.args-append --with-sqlite-includes=${prefix}/include
    configure.args-append --with-sqlite-libs=${prefix}/lib
}

variant ffmpeg description {Add ffmpeg support} {
    depends_lib-append    path:lib/libavcodec.dylib:ffmpeg
    configure.args-delete --without-ffmpeg
    configure.args-append --with-ffmpeg \
                          --with-ffmpeg-includes=\"${prefix}/include/libavcodec  \
                                                   ${prefix}/include/libavformat \
                                                   ${prefix}/include/libswscale\" \
                          --with-ffmpeglibs=${prefix}/lib
}

# python26 variant is only present to allow 'grass +wxgtk28' to coexist
# with py27-wxpython-3.0
# Once support for wxWidgets 3.0 is complete, support for Python 2.6 may
# be removed
variant python26 conflicts python27 description {use python26 for python support} {
    depends_lib-append    port:python26
    require_active_variants gdal python26
    set python_bin        ${frameworks_dir}/Python.framework/Versions/2.6/bin/python2.6
    # Enable support for wxGUI Python extensions
    # (by removing this we would NOT need to depend on py-wxpython-x.y)
    configure.args-delete --disable-python
    configure.args-replace --without-python --with-python=${frameworks_dir}/Python.framework/Versions/2.6/bin/python2.6-config
    build.args-append     PYTHON=${python_bin}
    build.env-append      PYTHON=${python_bin}
    # TODO: this port does NOT work with the python portgroup because
    # the group used to change too much
    # But it would make sense to fix this in such a way that
    # python_bin could be determined automatically

    post-patch {
        # for some reason it fails if python_bin is not also defined
        # inside post-patch (figure out why)
        set python_bin ${frameworks_dir}/Python.framework/Versions/2.6/bin/python2.6
        reinplace "s|@@PYTHON@@|${python_bin}|" ${worksrcpath}/lib/init/grass.src
        foreach f ${python_scripts} {
            reinplace "s|/usr/bin/env python|${python_bin}|" ${f}
        }
    }
}

variant python27 conflicts python26 description {use python27 for python support} {
    depends_lib-append    port:python27
    require_active_variants gdal python27
    set python_bin        ${frameworks_dir}/Python.framework/Versions/2.7/bin/python2.7
    configure.args-delete --disable-python
    configure.args-replace --without-python --with-python=${frameworks_dir}/Python.framework/Versions/2.7/bin/python2.7-config
    build.args-append     PYTHON=${python_bin}
    build.env-append      PYTHON=${python_bin}

    post-patch {
        set python_bin ${frameworks_dir}/Python.framework/Versions/2.7/bin/python2.7
        reinplace "s|@@PYTHON@@|${python_bin}|" ${worksrcpath}/lib/init/grass.src
        foreach f ${python_scripts} {
            reinplace "s|/usr/bin/env python|${python_bin}|" ${f}
        }
    }
}

# wxWidgets is optional and is disabled above with --disable-wxwidgets
# therefore we use configure.args-replace
#       grass 4.6.3 is not compatible with wxWidgets 3.0 yet
variant wxwidgets30 conflicts wxwidgets28 wxgtk28 description {Use Cocoa-based wxWidgets 3.0 (experimental)} {
    wxWidgets.use         wxPython-3.0
    depends_lib-append    port:${wxWidgets.port}
    configure.args-replace --disable-wxwidgets --with-wxwidgets=${wxWidgets.wxconfig}
}
variant wxwidgets28 conflicts wxwidgets30 wxgtk28 universal description {Use Carbon-based wxWidgets 2.8} {
    # untested (might not work)
    wxWidgets.use         wxWidgets-2.8
    depends_lib-append    port:${wxWidgets.port}
    configure.args-replace --disable-wxwidgets --with-wxwidgets=${wxWidgets.wxconfig}
}
variant wxgtk28 conflicts wxwidgets30 wxwidgets28 description {Use GTK-based wxWidgets 2.8} {
    wxWidgets.use         wxGTK-2.8
    depends_lib-append    port:${wxWidgets.port}
    configure.args-replace --disable-wxwidgets --with-wxwidgets=${wxWidgets.wxconfig}
}

if {![variant_isset wxwidgets30] && ![variant_isset wxwidgets28] && ![variant_isset wxgtk28]} {
    default_variants-append +wxgtk28
}
if {![variant_isset python26] && ![variant_isset python27]} {
    if {[variant_isset wxgtk28] || [variant_isset wxwidgets28]} {
        default_variants-append +python26
    } else {
        default_variants-append +python27
    }
}

# TODO: if py27-wxpython-3.0 is installed, grass +wxgtk28 cannot
#       be installed with +python27
#       We could remove this limitation by disabling wxpython support
#       altogether (in case there is demand for it)
# TODO: the code below is ugly; any suggestions for improving it are
#       welcome
if {[variant_isset wxwidgets30]} {
    if {[variant_isset python26]} {
        depends_lib-append port:py26-wxpython-3.0
    } elseif {[variant_isset python27]} {
        depends_lib-append port:py27-wxpython-3.0
    }
} else {
    if {[variant_isset python26]} {
        depends_lib-append port:py26-wxpython-2.8
        if {[variant_isset wxwidgets28]} {
            require_active_variants py26-wxpython-2.8 carbon gtk
        } else {
            require_active_variants py26-wxpython-2.8 gtk carbon
        }
    } elseif {[variant_isset python27]} {
        depends_lib-append port:py27-wxpython-2.8
        if {[variant_isset wxwidgets28]} {
            require_active_variants py27-wxpython-2.8 carbon gtk
        } else {
            require_active_variants py27-wxpython-2.8 gtk carbon
        }
    }
}

if {[variant_isset python26] || [variant_isset python27]} {
    depends_build-append port:swig-python
}

# Prevent wxPython from being used when the user does not specifically
# select a variant that is known to work with wxPython
# (so far only wxwidgets30 and wxgtk28 work with wxPython, but NOT
# wxwidgets28...):
if {![variant_isset wxwidgets30] && ![variant_isset wxgtk28]} {
    post-configure {
        ui_debug "Removing wxpython from SUBDIRS in ${worksrcpath}/gui/Makefile"
        reinplace "s|wxpython||g" ${worksrcpath}/gui/Makefile
    }
}

# This is slightly modified from the standard Fortran recipe; note the
# added reinplaces:
set gcc_versions {4.3 4.4 4.5 4.6 4.7 4.8 4.9}
set default_fortran_variant +gcc48
set g95_conflicts {}

foreach ver ${gcc_versions} {
    set ver_no_dot [join [split ${ver} "."] ""]

    set variant_line {variant gcc${ver_no_dot} description "build with gfortran from gcc${ver_no_dot}" conflicts g95}

    foreach over ${gcc_versions} {
        if {${ver} == ${over}} {
            continue
        }

        set over_no_dot [join [split ${over} "."] ""]
        append variant_line " conflicts gcc${over_no_dot}"
    }
    append variant_line { {}}

    eval ${variant_line}

    append g95_conflicts " conflicts gcc${ver_no_dot}"

    if {[variant_isset gcc${ver_no_dot}]} {
        if {${default_fortran_variant} != "+gcc${ver_no_dot}"} {
            set default_fortran_variant ""
        }
    }
}

eval [concat {variant g95 description {build with g95}} ${g95_conflicts} {{}}]

if {[variant_isset g95]} {
    if {${default_fortran_variant} != "+g95"} {
        set default_fortran_variant ""
    }
}

if {${default_fortran_variant} != ""} {
    default_variants-append "${default_fortran_variant}"
}

foreach ver ${gcc_versions} {
    set ver_no_dot [join [split ${ver} "."] ""]

    if {[variant_isset gcc${ver_no_dot}]} {
        depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
        depends_build-append port:gcc${ver_no_dot}

        configure.ldflags-append -lgcc
        configure.fc  ${prefix}/bin/gfortran-mp-${ver}
        configure.f77 ${prefix}/bin/gfortran-mp-${ver}
        configure.f90 ${prefix}/bin/gfortran-mp-${ver}
        post-configure {
            reinplace "s|@F77@|${configure.f77}|g" ${worksrcpath}/include/Make/Platform.make
        }
    }
}

if {[variant_isset g95]} {
    depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
    depends_build-append port:g95
    depends_skip_archcheck-append g95

    configure.ldflags-append -lgcc
    configure.fc  ${prefix}/bin/g95
    configure.f77 ${prefix}/bin/g95
    configure.f90 ${prefix}/bin/g95
    post-configure {
        reinplace "s|@F77@|${configure.f77}|g" ${worksrcpath}/include/Make/Platform.make
    }
}

livecheck.type      none
livecheck.url       http://grass.osgeo.org/devel/svntags.php
livecheck.regex     {GRASS ([0-9.]+):}
